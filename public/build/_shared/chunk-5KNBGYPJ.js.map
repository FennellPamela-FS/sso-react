{
  "version": 3,
  "sources": ["../../../node_modules/@remix-run/router/history.ts", "../../../node_modules/@remix-run/router/utils.ts", "../../../node_modules/@remix-run/router/router.ts", "../../../node_modules/react-router/lib/use-sync-external-store-shim/useSyncExternalStoreShimClient.ts", "../../../node_modules/react-router/lib/use-sync-external-store-shim/useSyncExternalStoreShimServer.ts", "../../../node_modules/react-router/lib/use-sync-external-store-shim/index.ts", "../../../node_modules/react-router/lib/context.ts", "../../../node_modules/react-router/lib/hooks.tsx", "../../../node_modules/react-router/lib/components.tsx", "../../../node_modules/react-router/index.ts", "../../../node_modules/react-router-dom/dom.ts", "../../../node_modules/react-router-dom/index.tsx", "../../../node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.development.js", "../../../node_modules/use-sync-external-store/shim/index.js", "../../../node_modules/@remix-run/react/dist/esm/_virtual/_rollupPluginBabelHelpers.js", "../../../node_modules/@remix-run/react/dist/esm/errorBoundaries.js", "../../../node_modules/@remix-run/react/dist/esm/invariant.js", "../../../node_modules/@remix-run/react/dist/esm/routeModules.js", "../../../node_modules/@remix-run/react/dist/esm/links.js", "../../../node_modules/@remix-run/react/dist/esm/markup.js", "../../../node_modules/@remix-run/react/dist/esm/transition.js", "../../../node_modules/@remix-run/react/dist/esm/components.js", "../../../node_modules/@remix-run/react/dist/esm/errors.js", "../../../node_modules/@remix-run/react/dist/esm/data.js", "../../../node_modules/@remix-run/react/dist/esm/routes.js", "../../../node_modules/@remix-run/react/dist/esm/browser.js", "../../../node_modules/@remix-run/react/dist/esm/scroll-restoration.js", "../../../node_modules/react-router-dom/server.js", "../../../node_modules/@remix-run/react/dist/esm/server.js", "../../../node_modules/@remix-run/react/dist/esm/index.js"],
  "sourcesContent": ["////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Actions represent the type of change to a location value.\n */\nexport enum Action {\n  /**\n   * A POP indicates a change to an arbitrary index in the history stack, such\n   * as a back or forward navigation. It does not describe the direction of the\n   * navigation, only that the current index changed.\n   *\n   * Note: This is the default action for newly created history objects.\n   */\n  Pop = \"POP\",\n\n  /**\n   * A PUSH indicates a new entry being added to the history stack, such as when\n   * a link is clicked and a new page loads. When this happens, all subsequent\n   * entries in the stack are lost.\n   */\n  Push = \"PUSH\",\n\n  /**\n   * A REPLACE indicates the entry at the current index in the history stack\n   * being replaced by a new one.\n   */\n  Replace = \"REPLACE\",\n}\n\n/**\n * The pathname, search, and hash values of a URL.\n */\nexport interface Path {\n  /**\n   * A URL pathname, beginning with a /.\n   */\n  pathname: string;\n\n  /**\n   * A URL search string, beginning with a ?.\n   */\n  search: string;\n\n  /**\n   * A URL fragment identifier, beginning with a #.\n   */\n  hash: string;\n}\n\n/**\n * An entry in a history stack. A location contains information about the\n * URL path, as well as possibly some arbitrary state and a key.\n */\nexport interface Location extends Path {\n  /**\n   * A value of arbitrary data associated with this location.\n   */\n  state: any;\n\n  /**\n   * A unique string associated with this location. May be used to safely store\n   * and retrieve data in some other storage API, like `localStorage`.\n   *\n   * Note: This value is always \"default\" on the initial location.\n   */\n  key: string;\n}\n\n/**\n * A change to the current location.\n */\nexport interface Update {\n  /**\n   * The action that triggered the change.\n   */\n  action: Action;\n\n  /**\n   * The new location.\n   */\n  location: Location;\n\n  /**\n   * The delta between this location and the former location in the history stack\n   */\n  delta: number;\n}\n\n/**\n * A function that receives notifications about location changes.\n */\nexport interface Listener {\n  (update: Update): void;\n}\n\n/**\n * Describes a location that is the destination of some navigation, either via\n * `history.push` or `history.replace`. May be either a URL or the pieces of a\n * URL path.\n */\nexport type To = string | Partial<Path>;\n\n/**\n * A history is an interface to the navigation stack. The history serves as the\n * source of truth for the current location, as well as provides a set of\n * methods that may be used to change it.\n *\n * It is similar to the DOM's `window.history` object, but with a smaller, more\n * focused API.\n */\nexport interface History {\n  /**\n   * The last action that modified the current location. This will always be\n   * Action.Pop when a history instance is first created. This value is mutable.\n   */\n  readonly action: Action;\n\n  /**\n   * The current location. This value is mutable.\n   */\n  readonly location: Location;\n\n  /**\n   * Returns a valid href for the given `to` value that may be used as\n   * the value of an <a href> attribute.\n   *\n   * @param to - The destination URL\n   */\n  createHref(to: To): string;\n\n  /**\n   * Returns a URL for the given `to` value\n   *\n   * @param to - The destination URL\n   */\n  createURL(to: To): URL;\n\n  /**\n   * Encode a location the same way window.history would do (no-op for memory\n   * history) so we ensure our PUSH/REPLACE navigations for data routers\n   * behave the same as POP\n   *\n   * @param to Unencoded path\n   */\n  encodeLocation(to: To): Path;\n\n  /**\n   * Pushes a new location onto the history stack, increasing its length by one.\n   * If there were any entries in the stack after the current one, they are\n   * lost.\n   *\n   * @param to - The new URL\n   * @param state - Data to associate with the new location\n   */\n  push(to: To, state?: any): void;\n\n  /**\n   * Replaces the current location in the history stack with a new one.  The\n   * location that was replaced will no longer be available.\n   *\n   * @param to - The new URL\n   * @param state - Data to associate with the new location\n   */\n  replace(to: To, state?: any): void;\n\n  /**\n   * Navigates `n` entries backward/forward in the history stack relative to the\n   * current index. For example, a \"back\" navigation would use go(-1).\n   *\n   * @param delta - The delta in the stack index\n   */\n  go(delta: number): void;\n\n  /**\n   * Sets up a listener that will be called whenever the current location\n   * changes.\n   *\n   * @param listener - A function that will be called when the location changes\n   * @returns unlisten - A function that may be used to stop listening\n   */\n  listen(listener: Listener): () => void;\n}\n\ntype HistoryState = {\n  usr: any;\n  key?: string;\n  idx: number;\n};\n\nconst PopStateEventType = \"popstate\";\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Memory History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A user-supplied object that describes a location. Used when providing\n * entries to `createMemoryHistory` via its `initialEntries` option.\n */\nexport type InitialEntry = string | Partial<Location>;\n\nexport type MemoryHistoryOptions = {\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n  v5Compat?: boolean;\n};\n\n/**\n * A memory history stores locations in memory. This is useful in stateful\n * environments where there is no web browser, such as node tests or React\n * Native.\n */\nexport interface MemoryHistory extends History {\n  /**\n   * The current index in the history stack.\n   */\n  readonly index: number;\n}\n\n/**\n * Memory history stores the current location in memory. It is designed for use\n * in stateful non-browser environments like tests and React Native.\n */\nexport function createMemoryHistory(\n  options: MemoryHistoryOptions = {}\n): MemoryHistory {\n  let { initialEntries = [\"/\"], initialIndex, v5Compat = false } = options;\n  let entries: Location[]; // Declare so we can access from createMemoryLocation\n  entries = initialEntries.map((entry, index) =>\n    createMemoryLocation(\n      entry,\n      typeof entry === \"string\" ? null : entry.state,\n      index === 0 ? \"default\" : undefined\n    )\n  );\n  let index = clampIndex(\n    initialIndex == null ? entries.length - 1 : initialIndex\n  );\n  let action = Action.Pop;\n  let listener: Listener | null = null;\n\n  function clampIndex(n: number): number {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n  function getCurrentLocation(): Location {\n    return entries[index];\n  }\n  function createMemoryLocation(\n    to: To,\n    state: any = null,\n    key?: string\n  ): Location {\n    let location = createLocation(\n      entries ? getCurrentLocation().pathname : \"/\",\n      to,\n      state,\n      key\n    );\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in memory history: ${JSON.stringify(\n        to\n      )}`\n    );\n    return location;\n  }\n\n  function createHref(to: To) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  let history: MemoryHistory = {\n    get index() {\n      return index;\n    },\n    get action() {\n      return action;\n    },\n    get location() {\n      return getCurrentLocation();\n    },\n    createHref,\n    createURL(to) {\n      return new URL(createHref(to), \"http://localhost\");\n    },\n    encodeLocation(to: To) {\n      let path = typeof to === \"string\" ? parsePath(to) : to;\n      return {\n        pathname: path.pathname || \"\",\n        search: path.search || \"\",\n        hash: path.hash || \"\",\n      };\n    },\n    push(to, state) {\n      action = Action.Push;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 1 });\n      }\n    },\n    replace(to, state) {\n      action = Action.Replace;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 0 });\n      }\n    },\n    go(delta) {\n      action = Action.Pop;\n      let nextIndex = clampIndex(index + delta);\n      let nextLocation = entries[nextIndex];\n      index = nextIndex;\n      if (listener) {\n        listener({ action, location: nextLocation, delta });\n      }\n    },\n    listen(fn: Listener) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    },\n  };\n\n  return history;\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Browser History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A browser history stores the current location in regular URLs in a web\n * browser environment. This is the standard for most web apps and provides the\n * cleanest URLs the browser's address bar.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#browserhistory\n */\nexport interface BrowserHistory extends UrlHistory {}\n\nexport type BrowserHistoryOptions = UrlHistoryOptions;\n\n/**\n * Browser history stores the location in regular URLs. This is the standard for\n * most web apps, but it requires some configuration on the server to ensure you\n * serve the same app at multiple URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\n */\nexport function createBrowserHistory(\n  options: BrowserHistoryOptions = {}\n): BrowserHistory {\n  function createBrowserLocation(\n    window: Window,\n    globalHistory: Window[\"history\"]\n  ) {\n    let { pathname, search, hash } = window.location;\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      (globalHistory.state && globalHistory.state.usr) || null,\n      (globalHistory.state && globalHistory.state.key) || \"default\"\n    );\n  }\n\n  function createBrowserHref(window: Window, to: To) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  return getUrlBasedHistory(\n    createBrowserLocation,\n    createBrowserHref,\n    null,\n    options\n  );\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hash History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A hash history stores the current location in the fragment identifier portion\n * of the URL in a web browser environment.\n *\n * This is ideal for apps that do not control the server for some reason\n * (because the fragment identifier is never sent to the server), including some\n * shared hosting environments that do not provide fine-grained controls over\n * which pages are served at which URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#hashhistory\n */\nexport interface HashHistory extends UrlHistory {}\n\nexport type HashHistoryOptions = UrlHistoryOptions;\n\n/**\n * Hash history stores the location in window.location.hash. This makes it ideal\n * for situations where you don't want to send the location to the server for\n * some reason, either because you do cannot configure it or the URL space is\n * reserved for something else.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\n */\nexport function createHashHistory(\n  options: HashHistoryOptions = {}\n): HashHistory {\n  function createHashLocation(\n    window: Window,\n    globalHistory: Window[\"history\"]\n  ) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\",\n    } = parsePath(window.location.hash.substr(1));\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      (globalHistory.state && globalHistory.state.usr) || null,\n      (globalHistory.state && globalHistory.state.key) || \"default\"\n    );\n  }\n\n  function createHashHref(window: Window, to: To) {\n    let base = window.document.querySelector(\"base\");\n    let href = \"\";\n\n    if (base && base.getAttribute(\"href\")) {\n      let url = window.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n\n  function validateHashLocation(location: Location, to: To) {\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in hash history.push(${JSON.stringify(\n        to\n      )})`\n    );\n  }\n\n  return getUrlBasedHistory(\n    createHashLocation,\n    createHashHref,\n    validateHashLocation,\n    options\n  );\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region UTILS\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * @private\n */\nexport function invariant(value: boolean, message?: string): asserts value;\nexport function invariant<T>(\n  value: T | null | undefined,\n  message?: string\n): asserts value is T;\nexport function invariant(value: any, message?: string) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\n\nfunction warning(cond: any, message: string) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n\n/**\n * For browser-based histories, we combine the state and key into an object\n */\nfunction getHistoryState(location: Location, index: number): HistoryState {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index,\n  };\n}\n\n/**\n * Creates a Location object with a unique key from the given Path\n */\nexport function createLocation(\n  current: string | Location,\n  to: To,\n  state: any = null,\n  key?: string\n): Readonly<Location> {\n  let location: Readonly<Location> = {\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\",\n    ...(typeof to === \"string\" ? parsePath(to) : to),\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: (to && (to as Location).key) || key || createKey(),\n  };\n  return location;\n}\n\n/**\n * Creates a string URL path from the given pathname, search, and hash components.\n */\nexport function createPath({\n  pathname = \"/\",\n  search = \"\",\n  hash = \"\",\n}: Partial<Path>) {\n  if (search && search !== \"?\")\n    pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\")\n    pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\n\n/**\n * Parses a string URL path into its separate pathname, search, and hash components.\n */\nexport function parsePath(path: string): Partial<Path> {\n  let parsedPath: Partial<Path> = {};\n\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n\n  return parsedPath;\n}\n\nexport interface UrlHistory extends History {}\n\nexport type UrlHistoryOptions = {\n  window?: Window;\n  v5Compat?: boolean;\n};\n\nfunction getUrlBasedHistory(\n  getLocation: (window: Window, globalHistory: Window[\"history\"]) => Location,\n  createHref: (window: Window, to: To) => string,\n  validateLocation: ((location: Location, to: To) => void) | null,\n  options: UrlHistoryOptions = {}\n): UrlHistory {\n  let { window = document.defaultView!, v5Compat = false } = options;\n  let globalHistory = window.history;\n  let action = Action.Pop;\n  let listener: Listener | null = null;\n\n  let index = getIndex()!;\n  // Index should only be null when we initialize. If not, it's because the\n  // user called history.pushState or history.replaceState directly, in which\n  // case we should log a warning as it will result in bugs.\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState({ ...globalHistory.state, idx: index }, \"\");\n  }\n\n  function getIndex(): number {\n    let state = globalHistory.state || { idx: null };\n    return state.idx;\n  }\n\n  function handlePop() {\n    let nextAction = Action.Pop;\n    let nextIndex = getIndex();\n\n    if (nextIndex != null) {\n      let delta = nextIndex - index;\n      action = nextAction;\n      index = nextIndex;\n      if (listener) {\n        listener({ action, location: history.location, delta });\n      }\n    } else {\n      warning(\n        false,\n        // TODO: Write up a doc that explains our blocking strategy in detail\n        // and link to it here so people can understand better what is going on\n        // and how to avoid it.\n        `You are trying to block a POP navigation to a location that was not ` +\n          `created by @remix-run/router. The block will fail silently in ` +\n          `production, but in general you should do all navigation with the ` +\n          `router (instead of using window.history.pushState directly) ` +\n          `to avoid this situation.`\n      );\n    }\n  }\n\n  function push(to: To, state?: any) {\n    action = Action.Push;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n\n    // try...catch because iOS limits us to 100 pushState calls :/\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      // They are going to lose state here, but there is no real\n      // way to warn them about it since the page will refresh...\n      window.location.assign(url);\n    }\n\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 1 });\n    }\n  }\n\n  function replace(to: To, state?: any) {\n    action = Action.Replace;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 0 });\n    }\n  }\n\n  function createURL(to: To): URL {\n    // window.location.origin is \"null\" (the literal string value) in Firefox\n    // under certain conditions, notably when serving from a local HTML file\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=878297\n    let base =\n      window.location.origin !== \"null\"\n        ? window.location.origin\n        : window.location.href;\n\n    let href = typeof to === \"string\" ? to : createPath(to);\n    invariant(\n      base,\n      `No window.location.(origin|href) available to create URL for href: ${href}`\n    );\n    return new URL(href, base);\n  }\n\n  let history: History = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window, globalHistory);\n    },\n    listen(fn: Listener) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n\n      return () => {\n        window.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref(window, to);\n    },\n    createURL,\n    encodeLocation(to) {\n      // Encode a Location the same way window.location would\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash,\n      };\n    },\n    push,\n    replace,\n    go(n) {\n      return globalHistory.go(n);\n    },\n  };\n\n  return history;\n}\n\n//#endregion\n", "import type { Location, Path, To } from \"./history\";\nimport { invariant, parsePath } from \"./history\";\n\n/**\n * Map of routeId -> data returned from a loader/action/error\n */\nexport interface RouteData {\n  [routeId: string]: any;\n}\n\nexport enum ResultType {\n  data = \"data\",\n  deferred = \"deferred\",\n  redirect = \"redirect\",\n  error = \"error\",\n}\n\n/**\n * Successful result from a loader or action\n */\nexport interface SuccessResult {\n  type: ResultType.data;\n  data: any;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Successful defer() result from a loader or action\n */\nexport interface DeferredResult {\n  type: ResultType.deferred;\n  deferredData: DeferredData;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Redirect result from a loader or action\n */\nexport interface RedirectResult {\n  type: ResultType.redirect;\n  status: number;\n  location: string;\n  revalidate: boolean;\n}\n\n/**\n * Unsuccessful result from a loader or action\n */\nexport interface ErrorResult {\n  type: ResultType.error;\n  error: any;\n  headers?: Headers;\n}\n\n/**\n * Result from a loader or action - potentially successful or unsuccessful\n */\nexport type DataResult =\n  | SuccessResult\n  | DeferredResult\n  | RedirectResult\n  | ErrorResult;\n\nexport type MutationFormMethod = \"post\" | \"put\" | \"patch\" | \"delete\";\nexport type FormMethod = \"get\" | MutationFormMethod;\n\nexport type FormEncType =\n  | \"application/x-www-form-urlencoded\"\n  | \"multipart/form-data\";\n\n/**\n * @private\n * Internal interface to pass around for action submissions, not intended for\n * external consumption\n */\nexport interface Submission {\n  formMethod: FormMethod;\n  formAction: string;\n  formEncType: FormEncType;\n  formData: FormData;\n}\n\n/**\n * @private\n * Arguments passed to route loader/action functions.  Same for now but we keep\n * this as a private implementation detail in case they diverge in the future.\n */\ninterface DataFunctionArgs {\n  request: Request;\n  params: Params;\n  context?: any;\n}\n\n/**\n * Arguments passed to loader functions\n */\nexport interface LoaderFunctionArgs extends DataFunctionArgs {}\n\n/**\n * Arguments passed to action functions\n */\nexport interface ActionFunctionArgs extends DataFunctionArgs {}\n\n/**\n * Route loader function signature\n */\nexport interface LoaderFunction {\n  (args: LoaderFunctionArgs): Promise<Response> | Response | Promise<any> | any;\n}\n\n/**\n * Route action function signature\n */\nexport interface ActionFunction {\n  (args: ActionFunctionArgs): Promise<Response> | Response | Promise<any> | any;\n}\n\n/**\n * Route shouldRevalidate function signature.  This runs after any submission\n * (navigation or fetcher), so we flatten the navigation/fetcher submission\n * onto the arguments.  It shouldn't matter whether it came from a navigation\n * or a fetcher, what really matters is the URLs and the formData since loaders\n * have to re-run based on the data models that were potentially mutated.\n */\nexport interface ShouldRevalidateFunction {\n  (args: {\n    currentUrl: URL;\n    currentParams: AgnosticDataRouteMatch[\"params\"];\n    nextUrl: URL;\n    nextParams: AgnosticDataRouteMatch[\"params\"];\n    formMethod?: Submission[\"formMethod\"];\n    formAction?: Submission[\"formAction\"];\n    formEncType?: Submission[\"formEncType\"];\n    formData?: Submission[\"formData\"];\n    actionResult?: DataResult;\n    defaultShouldRevalidate: boolean;\n  }): boolean;\n}\n\n/**\n * Base RouteObject with common props shared by all types of routes\n */\ntype AgnosticBaseRouteObject = {\n  caseSensitive?: boolean;\n  path?: string;\n  id?: string;\n  loader?: LoaderFunction;\n  action?: ActionFunction;\n  hasErrorBoundary?: boolean;\n  shouldRevalidate?: ShouldRevalidateFunction;\n  handle?: any;\n};\n\n/**\n * Index routes must not have children\n */\nexport type AgnosticIndexRouteObject = AgnosticBaseRouteObject & {\n  children?: undefined;\n  index: true;\n};\n\n/**\n * Non-index routes may have children, but cannot have index\n */\nexport type AgnosticNonIndexRouteObject = AgnosticBaseRouteObject & {\n  children?: AgnosticRouteObject[];\n  index?: false;\n};\n\n/**\n * A route object represents a logical route, with (optionally) its child\n * routes organized in a tree-like structure.\n */\nexport type AgnosticRouteObject =\n  | AgnosticIndexRouteObject\n  | AgnosticNonIndexRouteObject;\n\nexport type AgnosticDataIndexRouteObject = AgnosticIndexRouteObject & {\n  id: string;\n};\n\nexport type AgnosticDataNonIndexRouteObject = AgnosticNonIndexRouteObject & {\n  children?: AgnosticDataRouteObject[];\n  id: string;\n};\n\n/**\n * A data route object, which is just a RouteObject with a required unique ID\n */\nexport type AgnosticDataRouteObject =\n  | AgnosticDataIndexRouteObject\n  | AgnosticDataNonIndexRouteObject;\n\n// Recursive helper for finding path parameters in the absence of wildcards\ntype _PathParam<Path extends string> =\n  // split path into individual path segments\n  Path extends `${infer L}/${infer R}`\n    ? _PathParam<L> | _PathParam<R>\n    : // find params after `:`\n    Path extends `:${infer Param}`\n    ? Param extends `${infer Optional}?`\n      ? Optional\n      : Param\n    : // otherwise, there aren't any params present\n      never;\n\n/**\n * Examples:\n * \"/a/b/*\" -> \"*\"\n * \":a\" -> \"a\"\n * \"/a/:b\" -> \"b\"\n * \"/a/blahblahblah:b\" -> \"b\"\n * \"/:a/:b\" -> \"a\" | \"b\"\n * \"/:a/b/:c/*\" -> \"a\" | \"c\" | \"*\"\n */\ntype PathParam<Path extends string> =\n  // check if path is just a wildcard\n  Path extends \"*\"\n    ? \"*\"\n    : // look for wildcard at the end of the path\n    Path extends `${infer Rest}/*`\n    ? \"*\" | _PathParam<Rest>\n    : // look for params in the absence of wildcards\n      _PathParam<Path>;\n\n// Attempt to parse the given string segment. If it fails, then just return the\n// plain string type as a default fallback. Otherwise return the union of the\n// parsed string literals that were referenced as dynamic segments in the route.\nexport type ParamParseKey<Segment extends string> =\n  // if could not find path params, fallback to `string`\n  [PathParam<Segment>] extends [never] ? string : PathParam<Segment>;\n\n/**\n * The parameters that were parsed from the URL path.\n */\nexport type Params<Key extends string = string> = {\n  readonly [key in Key]: string | undefined;\n};\n\n/**\n * A RouteMatch contains info about how a route matched a URL.\n */\nexport interface AgnosticRouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The route object that was used to match.\n   */\n  route: RouteObjectType;\n}\n\nexport interface AgnosticDataRouteMatch\n  extends AgnosticRouteMatch<string, AgnosticDataRouteObject> {}\n\nfunction isIndexRoute(\n  route: AgnosticRouteObject\n): route is AgnosticIndexRouteObject {\n  return route.index === true;\n}\n\n// Walk the route tree generating unique IDs where necessary so we are working\n// solely with AgnosticDataRouteObject's within the Router\nexport function convertRoutesToDataRoutes(\n  routes: AgnosticRouteObject[],\n  parentPath: number[] = [],\n  allIds: Set<string> = new Set<string>()\n): AgnosticDataRouteObject[] {\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, index];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(\n      route.index !== true || !route.children,\n      `Cannot specify children on an index route`\n    );\n    invariant(\n      !allIds.has(id),\n      `Found a route id collision on id \"${id}\".  Route ` +\n        \"id's must be globally unique within Data Router usages\"\n    );\n    allIds.add(id);\n\n    if (isIndexRoute(route)) {\n      let indexRoute: AgnosticDataIndexRouteObject = { ...route, id };\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute: AgnosticDataNonIndexRouteObject = {\n        ...route,\n        id,\n        children: route.children\n          ? convertRoutesToDataRoutes(route.children, treePath, allIds)\n          : undefined,\n      };\n      return pathOrLayoutRoute;\n    }\n  });\n}\n\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/utils/match-routes\n */\nexport function matchRoutes<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  locationArg: Partial<Location> | string,\n  basename = \"/\"\n): AgnosticRouteMatch<string, RouteObjectType>[] | null {\n  let location =\n    typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n\n  if (pathname == null) {\n    return null;\n  }\n\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    matches = matchRouteBranch<string, RouteObjectType>(\n      branches[i],\n      // Incoming pathnames are generally encoded from either window.location\n      // or from router.navigate, but we want to match against the unencoded\n      // paths in the route definitions.  Memory router locations won't be\n      // encoded here but there also shouldn't be anything to decode so this\n      // should be a safe operation.  This avoids needing matchRoutes to be\n      // history-aware.\n      safelyDecodeURI(pathname)\n    );\n  }\n\n  return matches;\n}\n\ninterface RouteMeta<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  relativePath: string;\n  caseSensitive: boolean;\n  childrenIndex: number;\n  route: RouteObjectType;\n}\n\ninterface RouteBranch<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  path: string;\n  score: number;\n  routesMeta: RouteMeta<RouteObjectType>[];\n}\n\nfunction flattenRoutes<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  branches: RouteBranch<RouteObjectType>[] = [],\n  parentsMeta: RouteMeta<RouteObjectType>[] = [],\n  parentPath = \"\"\n): RouteBranch<RouteObjectType>[] {\n  let flattenRoute = (\n    route: RouteObjectType,\n    index: number,\n    relativePath?: string\n  ) => {\n    let meta: RouteMeta<RouteObjectType> = {\n      relativePath:\n        relativePath === undefined ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route,\n    };\n\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(\n        meta.relativePath.startsWith(parentPath),\n        `Absolute route path \"${meta.relativePath}\" nested under path ` +\n          `\"${parentPath}\" is not valid. An absolute child route path ` +\n          `must start with the combined path of all its parent routes.`\n      );\n\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n\n    // Add the children before adding this route to the array so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n    if (route.children && route.children.length > 0) {\n      invariant(\n        // Our types know better, but runtime JS may not!\n        // @ts-expect-error\n        route.index !== true,\n        `Index routes must not have child routes. Please remove ` +\n          `all child routes from route path \"${path}\".`\n      );\n\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n\n    // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n    if (route.path == null && !route.index) {\n      return;\n    }\n\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta,\n    });\n  };\n  routes.forEach((route, index) => {\n    // coarse-grain check for optional params\n    if (route.path === \"\" || !route.path?.includes(\"?\")) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, exploded);\n      }\n    }\n  });\n\n  return branches;\n}\n\n/**\n * Computes all combinations of optional path segments for a given path,\n * excluding combinations that are ambiguous and of lower priority.\n *\n * For example, `/one/:two?/three/:four?/:five?` explodes to:\n * - `/one/three`\n * - `/one/:two/three`\n * - `/one/three/:four`\n * - `/one/three/:five`\n * - `/one/:two/three/:four`\n * - `/one/:two/three/:five`\n * - `/one/three/:four/:five`\n * - `/one/:two/three/:four/:five`\n */\nfunction explodeOptionalSegments(path: string): string[] {\n  let segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n\n  let [first, ...rest] = segments;\n\n  // Optional path segments are denoted by a trailing `?`\n  let isOptional = first.endsWith(\"?\");\n  // Compute the corresponding required segment: `foo?` -> `foo`\n  let required = first.replace(/\\?$/, \"\");\n\n  if (rest.length === 0) {\n    // Intepret empty string as omitting an optional segment\n    // `[\"one\", \"\", \"three\"]` corresponds to omitting `:two` from `/one/:two?/three` -> `/one/three`\n    return isOptional ? [required, \"\"] : [required];\n  }\n\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n\n  let result: string[] = [];\n\n  // All child paths with the prefix.  Do this for all children before the\n  // optional version for all children so we get consistent ordering where the\n  // parent optional aspect is preferred as required.  Otherwise, we can get\n  // child sections interspersed where deeper optional segments are higher than\n  // parent optional segments, where for example, /:two would explodes _earlier_\n  // then /:one.  By always including the parent as required _for all children_\n  // first, we avoid this issue\n  result.push(\n    ...restExploded.map((subpath) =>\n      subpath === \"\" ? required : [required, subpath].join(\"/\")\n    )\n  );\n\n  // Then if this is an optional value, add all child versions without\n  if (isOptional) {\n    result.push(...restExploded);\n  }\n\n  // for absolute paths, ensure `/` instead of empty segment\n  return result.map((exploded) =>\n    path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded\n  );\n}\n\nfunction rankRouteBranches(branches: RouteBranch[]): void {\n  branches.sort((a, b) =>\n    a.score !== b.score\n      ? b.score - a.score // Higher score first\n      : compareIndexes(\n          a.routesMeta.map((meta) => meta.childrenIndex),\n          b.routesMeta.map((meta) => meta.childrenIndex)\n        )\n  );\n}\n\nconst paramRe = /^:\\w+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\nconst isSplat = (s: string) => s === \"*\";\n\nfunction computeScore(path: string, index: boolean | undefined): number {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n\n  return segments\n    .filter((s) => !isSplat(s))\n    .reduce(\n      (score, segment) =>\n        score +\n        (paramRe.test(segment)\n          ? dynamicSegmentValue\n          : segment === \"\"\n          ? emptySegmentValue\n          : staticSegmentValue),\n      initialScore\n    );\n}\n\nfunction compareIndexes(a: number[], b: number[]): number {\n  let siblings =\n    a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n\n  return siblings\n    ? // If two routes are siblings, we should try to match the earlier sibling\n      // first. This allows people to have fine-grained control over the matching\n      // behavior by simply putting routes with identical paths in the order they\n      // want them tried.\n      a[a.length - 1] - b[b.length - 1]\n    : // Otherwise, it doesn't really make sense to rank non-siblings by index,\n      // so they sort equally.\n      0;\n}\n\nfunction matchRouteBranch<\n  ParamKey extends string = string,\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  branch: RouteBranch<RouteObjectType>,\n  pathname: string\n): AgnosticRouteMatch<ParamKey, RouteObjectType>[] | null {\n  let { routesMeta } = branch;\n\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches: AgnosticRouteMatch<ParamKey, RouteObjectType>[] = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname =\n      matchedPathname === \"/\"\n        ? pathname\n        : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath(\n      { path: meta.relativePath, caseSensitive: meta.caseSensitive, end },\n      remainingPathname\n    );\n\n    if (!match) return null;\n\n    Object.assign(matchedParams, match.params);\n\n    let route = meta.route;\n\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams as Params<ParamKey>,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(\n        joinPaths([matchedPathname, match.pathnameBase])\n      ),\n      route,\n    });\n\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n\n  return matches;\n}\n\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/utils/generate-path\n */\nexport function generatePath<Path extends string>(\n  originalPath: Path,\n  params: {\n    [key in PathParam<Path>]: string | null;\n  } = {} as any\n): string {\n  let path = originalPath;\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\n    warning(\n      false,\n      `Route path \"${path}\" will be treated as if it were ` +\n        `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n        `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n        `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n    );\n    path = path.replace(/\\*$/, \"/*\") as Path;\n  }\n\n  return (\n    path\n      .replace(\n        /^:(\\w+)(\\??)/g,\n        (_, key: PathParam<Path>, optional: string | undefined) => {\n          let param = params[key];\n          if (optional === \"?\") {\n            return param == null ? \"\" : param;\n          }\n          if (param == null) {\n            invariant(false, `Missing \":${key}\" param`);\n          }\n          return param;\n        }\n      )\n      .replace(\n        /\\/:(\\w+)(\\??)/g,\n        (_, key: PathParam<Path>, optional: string | undefined) => {\n          let param = params[key];\n          if (optional === \"?\") {\n            return param == null ? \"\" : `/${param}`;\n          }\n          if (param == null) {\n            invariant(false, `Missing \":${key}\" param`);\n          }\n          return `/${param}`;\n        }\n      )\n      // Remove any optional markers from optional static segments\n      .replace(/\\?/g, \"\")\n      .replace(/(\\/?)\\*/, (_, prefix, __, str) => {\n        const star = \"*\" as PathParam<Path>;\n\n        if (params[star] == null) {\n          // If no splat was provided, trim the trailing slash _unless_ it's\n          // the entire path\n          return str === \"/*\" ? \"/\" : \"\";\n        }\n\n        // Apply the splat\n        return `${prefix}${params[star]}`;\n      })\n  );\n}\n\n/**\n * A PathPattern is used to match on some portion of a URL pathname.\n */\nexport interface PathPattern<Path extends string = string> {\n  /**\n   * A string to match against a URL pathname. May contain `:id`-style segments\n   * to indicate placeholders for dynamic parameters. May also end with `/*` to\n   * indicate matching the rest of the URL pathname.\n   */\n  path: Path;\n  /**\n   * Should be `true` if the static portions of the `path` should be matched in\n   * the same case.\n   */\n  caseSensitive?: boolean;\n  /**\n   * Should be `true` if this pattern should match the entire URL pathname.\n   */\n  end?: boolean;\n}\n\n/**\n * A PathMatch contains info about how a PathPattern matched on a URL pathname.\n */\nexport interface PathMatch<ParamKey extends string = string> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The pattern that was used to match.\n   */\n  pattern: PathPattern;\n}\n\ntype Mutable<T> = {\n  -readonly [P in keyof T]: T[P];\n};\n\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/utils/match-path\n */\nexport function matchPath<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(\n  pattern: PathPattern<Path> | Path,\n  pathname: string\n): PathMatch<ParamKey> | null {\n  if (typeof pattern === \"string\") {\n    pattern = { path: pattern, caseSensitive: false, end: true };\n  }\n\n  let [matcher, paramNames] = compilePath(\n    pattern.path,\n    pattern.caseSensitive,\n    pattern.end\n  );\n\n  let match = pathname.match(matcher);\n  if (!match) return null;\n\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params: Params = paramNames.reduce<Mutable<Params>>(\n    (memo, paramName, index) => {\n      // We need to compute the pathnameBase here using the raw splat value\n      // instead of using params[\"*\"] later because it will be decoded then\n      if (paramName === \"*\") {\n        let splatValue = captureGroups[index] || \"\";\n        pathnameBase = matchedPathname\n          .slice(0, matchedPathname.length - splatValue.length)\n          .replace(/(.)\\/+$/, \"$1\");\n      }\n\n      memo[paramName] = safelyDecodeURIComponent(\n        captureGroups[index] || \"\",\n        paramName\n      );\n      return memo;\n    },\n    {}\n  );\n\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern,\n  };\n}\n\nfunction compilePath(\n  path: string,\n  caseSensitive = false,\n  end = true\n): [RegExp, string[]] {\n  warning(\n    path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"),\n    `Route path \"${path}\" will be treated as if it were ` +\n      `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n      `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n      `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n  );\n\n  let paramNames: string[] = [];\n  let regexpSource =\n    \"^\" +\n    path\n      .replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n      .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n      .replace(/[\\\\.*+^$?{}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n      .replace(/\\/:(\\w+)/g, (_: string, paramName: string) => {\n        paramNames.push(paramName);\n        return \"/([^\\\\/]+)\";\n      });\n\n  if (path.endsWith(\"*\")) {\n    paramNames.push(\"*\");\n    regexpSource +=\n      path === \"*\" || path === \"/*\"\n        ? \"(.*)$\" // Already matched the initial /, just match the rest\n        : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else if (end) {\n    // When matching to the end, ignore trailing slashes\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    // If our path is non-empty and contains anything beyond an initial slash,\n    // then we have _some_ form of path in our regex so we should expect to\n    // match only if we find the end of this path segment.  Look for an optional\n    // non-captured trailing slash (to match a portion of the URL) or the end\n    // of the path (if we've matched to the end).  We used to do this with a\n    // word boundary but that gives false positives on routes like\n    // /user-preferences since `-` counts as a word boundary.\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else {\n    // Nothing to match for \"\" or \"/\"\n  }\n\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n\n  return [matcher, paramNames];\n}\n\nfunction safelyDecodeURI(value: string) {\n  try {\n    return decodeURI(value);\n  } catch (error) {\n    warning(\n      false,\n      `The URL path \"${value}\" could not be decoded because it is is a ` +\n        `malformed URL segment. This is probably due to a bad percent ` +\n        `encoding (${error}).`\n    );\n\n    return value;\n  }\n}\n\nfunction safelyDecodeURIComponent(value: string, paramName: string) {\n  try {\n    return decodeURIComponent(value);\n  } catch (error) {\n    warning(\n      false,\n      `The value for the URL param \"${paramName}\" will not be decoded because` +\n        ` the string \"${value}\" is a malformed URL segment. This is probably` +\n        ` due to a bad percent encoding (${error}).`\n    );\n\n    return value;\n  }\n}\n\n/**\n * @private\n */\nexport function stripBasename(\n  pathname: string,\n  basename: string\n): string | null {\n  if (basename === \"/\") return pathname;\n\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n\n  // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n  let startIndex = basename.endsWith(\"/\")\n    ? basename.length - 1\n    : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n\n  return pathname.slice(startIndex) || \"/\";\n}\n\n/**\n * @private\n */\nexport function warning(cond: any, message: string): void {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging @remix-run/router!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/utils/resolve-path\n */\nexport function resolvePath(to: To, fromPathname = \"/\"): Path {\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\",\n  } = typeof to === \"string\" ? parsePath(to) : to;\n\n  let pathname = toPathname\n    ? toPathname.startsWith(\"/\")\n      ? toPathname\n      : resolvePathname(toPathname, fromPathname)\n    : fromPathname;\n\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash),\n  };\n}\n\nfunction resolvePathname(relativePath: string, fromPathname: string): string {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n\n  relativeSegments.forEach((segment) => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\n\nfunction getInvalidPathError(\n  char: string,\n  field: string,\n  dest: string,\n  path: Partial<Path>\n) {\n  return (\n    `Cannot include a '${char}' character in a manually specified ` +\n    `\\`to.${field}\\` field [${JSON.stringify(\n      path\n    )}].  Please separate it out to the ` +\n    `\\`to.${dest}\\` field. Alternatively you may provide the full path as ` +\n    `a string in <Link to=\"...\"> and the router will parse it for you.`\n  );\n}\n\n/**\n * @private\n *\n * When processing relative navigation we want to ignore ancestor routes that\n * do not contribute to the path, such that index/pathless layout routes don't\n * interfere.\n *\n * For example, when moving a route element into an index route and/or a\n * pathless layout route, relative link behavior contained within should stay\n * the same.  Both of the following examples should link back to the root:\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\" element={<Link to=\"..\"}>\n *   </Route>\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\">\n *       <Route element={<AccountsLayout />}>       // <-- Does not contribute\n *         <Route index element={<Link to=\"..\"} />  // <-- Does not contribute\n *       </Route\n *     </Route>\n *   </Route>\n */\nexport function getPathContributingMatches<\n  T extends AgnosticRouteMatch = AgnosticRouteMatch\n>(matches: T[]) {\n  return matches.filter(\n    (match, index) =>\n      index === 0 || (match.route.path && match.route.path.length > 0)\n  );\n}\n\n/**\n * @private\n */\nexport function resolveTo(\n  toArg: To,\n  routePathnames: string[],\n  locationPathname: string,\n  isPathRelative = false\n): Path {\n  let to: Partial<Path>;\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = { ...toArg };\n\n    invariant(\n      !to.pathname || !to.pathname.includes(\"?\"),\n      getInvalidPathError(\"?\", \"pathname\", \"search\", to)\n    );\n    invariant(\n      !to.pathname || !to.pathname.includes(\"#\"),\n      getInvalidPathError(\"#\", \"pathname\", \"hash\", to)\n    );\n    invariant(\n      !to.search || !to.search.includes(\"#\"),\n      getInvalidPathError(\"#\", \"search\", \"hash\", to)\n    );\n  }\n\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n\n  let from: string;\n\n  // Routing is relative to the current pathname if explicitly requested.\n  //\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n  if (isPathRelative || toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n\n    if (toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n\n      // Each leading .. segment means \"go up one route\" instead of \"go up one\n      // URL segment\".  This is a key difference from how <a href> works and a\n      // major reason we call this a \"to\" value instead of a \"href\".\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n\n      to.pathname = toSegments.join(\"/\");\n    }\n\n    // If there are more \"..\" segments than parent routes, resolve relative to\n    // the root / URL.\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n\n  let path = resolvePath(to, from);\n\n  // Ensure the pathname has a trailing slash if the original \"to\" had one\n  let hasExplicitTrailingSlash =\n    toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n  // Or if this was a link to the current path which has a trailing slash\n  let hasCurrentTrailingSlash =\n    (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (\n    !path.pathname.endsWith(\"/\") &&\n    (hasExplicitTrailingSlash || hasCurrentTrailingSlash)\n  ) {\n    path.pathname += \"/\";\n  }\n\n  return path;\n}\n\n/**\n * @private\n */\nexport function getToPathname(to: To): string | undefined {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || (to as Path).pathname === \"\"\n    ? \"/\"\n    : typeof to === \"string\"\n    ? parsePath(to).pathname\n    : to.pathname;\n}\n\n/**\n * @private\n */\nexport const joinPaths = (paths: string[]): string =>\n  paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n\n/**\n * @private\n */\nexport const normalizePathname = (pathname: string): string =>\n  pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n\n/**\n * @private\n */\nexport const normalizeSearch = (search: string): string =>\n  !search || search === \"?\"\n    ? \"\"\n    : search.startsWith(\"?\")\n    ? search\n    : \"?\" + search;\n\n/**\n * @private\n */\nexport const normalizeHash = (hash: string): string =>\n  !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n\nexport type JsonFunction = <Data>(\n  data: Data,\n  init?: number | ResponseInit\n) => Response;\n\n/**\n * This is a shortcut for creating `application/json` responses. Converts `data`\n * to JSON and sets the `Content-Type` header.\n */\nexport const json: JsonFunction = (data, init = {}) => {\n  let responseInit = typeof init === \"number\" ? { status: init } : init;\n\n  let headers = new Headers(responseInit.headers);\n  if (!headers.has(\"Content-Type\")) {\n    headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n  }\n\n  return new Response(JSON.stringify(data), {\n    ...responseInit,\n    headers,\n  });\n};\n\nexport interface TrackedPromise extends Promise<any> {\n  _tracked?: boolean;\n  _data?: any;\n  _error?: any;\n}\n\nexport class AbortedDeferredError extends Error {}\n\nexport class DeferredData {\n  private pendingKeysSet: Set<string> = new Set<string>();\n  private controller: AbortController;\n  private abortPromise: Promise<void>;\n  private unlistenAbortSignal: () => void;\n  private subscribers: Set<(aborted: boolean, settledKey?: string) => void> =\n    new Set();\n  data: Record<string, unknown>;\n  init?: ResponseInit;\n  deferredKeys: string[] = [];\n\n  constructor(data: Record<string, unknown>, responseInit?: ResponseInit) {\n    invariant(\n      data && typeof data === \"object\" && !Array.isArray(data),\n      \"defer() only accepts plain objects\"\n    );\n\n    // Set up an AbortController + Promise we can race against to exit early\n    // cancellation\n    let reject: (e: AbortedDeferredError) => void;\n    this.abortPromise = new Promise((_, r) => (reject = r));\n    this.controller = new AbortController();\n    let onAbort = () =>\n      reject(new AbortedDeferredError(\"Deferred data aborted\"));\n    this.unlistenAbortSignal = () =>\n      this.controller.signal.removeEventListener(\"abort\", onAbort);\n    this.controller.signal.addEventListener(\"abort\", onAbort);\n\n    this.data = Object.entries(data).reduce(\n      (acc, [key, value]) =>\n        Object.assign(acc, {\n          [key]: this.trackPromise(key, value),\n        }),\n      {}\n    );\n\n    this.init = responseInit;\n  }\n\n  private trackPromise(\n    key: string,\n    value: Promise<unknown> | unknown\n  ): TrackedPromise | unknown {\n    if (!(value instanceof Promise)) {\n      return value;\n    }\n\n    this.deferredKeys.push(key);\n    this.pendingKeysSet.add(key);\n\n    // We store a little wrapper promise that will be extended with\n    // _data/_error props upon resolve/reject\n    let promise: TrackedPromise = Promise.race([value, this.abortPromise]).then(\n      (data) => this.onSettle(promise, key, null, data as unknown),\n      (error) => this.onSettle(promise, key, error as unknown)\n    );\n\n    // Register rejection listeners to avoid uncaught promise rejections on\n    // errors or aborted deferred values\n    promise.catch(() => {});\n\n    Object.defineProperty(promise, \"_tracked\", { get: () => true });\n    return promise;\n  }\n\n  private onSettle(\n    promise: TrackedPromise,\n    key: string,\n    error: unknown,\n    data?: unknown\n  ): unknown {\n    if (\n      this.controller.signal.aborted &&\n      error instanceof AbortedDeferredError\n    ) {\n      this.unlistenAbortSignal();\n      Object.defineProperty(promise, \"_error\", { get: () => error });\n      return Promise.reject(error);\n    }\n\n    this.pendingKeysSet.delete(key);\n\n    if (this.done) {\n      // Nothing left to abort!\n      this.unlistenAbortSignal();\n    }\n\n    if (error) {\n      Object.defineProperty(promise, \"_error\", { get: () => error });\n      this.emit(false, key);\n      return Promise.reject(error);\n    }\n\n    Object.defineProperty(promise, \"_data\", { get: () => data });\n    this.emit(false, key);\n    return data;\n  }\n\n  private emit(aborted: boolean, settledKey?: string) {\n    this.subscribers.forEach((subscriber) => subscriber(aborted, settledKey));\n  }\n\n  subscribe(fn: (aborted: boolean, settledKey?: string) => void) {\n    this.subscribers.add(fn);\n    return () => this.subscribers.delete(fn);\n  }\n\n  cancel() {\n    this.controller.abort();\n    this.pendingKeysSet.forEach((v, k) => this.pendingKeysSet.delete(k));\n    this.emit(true);\n  }\n\n  async resolveData(signal: AbortSignal) {\n    let aborted = false;\n    if (!this.done) {\n      let onAbort = () => this.cancel();\n      signal.addEventListener(\"abort\", onAbort);\n      aborted = await new Promise((resolve) => {\n        this.subscribe((aborted) => {\n          signal.removeEventListener(\"abort\", onAbort);\n          if (aborted || this.done) {\n            resolve(aborted);\n          }\n        });\n      });\n    }\n    return aborted;\n  }\n\n  get done() {\n    return this.pendingKeysSet.size === 0;\n  }\n\n  get unwrappedData() {\n    invariant(\n      this.data !== null && this.done,\n      \"Can only unwrap data on initialized and settled deferreds\"\n    );\n\n    return Object.entries(this.data).reduce(\n      (acc, [key, value]) =>\n        Object.assign(acc, {\n          [key]: unwrapTrackedPromise(value),\n        }),\n      {}\n    );\n  }\n\n  get pendingKeys() {\n    return Array.from(this.pendingKeysSet);\n  }\n}\n\nfunction isTrackedPromise(value: any): value is TrackedPromise {\n  return (\n    value instanceof Promise && (value as TrackedPromise)._tracked === true\n  );\n}\n\nfunction unwrapTrackedPromise(value: any) {\n  if (!isTrackedPromise(value)) {\n    return value;\n  }\n\n  if (value._error) {\n    throw value._error;\n  }\n  return value._data;\n}\n\nexport type DeferFunction = (\n  data: Record<string, unknown>,\n  init?: number | ResponseInit\n) => DeferredData;\n\nexport const defer: DeferFunction = (data, init = {}) => {\n  let responseInit = typeof init === \"number\" ? { status: init } : init;\n\n  return new DeferredData(data, responseInit);\n};\n\nexport type RedirectFunction = (\n  url: string,\n  init?: number | ResponseInit\n) => Response;\n\n/**\n * A redirect response. Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nexport const redirect: RedirectFunction = (url, init = 302) => {\n  let responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = { status: responseInit };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n\n  return new Response(null, {\n    ...responseInit,\n    headers,\n  });\n};\n\n/**\n * @private\n * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n */\nexport class ErrorResponse {\n  status: number;\n  statusText: string;\n  data: any;\n  error?: Error;\n  internal: boolean;\n\n  constructor(\n    status: number,\n    statusText: string | undefined,\n    data: any,\n    internal = false\n  ) {\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n    if (data instanceof Error) {\n      this.data = data.toString();\n      this.error = data;\n    } else {\n      this.data = data;\n    }\n  }\n}\n\n/**\n * Check if the given error is an ErrorResponse generated from a 4xx/5xx\n * Response throw from an action/loader\n */\nexport function isRouteErrorResponse(e: any): e is ErrorResponse {\n  return e instanceof ErrorResponse;\n}\n", "import type { History, Location, Path, To } from \"./history\";\nimport {\n  Action as HistoryAction,\n  createLocation,\n  createPath,\n  invariant,\n  parsePath,\n} from \"./history\";\nimport type {\n  DataResult,\n  AgnosticDataRouteMatch,\n  AgnosticDataRouteObject,\n  DeferredResult,\n  ErrorResult,\n  FormEncType,\n  FormMethod,\n  RedirectResult,\n  RouteData,\n  AgnosticRouteObject,\n  Submission,\n  SuccessResult,\n  AgnosticRouteMatch,\n  MutationFormMethod,\n} from \"./utils\";\nimport {\n  DeferredData,\n  ErrorResponse,\n  ResultType,\n  convertRoutesToDataRoutes,\n  getPathContributingMatches,\n  isRouteErrorResponse,\n  joinPaths,\n  matchRoutes,\n  resolveTo,\n  warning,\n} from \"./utils\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A Router instance manages all navigation and data loading/mutations\n */\nexport interface Router {\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the basename for the router\n   */\n  get basename(): RouterInit[\"basename\"];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the current state of the router\n   */\n  get state(): RouterState;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the routes for this router instance\n   */\n  get routes(): AgnosticDataRouteObject[];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Initialize the router, including adding history listeners and kicking off\n   * initial data fetches.  Returns a function to cleanup listeners and abort\n   * any in-progress loads\n   */\n  initialize(): Router;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Subscribe to router.state updates\n   *\n   * @param fn function to call with the new state\n   */\n  subscribe(fn: RouterSubscriber): () => void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Enable scroll restoration behavior in the router\n   *\n   * @param savedScrollPositions Object that will manage positions, in case\n   *                             it's being restored from sessionStorage\n   * @param getScrollPosition    Function to get the active Y scroll position\n   * @param getKey               Function to get the key to use for restoration\n   */\n  enableScrollRestoration(\n    savedScrollPositions: Record<string, number>,\n    getScrollPosition: GetScrollPositionFunction,\n    getKey?: GetScrollRestorationKeyFunction\n  ): () => void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Navigate forward/backward in the history stack\n   * @param to Delta to move in the history stack\n   */\n  navigate(to: number): Promise<void>;\n\n  /**\n   * Navigate to the given path\n   * @param to Path to navigate to\n   * @param opts Navigation options (method, submission, etc.)\n   */\n  navigate(to: To, opts?: RouterNavigateOptions): Promise<void>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Trigger a fetcher load/submission\n   *\n   * @param key     Fetcher key\n   * @param routeId Route that owns the fetcher\n   * @param href    href to fetch\n   * @param opts    Fetcher options, (method, submission, etc.)\n   */\n  fetch(\n    key: string,\n    routeId: string,\n    href: string,\n    opts?: RouterNavigateOptions\n  ): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Trigger a revalidation of all current route loaders and fetcher loads\n   */\n  revalidate(): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Utility function to create an href for the given location\n   * @param location\n   */\n  createHref(location: Location | URL): string;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Utility function to URL encode a destination path according to the internal\n   * history implementation\n   * @param to\n   */\n  encodeLocation(to: To): Path;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Get/create a fetcher for the given key\n   * @param key\n   */\n  getFetcher<TData = any>(key?: string): Fetcher<TData>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Delete the fetcher for a given key\n   * @param key\n   */\n  deleteFetcher(key?: string): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Cleanup listeners and abort any in-progress loads\n   */\n  dispose(): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Get a navigation blocker\n   * @param key The identifier for the blocker\n   * @param fn The blocker function implementation\n   */\n  getBlocker(key: string, fn: BlockerFunction): Blocker;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Delete a navigation blocker\n   * @param key The identifier for the blocker\n   */\n  deleteBlocker(key: string): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Internal fetch AbortControllers accessed by unit tests\n   */\n  _internalFetchControllers: Map<string, AbortController>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Internal pending DeferredData instances accessed by unit tests\n   */\n  _internalActiveDeferreds: Map<string, DeferredData>;\n}\n\n/**\n * State maintained internally by the router.  During a navigation, all states\n * reflect the the \"old\" location unless otherwise noted.\n */\nexport interface RouterState {\n  /**\n   * The action of the most recent navigation\n   */\n  historyAction: HistoryAction;\n\n  /**\n   * The current location reflected by the router\n   */\n  location: Location;\n\n  /**\n   * The current set of route matches\n   */\n  matches: AgnosticDataRouteMatch[];\n\n  /**\n   * Tracks whether we've completed our initial data load\n   */\n  initialized: boolean;\n\n  /**\n   * Current scroll position we should start at for a new view\n   *  - number -> scroll position to restore to\n   *  - false -> do not restore scroll at all (used during submissions)\n   *  - null -> don't have a saved position, scroll to hash or top of page\n   */\n  restoreScrollPosition: number | false | null;\n\n  /**\n   * Indicate whether this navigation should skip resetting the scroll position\n   * if we are unable to restore the scroll position\n   */\n  preventScrollReset: boolean;\n\n  /**\n   * Tracks the state of the current navigation\n   */\n  navigation: Navigation;\n\n  /**\n   * Tracks any in-progress revalidations\n   */\n  revalidation: RevalidationState;\n\n  /**\n   * Data from the loaders for the current matches\n   */\n  loaderData: RouteData;\n\n  /**\n   * Data from the action for the current matches\n   */\n  actionData: RouteData | null;\n\n  /**\n   * Errors caught from loaders for the current matches\n   */\n  errors: RouteData | null;\n\n  /**\n   * Map of current fetchers\n   */\n  fetchers: Map<string, Fetcher>;\n\n  /**\n   * Map of current blockers\n   */\n  blockers: Map<string, Blocker>;\n}\n\n/**\n * Data that can be passed into hydrate a Router from SSR\n */\nexport type HydrationState = Partial<\n  Pick<RouterState, \"loaderData\" | \"actionData\" | \"errors\">\n>;\n\n/**\n * Initialization options for createRouter\n */\nexport interface RouterInit {\n  basename?: string;\n  routes: AgnosticRouteObject[];\n  history: History;\n  hydrationData?: HydrationState;\n}\n\n/**\n * State returned from a server-side query() call\n */\nexport interface StaticHandlerContext {\n  basename: Router[\"basename\"];\n  location: RouterState[\"location\"];\n  matches: RouterState[\"matches\"];\n  loaderData: RouterState[\"loaderData\"];\n  actionData: RouterState[\"actionData\"];\n  errors: RouterState[\"errors\"];\n  statusCode: number;\n  loaderHeaders: Record<string, Headers>;\n  actionHeaders: Record<string, Headers>;\n  activeDeferreds: Record<string, DeferredData> | null;\n  _deepestRenderedBoundaryId?: string | null;\n}\n\n/**\n * A StaticHandler instance manages a singular SSR navigation/fetch event\n */\nexport interface StaticHandler {\n  dataRoutes: AgnosticDataRouteObject[];\n  query(\n    request: Request,\n    opts?: { requestContext?: unknown }\n  ): Promise<StaticHandlerContext | Response>;\n  queryRoute(\n    request: Request,\n    opts?: { routeId?: string; requestContext?: unknown }\n  ): Promise<any>;\n}\n\n/**\n * Subscriber function signature for changes to router state\n */\nexport interface RouterSubscriber {\n  (state: RouterState): void;\n}\n\ninterface UseMatchesMatch {\n  id: string;\n  pathname: string;\n  params: AgnosticRouteMatch[\"params\"];\n  data: unknown;\n  handle: unknown;\n}\n\n/**\n * Function signature for determining the key to be used in scroll restoration\n * for a given location\n */\nexport interface GetScrollRestorationKeyFunction {\n  (location: Location, matches: UseMatchesMatch[]): string | null;\n}\n\n/**\n * Function signature for determining the current scroll position\n */\nexport interface GetScrollPositionFunction {\n  (): number;\n}\n\n/**\n * Options for a navigate() call for a Link navigation\n */\ntype LinkNavigateOptions = {\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n};\n\n/**\n * Options for a navigate() call for a Form navigation\n */\ntype SubmissionNavigateOptions = {\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  formMethod?: FormMethod;\n  formEncType?: FormEncType;\n  formData: FormData;\n};\n\n/**\n * Options to pass to navigate() for either a Link or Form navigation\n */\nexport type RouterNavigateOptions =\n  | LinkNavigateOptions\n  | SubmissionNavigateOptions;\n\n/**\n * Options to pass to fetch()\n */\nexport type RouterFetchOptions =\n  | Omit<LinkNavigateOptions, \"replace\">\n  | Omit<SubmissionNavigateOptions, \"replace\">;\n\n/**\n * Potential states for state.navigation\n */\nexport type NavigationStates = {\n  Idle: {\n    state: \"idle\";\n    location: undefined;\n    formMethod: undefined;\n    formAction: undefined;\n    formEncType: undefined;\n    formData: undefined;\n  };\n  Loading: {\n    state: \"loading\";\n    location: Location;\n    formMethod: FormMethod | undefined;\n    formAction: string | undefined;\n    formEncType: FormEncType | undefined;\n    formData: FormData | undefined;\n  };\n  Submitting: {\n    state: \"submitting\";\n    location: Location;\n    formMethod: FormMethod;\n    formAction: string;\n    formEncType: FormEncType;\n    formData: FormData;\n  };\n};\n\nexport type Navigation = NavigationStates[keyof NavigationStates];\n\nexport type RevalidationState = \"idle\" | \"loading\";\n\n/**\n * Potential states for fetchers\n */\ntype FetcherStates<TData = any> = {\n  Idle: {\n    state: \"idle\";\n    formMethod: undefined;\n    formAction: undefined;\n    formEncType: undefined;\n    formData: undefined;\n    data: TData | undefined;\n    \" _hasFetcherDoneAnything \"?: boolean;\n  };\n  Loading: {\n    state: \"loading\";\n    formMethod: FormMethod | undefined;\n    formAction: string | undefined;\n    formEncType: FormEncType | undefined;\n    formData: FormData | undefined;\n    data: TData | undefined;\n    \" _hasFetcherDoneAnything \"?: boolean;\n  };\n  Submitting: {\n    state: \"submitting\";\n    formMethod: FormMethod;\n    formAction: string;\n    formEncType: FormEncType;\n    formData: FormData;\n    data: TData | undefined;\n    \" _hasFetcherDoneAnything \"?: boolean;\n  };\n};\n\nexport type Fetcher<TData = any> =\n  FetcherStates<TData>[keyof FetcherStates<TData>];\n\ninterface BlockerBlocked {\n  state: \"blocked\";\n  reset(): void;\n  proceed(): void;\n  location: Location;\n}\n\ninterface BlockerUnblocked {\n  state: \"unblocked\";\n  reset: undefined;\n  proceed: undefined;\n  location: undefined;\n}\n\ninterface BlockerProceeding {\n  state: \"proceeding\";\n  reset: undefined;\n  proceed: undefined;\n  location: Location;\n}\n\nexport type Blocker = BlockerUnblocked | BlockerBlocked | BlockerProceeding;\n\nexport type BlockerFunction = (args: {\n  currentLocation: Location;\n  nextLocation: Location;\n  historyAction: HistoryAction;\n}) => boolean;\n\ninterface ShortCircuitable {\n  /**\n   * startNavigation does not need to complete the navigation because we\n   * redirected or got interrupted\n   */\n  shortCircuited?: boolean;\n}\n\ninterface HandleActionResult extends ShortCircuitable {\n  /**\n   * Error thrown from the current action, keyed by the route containing the\n   * error boundary to render the error.  To be committed to the state after\n   * loaders have completed\n   */\n  pendingActionError?: RouteData;\n  /**\n   * Data returned from the current action, keyed by the route owning the action.\n   * To be committed to the state after loaders have completed\n   */\n  pendingActionData?: RouteData;\n}\n\ninterface HandleLoadersResult extends ShortCircuitable {\n  /**\n   * loaderData returned from the current set of loaders\n   */\n  loaderData?: RouterState[\"loaderData\"];\n  /**\n   * errors thrown from the current set of loaders\n   */\n  errors?: RouterState[\"errors\"];\n}\n\n/**\n * Tuple of [key, href, DataRouteMatch, DataRouteMatch[]] for a revalidating\n * fetcher.load()\n */\ntype RevalidatingFetcher = [\n  string,\n  string,\n  AgnosticDataRouteMatch,\n  AgnosticDataRouteMatch[]\n];\n\n/**\n * Tuple of [href, DataRouteMatch, DataRouteMatch[]] for an active\n * fetcher.load()\n */\ntype FetchLoadMatch = [\n  string,\n  AgnosticDataRouteMatch,\n  AgnosticDataRouteMatch[]\n];\n\n/**\n * Wrapper object to allow us to throw any response out from callLoaderOrAction\n * for queryRouter while preserving whether or not it was thrown or returned\n * from the loader/action\n */\ninterface QueryRouteResponse {\n  type: ResultType.data | ResultType.error;\n  response: Response;\n}\n\nconst validMutationMethodsArr: MutationFormMethod[] = [\n  \"post\",\n  \"put\",\n  \"patch\",\n  \"delete\",\n];\nconst validMutationMethods = new Set<MutationFormMethod>(\n  validMutationMethodsArr\n);\n\nconst validRequestMethodsArr: FormMethod[] = [\n  \"get\",\n  ...validMutationMethodsArr,\n];\nconst validRequestMethods = new Set<FormMethod>(validRequestMethodsArr);\n\nconst redirectStatusCodes = new Set([301, 302, 303, 307, 308]);\nconst redirectPreserveMethodStatusCodes = new Set([307, 308]);\n\nexport const IDLE_NAVIGATION: NavigationStates[\"Idle\"] = {\n  state: \"idle\",\n  location: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n};\n\nexport const IDLE_FETCHER: FetcherStates[\"Idle\"] = {\n  state: \"idle\",\n  data: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n};\n\nexport const IDLE_BLOCKER: BlockerUnblocked = {\n  state: \"unblocked\",\n  proceed: undefined,\n  reset: undefined,\n  location: undefined,\n};\n\nconst isBrowser =\n  typeof window !== \"undefined\" &&\n  typeof window.document !== \"undefined\" &&\n  typeof window.document.createElement !== \"undefined\";\nconst isServer = !isBrowser;\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region createRouter\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Create a router and listen to history POP navigations\n */\nexport function createRouter(init: RouterInit): Router {\n  invariant(\n    init.routes.length > 0,\n    \"You must provide a non-empty routes array to createRouter\"\n  );\n\n  let dataRoutes = convertRoutesToDataRoutes(init.routes);\n  // Cleanup function for history\n  let unlistenHistory: (() => void) | null = null;\n  // Externally-provided functions to call on all state changes\n  let subscribers = new Set<RouterSubscriber>();\n  // Externally-provided object to hold scroll restoration locations during routing\n  let savedScrollPositions: Record<string, number> | null = null;\n  // Externally-provided function to get scroll restoration keys\n  let getScrollRestorationKey: GetScrollRestorationKeyFunction | null = null;\n  // Externally-provided function to get current scroll position\n  let getScrollPosition: GetScrollPositionFunction | null = null;\n  // One-time flag to control the initial hydration scroll restoration.  Because\n  // we don't get the saved positions from <ScrollRestoration /> until _after_\n  // the initial render, we need to manually trigger a separate updateState to\n  // send along the restoreScrollPosition\n  // Set to true if we have `hydrationData` since we assume we were SSR'd and that\n  // SSR did the initial scroll restoration.\n  let initialScrollRestored = init.hydrationData != null;\n\n  let initialMatches = matchRoutes(\n    dataRoutes,\n    init.history.location,\n    init.basename\n  );\n  let initialErrors: RouteData | null = null;\n\n  if (initialMatches == null) {\n    // If we do not match a user-provided-route, fall back to the root\n    // to allow the error boundary to take over\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname,\n    });\n    let { matches, route } = getShortCircuitMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = { [route.id]: error };\n  }\n\n  let initialized =\n    !initialMatches.some((m) => m.route.loader) || init.hydrationData != null;\n\n  let router: Router;\n  let state: RouterState = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: (init.hydrationData && init.hydrationData.loaderData) || {},\n    actionData: (init.hydrationData && init.hydrationData.actionData) || null,\n    errors: (init.hydrationData && init.hydrationData.errors) || initialErrors,\n    fetchers: new Map(),\n    blockers: new Map(),\n  };\n\n  // -- Stateful internal variables to manage navigations --\n  // Current navigation in progress (to be committed in completeNavigation)\n  let pendingAction: HistoryAction = HistoryAction.Pop;\n\n  // Should the current navigation prevent the scroll reset if scroll cannot\n  // be restored?\n  let pendingPreventScrollReset = false;\n\n  // AbortController for the active navigation\n  let pendingNavigationController: AbortController | null;\n\n  // We use this to avoid touching history in completeNavigation if a\n  // revalidation is entirely uninterrupted\n  let isUninterruptedRevalidation = false;\n\n  // Use this internal flag to force revalidation of all loaders:\n  //  - submissions (completed or interrupted)\n  //  - useRevalidate()\n  //  - X-Remix-Revalidate (from redirect)\n  let isRevalidationRequired = false;\n\n  // Use this internal array to capture routes that require revalidation due\n  // to a cancelled deferred on action submission\n  let cancelledDeferredRoutes: string[] = [];\n\n  // Use this internal array to capture fetcher loads that were cancelled by an\n  // action navigation and require revalidation\n  let cancelledFetcherLoads: string[] = [];\n\n  // AbortControllers for any in-flight fetchers\n  let fetchControllers = new Map<string, AbortController>();\n\n  // Track loads based on the order in which they started\n  let incrementingLoadId = 0;\n\n  // Track the outstanding pending navigation data load to be compared against\n  // the globally incrementing load when a fetcher load lands after a completed\n  // navigation\n  let pendingNavigationLoadId = -1;\n\n  // Fetchers that triggered data reloads as a result of their actions\n  let fetchReloadIds = new Map<string, number>();\n\n  // Fetchers that triggered redirect navigations from their actions\n  let fetchRedirectIds = new Set<string>();\n\n  // Most recent href/match for fetcher.load calls for fetchers\n  let fetchLoadMatches = new Map<string, FetchLoadMatch>();\n\n  // Store DeferredData instances for active route matches.  When a\n  // route loader returns defer() we stick one in here.  Then, when a nested\n  // promise resolves we update loaderData.  If a new navigation starts we\n  // cancel active deferreds for eliminated routes.\n  let activeDeferreds = new Map<string, DeferredData>();\n\n  // We ony support a single active blocker at the moment since we don't have\n  // any compelling use cases for multi-blocker yet\n  let activeBlocker: string | null = null;\n\n  // Store blocker functions in a separate Map outside of router state since\n  // we don't need to update UI state if they change\n  let blockerFunctions = new Map<string, BlockerFunction>();\n\n  // Flag to ignore the next history update, so we can revert the URL change on\n  // a POP navigation that was blocked by the user without touching router state\n  let ignoreNextHistoryUpdate = false;\n\n  // Initialize the router, all side effects should be kicked off from here.\n  // Implemented as a Fluent API for ease of:\n  //   let router = createRouter(init).initialize();\n  function initialize() {\n    // If history informs us of a POP navigation, start the navigation but do not update\n    // state.  We'll update our own state once the navigation completes\n    unlistenHistory = init.history.listen(\n      ({ action: historyAction, location, delta }) => {\n        // Ignore this event if it was just us resetting the URL from a\n        // blocked POP navigation\n        if (ignoreNextHistoryUpdate) {\n          ignoreNextHistoryUpdate = false;\n          return;\n        }\n\n        let blockerKey = shouldBlockNavigation({\n          currentLocation: state.location,\n          nextLocation: location,\n          historyAction,\n        });\n        if (blockerKey) {\n          // Restore the URL to match the current UI, but don't update router state\n          ignoreNextHistoryUpdate = true;\n          init.history.go(delta * -1);\n\n          // Put the blocker into a blocked state\n          updateBlocker(blockerKey, {\n            state: \"blocked\",\n            location,\n            proceed() {\n              updateBlocker(blockerKey!, {\n                state: \"proceeding\",\n                proceed: undefined,\n                reset: undefined,\n                location,\n              });\n              // Re-do the same POP navigation we just blocked\n              init.history.go(delta);\n            },\n            reset() {\n              deleteBlocker(blockerKey!);\n              updateState({ blockers: new Map(router.state.blockers) });\n            },\n          });\n          return;\n        }\n\n        return startNavigation(historyAction, location);\n      }\n    );\n\n    // Kick off initial data load if needed.  Use Pop to avoid modifying history\n    if (!state.initialized) {\n      startNavigation(HistoryAction.Pop, state.location);\n    }\n\n    return router;\n  }\n\n  // Clean up a router and it's side effects\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  }\n\n  // Subscribe to state updates for the router\n  function subscribe(fn: RouterSubscriber) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  }\n\n  // Update our state and notify the calling context of the change\n  function updateState(newState: Partial<RouterState>): void {\n    state = {\n      ...state,\n      ...newState,\n    };\n    subscribers.forEach((subscriber) => subscriber(state));\n  }\n\n  // Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION\n  // and setting state.[historyAction/location/matches] to the new route.\n  // - Location is a required param\n  // - Navigation will always be set to IDLE_NAVIGATION\n  // - Can pass any other state in newState\n  function completeNavigation(\n    location: Location,\n    newState: Partial<Omit<RouterState, \"action\" | \"location\" | \"navigation\">>\n  ): void {\n    // Deduce if we're in a loading/actionReload state:\n    // - We have committed actionData in the store\n    // - The current navigation was a mutation submission\n    // - We're past the submitting state and into the loading state\n    // - The location being loaded is not the result of a redirect\n    let isActionReload =\n      state.actionData != null &&\n      state.navigation.formMethod != null &&\n      isMutationMethod(state.navigation.formMethod) &&\n      state.navigation.state === \"loading\" &&\n      location.state?._isRedirect !== true;\n\n    let actionData: RouteData | null;\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        // Empty actionData -> clear prior actionData due to an action error\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      // Keep the current data if we're wrapping up the action reload\n      actionData = state.actionData;\n    } else {\n      // Clear actionData on any other completed navigations\n      actionData = null;\n    }\n\n    // Always preserve any existing loaderData from re-used routes\n    let loaderData = newState.loaderData\n      ? mergeLoaderData(\n          state.loaderData,\n          newState.loaderData,\n          newState.matches || [],\n          newState.errors\n        )\n      : state.loaderData;\n\n    // On a successful navigation we can assume we got through all blockers\n    // so we can start fresh\n    for (let [key] of blockerFunctions) {\n      deleteBlocker(key);\n    }\n\n    // Always respect the user flag.  Otherwise don't reset on mutation\n    // submission navigations unless they redirect\n    let preventScrollReset =\n      pendingPreventScrollReset === true ||\n      (state.navigation.formMethod != null &&\n        isMutationMethod(state.navigation.formMethod) &&\n        location.state?._isRedirect !== true);\n\n    updateState({\n      ...newState, // matches, errors, fetchers go through as-is\n      actionData,\n      loaderData,\n      historyAction: pendingAction,\n      location,\n      initialized: true,\n      navigation: IDLE_NAVIGATION,\n      revalidation: \"idle\",\n      restoreScrollPosition: getSavedScrollPosition(\n        location,\n        newState.matches || state.matches\n      ),\n      preventScrollReset,\n      blockers: new Map(state.blockers),\n    });\n\n    if (isUninterruptedRevalidation) {\n      // If this was an uninterrupted revalidation then do not touch history\n    } else if (pendingAction === HistoryAction.Pop) {\n      // Do nothing for POP - URL has already been updated\n    } else if (pendingAction === HistoryAction.Push) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === HistoryAction.Replace) {\n      init.history.replace(location, location.state);\n    }\n\n    // Reset stateful navigation vars\n    pendingAction = HistoryAction.Pop;\n    pendingPreventScrollReset = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    cancelledDeferredRoutes = [];\n    cancelledFetcherLoads = [];\n  }\n\n  // Trigger a navigation event, which can either be a numerical POP or a PUSH\n  // replace with an optional submission\n  async function navigate(\n    to: number | To,\n    opts?: RouterNavigateOptions\n  ): Promise<void> {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n\n    let { path, submission, error } = normalizeNavigateOptions(to, opts);\n\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\n\n    // When using navigate as a PUSH/REPLACE we aren't reading an already-encoded\n    // URL from window.location, so we need to encode it here so the behavior\n    // remains the same as POP and non-data-router usages.  new URL() does all\n    // the same encoding we'd get from a history.pushState/window.location read\n    // without having to touch history\n    nextLocation = {\n      ...nextLocation,\n      ...init.history.encodeLocation(nextLocation),\n    };\n\n    let userReplace = opts && opts.replace != null ? opts.replace : undefined;\n\n    let historyAction = HistoryAction.Push;\n\n    if (userReplace === true) {\n      historyAction = HistoryAction.Replace;\n    } else if (userReplace === false) {\n      // no-op\n    } else if (\n      submission != null &&\n      isMutationMethod(submission.formMethod) &&\n      submission.formAction === state.location.pathname + state.location.search\n    ) {\n      // By default on submissions to the current location we REPLACE so that\n      // users don't have to double-click the back button to get to the prior\n      // location.  If the user redirects to a different location from the\n      // action/loader this will be ignored and the redirect will be a PUSH\n      historyAction = HistoryAction.Replace;\n    }\n\n    let preventScrollReset =\n      opts && \"preventScrollReset\" in opts\n        ? opts.preventScrollReset === true\n        : undefined;\n\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction,\n    });\n    if (blockerKey) {\n      // Put the blocker into a blocked state\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n        proceed() {\n          updateBlocker(blockerKey!, {\n            state: \"proceeding\",\n            proceed: undefined,\n            reset: undefined,\n            location: nextLocation,\n          });\n          // Send the same navigation through\n          navigate(to, opts);\n        },\n        reset() {\n          deleteBlocker(blockerKey!);\n          updateState({ blockers: new Map(state.blockers) });\n        },\n      });\n      return;\n    }\n\n    return await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace,\n    });\n  }\n\n  // Revalidate all current loaders.  If a navigation is in progress or if this\n  // is interrupted by a navigation, allow this to \"succeed\" by calling all\n  // loaders during the next loader round\n  function revalidate() {\n    interruptActiveLoads();\n    updateState({ revalidation: \"loading\" });\n\n    // If we're currently submitting an action, we don't need to start a new\n    // navigation, we'll just let the follow up loader execution call all loaders\n    if (state.navigation.state === \"submitting\") {\n      return;\n    }\n\n    // If we're currently in an idle state, start a new navigation for the current\n    // action/location and mark it as uninterrupted, which will skip the history\n    // update in completeNavigation\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true,\n      });\n      return;\n    }\n\n    // Otherwise, if we're currently in a loading state, just start a new\n    // navigation to the navigation.location but do not trigger an uninterrupted\n    // revalidation so that history correctly updates once the navigation completes\n    startNavigation(\n      pendingAction || state.historyAction,\n      state.navigation.location,\n      { overrideNavigation: state.navigation }\n    );\n  }\n\n  // Start a navigation to the given action/location.  Can optionally provide a\n  // overrideNavigation which will override the normalLoad in the case of a redirect\n  // navigation\n  async function startNavigation(\n    historyAction: HistoryAction,\n    location: Location,\n    opts?: {\n      submission?: Submission;\n      overrideNavigation?: Navigation;\n      pendingError?: ErrorResponse;\n      startUninterruptedRevalidation?: boolean;\n      preventScrollReset?: boolean;\n      replace?: boolean;\n    }\n  ): Promise<void> {\n    // Abort any in-progress navigations and start a new one. Unset any ongoing\n    // uninterrupted revalidations unless told otherwise, since we want this\n    // new navigation to update history normally\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation =\n      (opts && opts.startUninterruptedRevalidation) === true;\n\n    // Save the current scroll position every time we start a new navigation,\n    // and track whether we should reset scroll on completion\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = matchRoutes(dataRoutes, location, init.basename);\n\n    // Short circuit with a 404 on the root error boundary if we match nothing\n    if (!matches) {\n      let error = getInternalRouterError(404, { pathname: location.pathname });\n      let { matches: notFoundMatches, route } =\n        getShortCircuitMatches(dataRoutes);\n      // Cancel all pending deferred on 404s since we don't keep any routes\n      cancelActiveDeferreds();\n      completeNavigation(location, {\n        matches: notFoundMatches,\n        loaderData: {},\n        errors: {\n          [route.id]: error,\n        },\n      });\n      return;\n    }\n\n    // Short circuit if it's only a hash change\n    if (isHashChangeOnly(state.location, location)) {\n      completeNavigation(location, { matches });\n      return;\n    }\n\n    // Create a controller/Request for this navigation\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(\n      init.history,\n      location,\n      pendingNavigationController.signal,\n      opts && opts.submission\n    );\n    let pendingActionData: RouteData | undefined;\n    let pendingError: RouteData | undefined;\n\n    if (opts && opts.pendingError) {\n      // If we have a pendingError, it means the user attempted a GET submission\n      // with binary FormData so assign here and skip to handleLoaders.  That\n      // way we handle calling loaders above the boundary etc.  It's not really\n      // different from an actionError in that sense.\n      pendingError = {\n        [findNearestBoundary(matches).route.id]: opts.pendingError,\n      };\n    } else if (\n      opts &&\n      opts.submission &&\n      isMutationMethod(opts.submission.formMethod)\n    ) {\n      // Call action if we received an action submission\n      let actionOutput = await handleAction(\n        request,\n        location,\n        opts.submission,\n        matches,\n        { replace: opts.replace }\n      );\n\n      if (actionOutput.shortCircuited) {\n        return;\n      }\n\n      pendingActionData = actionOutput.pendingActionData;\n      pendingError = actionOutput.pendingActionError;\n\n      let navigation: NavigationStates[\"Loading\"] = {\n        state: \"loading\",\n        location,\n        ...opts.submission,\n      };\n      loadingNavigation = navigation;\n\n      // Create a GET request for the loaders\n      request = new Request(request.url, { signal: request.signal });\n    }\n\n    // Call loaders\n    let { shortCircuited, loaderData, errors } = await handleLoaders(\n      request,\n      location,\n      matches,\n      loadingNavigation,\n      opts && opts.submission,\n      opts && opts.replace,\n      pendingActionData,\n      pendingError\n    );\n\n    if (shortCircuited) {\n      return;\n    }\n\n    // Clean up now that the action/loaders have completed.  Don't clean up if\n    // we short circuited because pendingNavigationController will have already\n    // been assigned to a new controller for the next navigation\n    pendingNavigationController = null;\n\n    completeNavigation(location, {\n      matches,\n      ...(pendingActionData ? { actionData: pendingActionData } : {}),\n      loaderData,\n      errors,\n    });\n  }\n\n  // Call the action matched by the leaf route for this navigation and handle\n  // redirects/errors\n  async function handleAction(\n    request: Request,\n    location: Location,\n    submission: Submission,\n    matches: AgnosticDataRouteMatch[],\n    opts?: { replace?: boolean }\n  ): Promise<HandleActionResult> {\n    interruptActiveLoads();\n\n    // Put us in a submitting state\n    let navigation: NavigationStates[\"Submitting\"] = {\n      state: \"submitting\",\n      location,\n      ...submission,\n    };\n    updateState({ navigation });\n\n    // Call our action and get the result\n    let result: DataResult;\n    let actionMatch = getTargetMatch(matches, location);\n\n    if (!actionMatch.route.action) {\n      result = {\n        type: ResultType.error,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id,\n        }),\n      };\n    } else {\n      result = await callLoaderOrAction(\n        \"action\",\n        request,\n        actionMatch,\n        matches,\n        router.basename\n      );\n\n      if (request.signal.aborted) {\n        return { shortCircuited: true };\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      let replace: boolean;\n      if (opts && opts.replace != null) {\n        replace = opts.replace;\n      } else {\n        // If the user didn't explicity indicate replace behavior, replace if\n        // we redirected to the exact same location we're currently at to avoid\n        // double back-buttons\n        replace =\n          result.location === state.location.pathname + state.location.search;\n      }\n      await startRedirectNavigation(state, result, { submission, replace });\n      return { shortCircuited: true };\n    }\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n\n      // By default, all submissions are REPLACE navigations, but if the\n      // action threw an error that'll be rendered in an errorElement, we fall\n      // back to PUSH so that the user can use the back button to get back to\n      // the pre-submission form location to try again\n      if ((opts && opts.replace) !== true) {\n        pendingAction = HistoryAction.Push;\n      }\n\n      return {\n        // Send back an empty object we can use to clear out any prior actionData\n        pendingActionData: {},\n        pendingActionError: { [boundaryMatch.route.id]: result.error },\n      };\n    }\n\n    if (isDeferredResult(result)) {\n      throw getInternalRouterError(400, { type: \"defer-action\" });\n    }\n\n    return {\n      pendingActionData: { [actionMatch.route.id]: result.data },\n    };\n  }\n\n  // Call all applicable loaders for the given matches, handling redirects,\n  // errors, etc.\n  async function handleLoaders(\n    request: Request,\n    location: Location,\n    matches: AgnosticDataRouteMatch[],\n    overrideNavigation?: Navigation,\n    submission?: Submission,\n    replace?: boolean,\n    pendingActionData?: RouteData,\n    pendingError?: RouteData\n  ): Promise<HandleLoadersResult> {\n    // Figure out the right navigation we want to use for data loading\n    let loadingNavigation = overrideNavigation;\n    if (!loadingNavigation) {\n      let navigation: NavigationStates[\"Loading\"] = {\n        state: \"loading\",\n        location,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined,\n        ...submission,\n      };\n      loadingNavigation = navigation;\n    }\n\n    // If this was a redirect from an action we don't have a \"submission\" but\n    // we have it on the loading navigation so use that if available\n    let activeSubmission = submission\n      ? submission\n      : loadingNavigation.formMethod &&\n        loadingNavigation.formAction &&\n        loadingNavigation.formData &&\n        loadingNavigation.formEncType\n      ? {\n          formMethod: loadingNavigation.formMethod,\n          formAction: loadingNavigation.formAction,\n          formData: loadingNavigation.formData,\n          formEncType: loadingNavigation.formEncType,\n        }\n      : undefined;\n\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\n      init.history,\n      state,\n      matches,\n      activeSubmission,\n      location,\n      isRevalidationRequired,\n      cancelledDeferredRoutes,\n      cancelledFetcherLoads,\n      pendingActionData,\n      pendingError,\n      fetchLoadMatches\n    );\n\n    // Cancel pending deferreds for no-longer-matched routes or routes we're\n    // about to reload.  Note that if this is an action reload we would have\n    // already cancelled all pending deferreds so this would be a no-op\n    cancelActiveDeferreds(\n      (routeId) =>\n        !(matches && matches.some((m) => m.route.id === routeId)) ||\n        (matchesToLoad && matchesToLoad.some((m) => m.route.id === routeId))\n    );\n\n    // Short circuit if we have no loaders to run\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\n      completeNavigation(location, {\n        matches,\n        loaderData: {},\n        // Commit pending error if we're short circuiting\n        errors: pendingError || null,\n        ...(pendingActionData ? { actionData: pendingActionData } : {}),\n      });\n      return { shortCircuited: true };\n    }\n\n    // If this is an uninterrupted revalidation, we remain in our current idle\n    // state.  If not, we need to switch to our loading state and load data,\n    // preserving any new action data or existing action data (in the case of\n    // a revalidation interrupting an actionReload)\n    if (!isUninterruptedRevalidation) {\n      revalidatingFetchers.forEach(([key]) => {\n        let fetcher = state.fetchers.get(key);\n        let revalidatingFetcher: FetcherStates[\"Loading\"] = {\n          state: \"loading\",\n          data: fetcher && fetcher.data,\n          formMethod: undefined,\n          formAction: undefined,\n          formEncType: undefined,\n          formData: undefined,\n          \" _hasFetcherDoneAnything \": true,\n        };\n        state.fetchers.set(key, revalidatingFetcher);\n      });\n      let actionData = pendingActionData || state.actionData;\n      updateState({\n        navigation: loadingNavigation,\n        ...(actionData\n          ? Object.keys(actionData).length === 0\n            ? { actionData: null }\n            : { actionData }\n          : {}),\n        ...(revalidatingFetchers.length > 0\n          ? { fetchers: new Map(state.fetchers) }\n          : {}),\n      });\n    }\n\n    pendingNavigationLoadId = ++incrementingLoadId;\n    revalidatingFetchers.forEach(([key]) =>\n      fetchControllers.set(key, pendingNavigationController!)\n    );\n\n    let { results, loaderResults, fetcherResults } =\n      await callLoadersAndMaybeResolveData(\n        state.matches,\n        matches,\n        matchesToLoad,\n        revalidatingFetchers,\n        request\n      );\n\n    if (request.signal.aborted) {\n      return { shortCircuited: true };\n    }\n\n    // Clean up _after_ loaders have completed.  Don't clean up if we short\n    // circuited because fetchControllers would have been aborted and\n    // reassigned to new controllers for the next navigation\n    revalidatingFetchers.forEach(([key]) => fetchControllers.delete(key));\n\n    // If any loaders returned a redirect Response, start a new REPLACE navigation\n    let redirect = findRedirect(results);\n    if (redirect) {\n      await startRedirectNavigation(state, redirect, { replace });\n      return { shortCircuited: true };\n    }\n\n    // Process and commit output from loaders\n    let { loaderData, errors } = processLoaderData(\n      state,\n      matches,\n      matchesToLoad,\n      loaderResults,\n      pendingError,\n      revalidatingFetchers,\n      fetcherResults,\n      activeDeferreds\n    );\n\n    // Wire up subscribers to update loaderData as promises settle\n    activeDeferreds.forEach((deferredData, routeId) => {\n      deferredData.subscribe((aborted) => {\n        // Note: No need to updateState here since the TrackedPromise on\n        // loaderData is stable across resolve/reject\n        // Remove this instance if we were aborted or if promises have settled\n        if (aborted || deferredData.done) {\n          activeDeferreds.delete(routeId);\n        }\n      });\n    });\n\n    markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n\n    return {\n      loaderData,\n      errors,\n      ...(didAbortFetchLoads || revalidatingFetchers.length > 0\n        ? { fetchers: new Map(state.fetchers) }\n        : {}),\n    };\n  }\n\n  function getFetcher<TData = any>(key: string): Fetcher<TData> {\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  }\n\n  // Trigger a fetcher load/submit for the given fetcher key\n  function fetch(\n    key: string,\n    routeId: string,\n    href: string,\n    opts?: RouterFetchOptions\n  ) {\n    if (isServer) {\n      throw new Error(\n        \"router.fetch() was called during the server render, but it shouldn't be. \" +\n          \"You are likely calling a useFetcher() method in the body of your component. \" +\n          \"Try moving it to a useEffect or a callback.\"\n      );\n    }\n\n    if (fetchControllers.has(key)) abortFetcher(key);\n\n    let matches = matchRoutes(dataRoutes, href, init.basename);\n    if (!matches) {\n      setFetcherError(\n        key,\n        routeId,\n        getInternalRouterError(404, { pathname: href })\n      );\n      return;\n    }\n\n    let { path, submission } = normalizeNavigateOptions(href, opts, true);\n    let match = getTargetMatch(matches, path);\n\n    if (submission && isMutationMethod(submission.formMethod)) {\n      handleFetcherAction(key, routeId, path, match, matches, submission);\n      return;\n    }\n\n    // Store off the match so we can call it's shouldRevalidate on subsequent\n    // revalidations\n    fetchLoadMatches.set(key, [path, match, matches]);\n    handleFetcherLoader(key, routeId, path, match, matches, submission);\n  }\n\n  // Call the action for the matched fetcher.submit(), and then handle redirects,\n  // errors, and revalidation\n  async function handleFetcherAction(\n    key: string,\n    routeId: string,\n    path: string,\n    match: AgnosticDataRouteMatch,\n    requestMatches: AgnosticDataRouteMatch[],\n    submission: Submission\n  ) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n\n    if (!match.route.action) {\n      let error = getInternalRouterError(405, {\n        method: submission.formMethod,\n        pathname: path,\n        routeId: routeId,\n      });\n      setFetcherError(key, routeId, error);\n      return;\n    }\n\n    // Put this fetcher into it's submitting state\n    let existingFetcher = state.fetchers.get(key);\n    let fetcher: FetcherStates[\"Submitting\"] = {\n      state: \"submitting\",\n      ...submission,\n      data: existingFetcher && existingFetcher.data,\n      \" _hasFetcherDoneAnything \": true,\n    };\n    state.fetchers.set(key, fetcher);\n    updateState({ fetchers: new Map(state.fetchers) });\n\n    // Call the action for the fetcher\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal,\n      submission\n    );\n    fetchControllers.set(key, abortController);\n\n    let actionResult = await callLoaderOrAction(\n      \"action\",\n      fetchRequest,\n      match,\n      requestMatches,\n      router.basename\n    );\n\n    if (fetchRequest.signal.aborted) {\n      // We can delete this so long as we weren't aborted by ou our own fetcher\n      // re-submit which would have put _new_ controller is in fetchControllers\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n      return;\n    }\n\n    if (isRedirectResult(actionResult)) {\n      fetchControllers.delete(key);\n      fetchRedirectIds.add(key);\n      let loadingFetcher: FetcherStates[\"Loading\"] = {\n        state: \"loading\",\n        ...submission,\n        data: undefined,\n        \" _hasFetcherDoneAnything \": true,\n      };\n      state.fetchers.set(key, loadingFetcher);\n      updateState({ fetchers: new Map(state.fetchers) });\n\n      return startRedirectNavigation(state, actionResult, {\n        isFetchActionRedirect: true,\n      });\n    }\n\n    // Process any non-redirect errors thrown\n    if (isErrorResult(actionResult)) {\n      setFetcherError(key, routeId, actionResult.error);\n      return;\n    }\n\n    if (isDeferredResult(actionResult)) {\n      throw getInternalRouterError(400, { type: \"defer-action\" });\n    }\n\n    // Start the data load for current matches, or the next location if we're\n    // in the middle of a navigation\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(\n      init.history,\n\n      nextLocation,\n      abortController.signal\n    );\n    let matches =\n      state.navigation.state !== \"idle\"\n        ? matchRoutes(dataRoutes, state.navigation.location, init.basename)\n        : state.matches;\n\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n\n    let loadFetcher: FetcherStates[\"Loading\"] = {\n      state: \"loading\",\n      data: actionResult.data,\n      ...submission,\n      \" _hasFetcherDoneAnything \": true,\n    };\n    state.fetchers.set(key, loadFetcher);\n\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\n      init.history,\n      state,\n      matches,\n      submission,\n      nextLocation,\n      isRevalidationRequired,\n      cancelledDeferredRoutes,\n      cancelledFetcherLoads,\n      { [match.route.id]: actionResult.data },\n      undefined, // No need to send through errors since we short circuit above\n      fetchLoadMatches\n    );\n\n    // Put all revalidating fetchers into the loading state, except for the\n    // current fetcher which we want to keep in it's current loading state which\n    // contains it's action submission info + action data\n    revalidatingFetchers\n      .filter(([staleKey]) => staleKey !== key)\n      .forEach(([staleKey]) => {\n        let existingFetcher = state.fetchers.get(staleKey);\n        let revalidatingFetcher: FetcherStates[\"Loading\"] = {\n          state: \"loading\",\n          data: existingFetcher && existingFetcher.data,\n          formMethod: undefined,\n          formAction: undefined,\n          formEncType: undefined,\n          formData: undefined,\n          \" _hasFetcherDoneAnything \": true,\n        };\n        state.fetchers.set(staleKey, revalidatingFetcher);\n        fetchControllers.set(staleKey, abortController);\n      });\n\n    updateState({ fetchers: new Map(state.fetchers) });\n\n    let { results, loaderResults, fetcherResults } =\n      await callLoadersAndMaybeResolveData(\n        state.matches,\n        matches,\n        matchesToLoad,\n        revalidatingFetchers,\n        revalidationRequest\n      );\n\n    if (abortController.signal.aborted) {\n      return;\n    }\n\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach(([staleKey]) =>\n      fetchControllers.delete(staleKey)\n    );\n\n    let redirect = findRedirect(results);\n    if (redirect) {\n      return startRedirectNavigation(state, redirect);\n    }\n\n    // Process and commit output from loaders\n    let { loaderData, errors } = processLoaderData(\n      state,\n      state.matches,\n      matchesToLoad,\n      loaderResults,\n      undefined,\n      revalidatingFetchers,\n      fetcherResults,\n      activeDeferreds\n    );\n\n    let doneFetcher: FetcherStates[\"Idle\"] = {\n      state: \"idle\",\n      data: actionResult.data,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      \" _hasFetcherDoneAnything \": true,\n    };\n    state.fetchers.set(key, doneFetcher);\n\n    let didAbortFetchLoads = abortStaleFetchLoads(loadId);\n\n    // If we are currently in a navigation loading state and this fetcher is\n    // more recent than the navigation, we want the newer data so abort the\n    // navigation and complete it with the fetcher data\n    if (\n      state.navigation.state === \"loading\" &&\n      loadId > pendingNavigationLoadId\n    ) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers),\n      });\n    } else {\n      // otherwise just update with the fetcher data, preserving any existing\n      // loaderData for loaders that did not need to reload.  We have to\n      // manually merge here since we aren't going through completeNavigation\n      updateState({\n        errors,\n        loaderData: mergeLoaderData(\n          state.loaderData,\n          loaderData,\n          matches,\n          errors\n        ),\n        ...(didAbortFetchLoads ? { fetchers: new Map(state.fetchers) } : {}),\n      });\n      isRevalidationRequired = false;\n    }\n  }\n\n  // Call the matched loader for fetcher.load(), handling redirects, errors, etc.\n  async function handleFetcherLoader(\n    key: string,\n    routeId: string,\n    path: string,\n    match: AgnosticDataRouteMatch,\n    matches: AgnosticDataRouteMatch[],\n    submission?: Submission\n  ) {\n    let existingFetcher = state.fetchers.get(key);\n    // Put this fetcher into it's loading state\n    let loadingFetcher: FetcherStates[\"Loading\"] = {\n      state: \"loading\",\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      ...submission,\n      data: existingFetcher && existingFetcher.data,\n      \" _hasFetcherDoneAnything \": true,\n    };\n    state.fetchers.set(key, loadingFetcher);\n    updateState({ fetchers: new Map(state.fetchers) });\n\n    // Call the loader for this fetcher route match\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal\n    );\n    fetchControllers.set(key, abortController);\n    let result: DataResult = await callLoaderOrAction(\n      \"loader\",\n      fetchRequest,\n      match,\n      matches,\n      router.basename\n    );\n\n    // Deferred isn't supported for fetcher loads, await everything and treat it\n    // as a normal load.  resolveDeferredData will return undefined if this\n    // fetcher gets aborted, so we just leave result untouched and short circuit\n    // below if that happens\n    if (isDeferredResult(result)) {\n      result =\n        (await resolveDeferredData(result, fetchRequest.signal, true)) ||\n        result;\n    }\n\n    // We can delete this so long as we weren't aborted by ou our own fetcher\n    // re-load which would have put _new_ controller is in fetchControllers\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n\n    if (fetchRequest.signal.aborted) {\n      return;\n    }\n\n    // If the loader threw a redirect Response, start a new REPLACE navigation\n    if (isRedirectResult(result)) {\n      await startRedirectNavigation(state, result);\n      return;\n    }\n\n    // Process any non-redirect errors thrown\n    if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, routeId);\n      state.fetchers.delete(key);\n      // TODO: In remix, this would reset to IDLE_NAVIGATION if it was a catch -\n      // do we need to behave any differently with our non-redirect errors?\n      // What if it was a non-redirect Response?\n      updateState({\n        fetchers: new Map(state.fetchers),\n        errors: {\n          [boundaryMatch.route.id]: result.error,\n        },\n      });\n      return;\n    }\n\n    invariant(!isDeferredResult(result), \"Unhandled fetcher deferred data\");\n\n    // Put the fetcher back into an idle state\n    let doneFetcher: FetcherStates[\"Idle\"] = {\n      state: \"idle\",\n      data: result.data,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      \" _hasFetcherDoneAnything \": true,\n    };\n    state.fetchers.set(key, doneFetcher);\n    updateState({ fetchers: new Map(state.fetchers) });\n  }\n\n  /**\n   * Utility function to handle redirects returned from an action or loader.\n   * Normally, a redirect \"replaces\" the navigation that triggered it.  So, for\n   * example:\n   *\n   *  - user is on /a\n   *  - user clicks a link to /b\n   *  - loader for /b redirects to /c\n   *\n   * In a non-JS app the browser would track the in-flight navigation to /b and\n   * then replace it with /c when it encountered the redirect response.  In\n   * the end it would only ever update the URL bar with /c.\n   *\n   * In client-side routing using pushState/replaceState, we aim to emulate\n   * this behavior and we also do not update history until the end of the\n   * navigation (including processed redirects).  This means that we never\n   * actually touch history until we've processed redirects, so we just use\n   * the history action from the original navigation (PUSH or REPLACE).\n   */\n  async function startRedirectNavigation(\n    state: RouterState,\n    redirect: RedirectResult,\n    {\n      submission,\n      replace,\n      isFetchActionRedirect,\n    }: {\n      submission?: Submission;\n      replace?: boolean;\n      isFetchActionRedirect?: boolean;\n    } = {}\n  ) {\n    if (redirect.revalidate) {\n      isRevalidationRequired = true;\n    }\n\n    let redirectLocation = createLocation(\n      state.location,\n      redirect.location,\n      // TODO: This can be removed once we get rid of useTransition in Remix v2\n      {\n        _isRedirect: true,\n        ...(isFetchActionRedirect ? { _isFetchActionRedirect: true } : {}),\n      }\n    );\n    invariant(\n      redirectLocation,\n      \"Expected a location on the redirect navigation\"\n    );\n\n    // Check if this an external redirect that goes to a new origin\n    if (isBrowser && typeof window?.location !== \"undefined\") {\n      let newOrigin = init.history.createURL(redirect.location).origin;\n      if (window.location.origin !== newOrigin) {\n        if (replace) {\n          window.location.replace(redirect.location);\n        } else {\n          window.location.assign(redirect.location);\n        }\n        return;\n      }\n    }\n\n    // There's no need to abort on redirects, since we don't detect the\n    // redirect until the action/loaders have settled\n    pendingNavigationController = null;\n\n    let redirectHistoryAction =\n      replace === true ? HistoryAction.Replace : HistoryAction.Push;\n\n    // Use the incoming submission if provided, fallback on the active one in\n    // state.navigation\n    let { formMethod, formAction, formEncType, formData } = state.navigation;\n    if (!submission && formMethod && formAction && formData && formEncType) {\n      submission = {\n        formMethod,\n        formAction,\n        formEncType,\n        formData,\n      };\n    }\n\n    // If this was a 307/308 submission we want to preserve the HTTP method and\n    // re-submit the GET/POST/PUT/PATCH/DELETE as a submission navigation to the\n    // redirected location\n    if (\n      redirectPreserveMethodStatusCodes.has(redirect.status) &&\n      submission &&\n      isMutationMethod(submission.formMethod)\n    ) {\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        submission: {\n          ...submission,\n          formAction: redirect.location,\n        },\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset,\n      });\n    } else {\n      // Otherwise, we kick off a new loading navigation, preserving the\n      // submission info for the duration of this navigation\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation: {\n          state: \"loading\",\n          location: redirectLocation,\n          formMethod: submission ? submission.formMethod : undefined,\n          formAction: submission ? submission.formAction : undefined,\n          formEncType: submission ? submission.formEncType : undefined,\n          formData: submission ? submission.formData : undefined,\n        },\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset,\n      });\n    }\n  }\n\n  async function callLoadersAndMaybeResolveData(\n    currentMatches: AgnosticDataRouteMatch[],\n    matches: AgnosticDataRouteMatch[],\n    matchesToLoad: AgnosticDataRouteMatch[],\n    fetchersToLoad: RevalidatingFetcher[],\n    request: Request\n  ) {\n    // Call all navigation loaders and revalidating fetcher loaders in parallel,\n    // then slice off the results into separate arrays so we can handle them\n    // accordingly\n    let results = await Promise.all([\n      ...matchesToLoad.map((match) =>\n        callLoaderOrAction(\"loader\", request, match, matches, router.basename)\n      ),\n      ...fetchersToLoad.map(([, href, match, fetchMatches]) =>\n        callLoaderOrAction(\n          \"loader\",\n          createClientSideRequest(init.history, href, request.signal),\n          match,\n          fetchMatches,\n          router.basename\n        )\n      ),\n    ]);\n    let loaderResults = results.slice(0, matchesToLoad.length);\n    let fetcherResults = results.slice(matchesToLoad.length);\n\n    await Promise.all([\n      resolveDeferredResults(\n        currentMatches,\n        matchesToLoad,\n        loaderResults,\n        request.signal,\n        false,\n        state.loaderData\n      ),\n      resolveDeferredResults(\n        currentMatches,\n        fetchersToLoad.map(([, , match]) => match),\n        fetcherResults,\n        request.signal,\n        true\n      ),\n    ]);\n\n    return { results, loaderResults, fetcherResults };\n  }\n\n  function interruptActiveLoads() {\n    // Every interruption triggers a revalidation\n    isRevalidationRequired = true;\n\n    // Cancel pending route-level deferreds and mark cancelled routes for\n    // revalidation\n    cancelledDeferredRoutes.push(...cancelActiveDeferreds());\n\n    // Abort in-flight fetcher loads\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.push(key);\n        abortFetcher(key);\n      }\n    });\n  }\n\n  function setFetcherError(key: string, routeId: string, error: any) {\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState({\n      errors: {\n        [boundaryMatch.route.id]: error,\n      },\n      fetchers: new Map(state.fetchers),\n    });\n  }\n\n  function deleteFetcher(key: string): void {\n    if (fetchControllers.has(key)) abortFetcher(key);\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    state.fetchers.delete(key);\n  }\n\n  function abortFetcher(key: string) {\n    let controller = fetchControllers.get(key);\n    invariant(controller, `Expected fetch controller: ${key}`);\n    controller.abort();\n    fetchControllers.delete(key);\n  }\n\n  function markFetchersDone(keys: string[]) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher: FetcherStates[\"Idle\"] = {\n        state: \"idle\",\n        data: fetcher.data,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined,\n        \" _hasFetcherDoneAnything \": true,\n      };\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  function markFetchRedirectsDone(): void {\n    let doneKeys = [];\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, `Expected fetcher: ${key}`);\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n      }\n    }\n    markFetchersDone(doneKeys);\n  }\n\n  function abortStaleFetchLoads(landedId: number): boolean {\n    let yeetedKeys = [];\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, `Expected fetcher: ${key}`);\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n\n  function getBlocker(key: string, fn: BlockerFunction) {\n    let blocker: Blocker = state.blockers.get(key) || IDLE_BLOCKER;\n\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n      if (activeBlocker == null) {\n        // This is now the active blocker\n        activeBlocker = key;\n      } else if (key !== activeBlocker) {\n        warning(false, \"A router only supports one blocker at a time\");\n      }\n    }\n\n    return blocker;\n  }\n\n  function deleteBlocker(key: string) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n    if (activeBlocker === key) {\n      activeBlocker = null;\n    }\n  }\n\n  // Utility function to update blockers, ensuring valid state transitions\n  function updateBlocker(key: string, newBlocker: Blocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n\n    // Poor mans state machine :)\n    // https://mermaid.live/edit#pako:eNqVkc9OwzAMxl8l8nnjAYrEtDIOHEBIgwvKJTReGy3_lDpIqO27k6awMG0XcrLlnz87nwdonESogKXXBuE79rq75XZO3-yHds0RJVuv70YrPlUrCEe2HfrORS3rubqZfuhtpg5C9wk5tZ4VKcRUq88q9Z8RS0-48cE1iHJkL0ugbHuFLus9L6spZy8nX9MP2CNdomVaposqu3fGayT8T8-jJQwhepo_UtpgBQaDEUom04dZhAN1aJBDlUKJBxE1ceB2Smj0Mln-IBW5AFU2dwUiktt_2Qaq2dBfaKdEup85UV7Yd-dKjlnkabl2Pvr0DTkTreM\n    invariant(\n      (blocker.state === \"unblocked\" && newBlocker.state === \"blocked\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"blocked\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"proceeding\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"unblocked\") ||\n        (blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\"),\n      `Invalid blocker state transition: ${blocker.state} -> ${newBlocker.state}`\n    );\n\n    state.blockers.set(key, newBlocker);\n    updateState({ blockers: new Map(state.blockers) });\n  }\n\n  function shouldBlockNavigation({\n    currentLocation,\n    nextLocation,\n    historyAction,\n  }: {\n    currentLocation: Location;\n    nextLocation: Location;\n    historyAction: HistoryAction;\n  }): string | undefined {\n    if (activeBlocker == null) {\n      return;\n    }\n\n    // We only allow a single blocker at the moment.  This will need to be\n    // updated if we enhance to support multiple blockers in the future\n    let blockerFunction = blockerFunctions.get(activeBlocker);\n    invariant(\n      blockerFunction,\n      \"Could not find a function for the active blocker\"\n    );\n    let blocker = state.blockers.get(activeBlocker);\n\n    if (blocker && blocker.state === \"proceeding\") {\n      // If the blocker is currently proceeding, we don't need to re-check\n      // it and can let this navigation continue\n      return;\n    }\n\n    // At this point, we know we're unblocked/blocked so we need to check the\n    // user-provided blocker function\n    if (blockerFunction({ currentLocation, nextLocation, historyAction })) {\n      return activeBlocker;\n    }\n  }\n\n  function cancelActiveDeferreds(\n    predicate?: (routeId: string) => boolean\n  ): string[] {\n    let cancelledRouteIds: string[] = [];\n    activeDeferreds.forEach((dfd, routeId) => {\n      if (!predicate || predicate(routeId)) {\n        // Cancel the deferred - but do not remove from activeDeferreds here -\n        // we rely on the subscribers to do that so our tests can assert proper\n        // cleanup via _internalActiveDeferreds\n        dfd.cancel();\n        cancelledRouteIds.push(routeId);\n        activeDeferreds.delete(routeId);\n      }\n    });\n    return cancelledRouteIds;\n  }\n\n  // Opt in to capturing and reporting scroll positions during navigations,\n  // used by the <ScrollRestoration> component\n  function enableScrollRestoration(\n    positions: Record<string, number>,\n    getPosition: GetScrollPositionFunction,\n    getKey?: GetScrollRestorationKeyFunction\n  ) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey = getKey || ((location) => location.key);\n\n    // Perform initial hydration scroll restoration, since we miss the boat on\n    // the initial updateState() because we've not yet rendered <ScrollRestoration/>\n    // and therefore have no savedScrollPositions available\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({ restoreScrollPosition: y });\n      }\n    }\n\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n\n  function saveScrollPosition(\n    location: Location,\n    matches: AgnosticDataRouteMatch[]\n  ): void {\n    if (savedScrollPositions && getScrollRestorationKey && getScrollPosition) {\n      let userMatches = matches.map((m) =>\n        createUseMatchesMatch(m, state.loaderData)\n      );\n      let key = getScrollRestorationKey(location, userMatches) || location.key;\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n\n  function getSavedScrollPosition(\n    location: Location,\n    matches: AgnosticDataRouteMatch[]\n  ): number | null {\n    if (savedScrollPositions && getScrollRestorationKey && getScrollPosition) {\n      let userMatches = matches.map((m) =>\n        createUseMatchesMatch(m, state.loaderData)\n      );\n      let key = getScrollRestorationKey(location, userMatches) || location.key;\n      let y = savedScrollPositions[key];\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n    return null;\n  }\n\n  router = {\n    get basename() {\n      return init.basename;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: (to: To) => init.history.createHref(to),\n    encodeLocation: (to: To) => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    _internalFetchControllers: fetchControllers,\n    _internalActiveDeferreds: activeDeferreds,\n  };\n\n  return router;\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region createStaticHandler\n////////////////////////////////////////////////////////////////////////////////\n\nexport const UNSAFE_DEFERRED_SYMBOL = Symbol(\"deferred\");\n\nexport function createStaticHandler(\n  routes: AgnosticRouteObject[],\n  opts?: {\n    basename?: string;\n  }\n): StaticHandler {\n  invariant(\n    routes.length > 0,\n    \"You must provide a non-empty routes array to createStaticHandler\"\n  );\n\n  let dataRoutes = convertRoutesToDataRoutes(routes);\n  let basename = (opts ? opts.basename : null) || \"/\";\n\n  /**\n   * The query() method is intended for document requests, in which we want to\n   * call an optional action and potentially multiple loaders for all nested\n   * routes.  It returns a StaticHandlerContext object, which is very similar\n   * to the router state (location, loaderData, actionData, errors, etc.) and\n   * also adds SSR-specific information such as the statusCode and headers\n   * from action/loaders Responses.\n   *\n   * It _should_ never throw and should report all errors through the\n   * returned context.errors object, properly associating errors to their error\n   * boundary.  Additionally, it tracks _deepestRenderedBoundaryId which can be\n   * used to emulate React error boundaries during SSr by performing a second\n   * pass only down to the boundaryId.\n   *\n   * The one exception where we do not return a StaticHandlerContext is when a\n   * redirect response is returned or thrown from any action/loader.  We\n   * propagate that out and return the raw Response so the HTTP server can\n   * return it directly.\n   */\n  async function query(\n    request: Request,\n    { requestContext }: { requestContext?: unknown } = {}\n  ): Promise<StaticHandlerContext | Response> {\n    let url = new URL(request.url);\n    let method = request.method.toLowerCase();\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"head\") {\n      let error = getInternalRouterError(405, { method });\n      let { matches: methodNotAllowedMatches, route } =\n        getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: methodNotAllowedMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error,\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    } else if (!matches) {\n      let error = getInternalRouterError(404, { pathname: location.pathname });\n      let { matches: notFoundMatches, route } =\n        getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: notFoundMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error,\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    let result = await queryImpl(request, location, matches, requestContext);\n    if (isResponse(result)) {\n      return result;\n    }\n\n    // When returning StaticHandlerContext, we patch back in the location here\n    // since we need it for React Context.  But this helps keep our submit and\n    // loadRouteData operating on a Request instead of a Location\n    return { location, basename, ...result };\n  }\n\n  /**\n   * The queryRoute() method is intended for targeted route requests, either\n   * for fetch ?_data requests or resource route requests.  In this case, we\n   * are only ever calling a single action or loader, and we are returning the\n   * returned value directly.  In most cases, this will be a Response returned\n   * from the action/loader, but it may be a primitive or other value as well -\n   * and in such cases the calling context should handle that accordingly.\n   *\n   * We do respect the throw/return differentiation, so if an action/loader\n   * throws, then this method will throw the value.  This is important so we\n   * can do proper boundary identification in Remix where a thrown Response\n   * must go to the Catch Boundary but a returned Response is happy-path.\n   *\n   * One thing to note is that any Router-initiated Errors that make sense\n   * to associate with a status code will be thrown as an ErrorResponse\n   * instance which include the raw Error, such that the calling context can\n   * serialize the error as they see fit while including the proper response\n   * code.  Examples here are 404 and 405 errors that occur prior to reaching\n   * any user-defined loaders.\n   */\n  async function queryRoute(\n    request: Request,\n    {\n      routeId,\n      requestContext,\n    }: { requestContext?: unknown; routeId?: string } = {}\n  ): Promise<any> {\n    let url = new URL(request.url);\n    let method = request.method.toLowerCase();\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"head\" && method !== \"options\") {\n      throw getInternalRouterError(405, { method });\n    } else if (!matches) {\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n\n    let match = routeId\n      ? matches.find((m) => m.route.id === routeId)\n      : getTargetMatch(matches, location);\n\n    if (routeId && !match) {\n      throw getInternalRouterError(403, {\n        pathname: location.pathname,\n        routeId,\n      });\n    } else if (!match) {\n      // This should never hit I don't think?\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n\n    let result = await queryImpl(\n      request,\n      location,\n      matches,\n      requestContext,\n      match\n    );\n    if (isResponse(result)) {\n      return result;\n    }\n\n    let error = result.errors ? Object.values(result.errors)[0] : undefined;\n    if (error !== undefined) {\n      // If we got back result.errors, that means the loader/action threw\n      // _something_ that wasn't a Response, but it's not guaranteed/required\n      // to be an `instanceof Error` either, so we have to use throw here to\n      // preserve the \"error\" state outside of queryImpl.\n      throw error;\n    }\n\n    // Pick off the right state value to return\n    if (result.actionData) {\n      return Object.values(result.actionData)[0];\n    }\n\n    if (result.loaderData) {\n      let data = Object.values(result.loaderData)[0];\n      if (result.activeDeferreds?.[match.route.id]) {\n        data[UNSAFE_DEFERRED_SYMBOL] = result.activeDeferreds[match.route.id];\n      }\n      return data;\n    }\n\n    return undefined;\n  }\n\n  async function queryImpl(\n    request: Request,\n    location: Location,\n    matches: AgnosticDataRouteMatch[],\n    requestContext: unknown,\n    routeMatch?: AgnosticDataRouteMatch\n  ): Promise<Omit<StaticHandlerContext, \"location\" | \"basename\"> | Response> {\n    invariant(\n      request.signal,\n      \"query()/queryRoute() requests must contain an AbortController signal\"\n    );\n\n    try {\n      if (isMutationMethod(request.method.toLowerCase())) {\n        let result = await submit(\n          request,\n          matches,\n          routeMatch || getTargetMatch(matches, location),\n          requestContext,\n          routeMatch != null\n        );\n        return result;\n      }\n\n      let result = await loadRouteData(\n        request,\n        matches,\n        requestContext,\n        routeMatch\n      );\n      return isResponse(result)\n        ? result\n        : {\n            ...result,\n            actionData: null,\n            actionHeaders: {},\n          };\n    } catch (e) {\n      // If the user threw/returned a Response in callLoaderOrAction, we throw\n      // it to bail out and then return or throw here based on whether the user\n      // returned or threw\n      if (isQueryRouteResponse(e)) {\n        if (e.type === ResultType.error && !isRedirectResponse(e.response)) {\n          throw e.response;\n        }\n        return e.response;\n      }\n      // Redirects are always returned since they don't propagate to catch\n      // boundaries\n      if (isRedirectResponse(e)) {\n        return e;\n      }\n      throw e;\n    }\n  }\n\n  async function submit(\n    request: Request,\n    matches: AgnosticDataRouteMatch[],\n    actionMatch: AgnosticDataRouteMatch,\n    requestContext: unknown,\n    isRouteRequest: boolean\n  ): Promise<Omit<StaticHandlerContext, \"location\" | \"basename\"> | Response> {\n    let result: DataResult;\n\n    if (!actionMatch.route.action) {\n      let error = getInternalRouterError(405, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: actionMatch.route.id,\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error,\n      };\n    } else {\n      result = await callLoaderOrAction(\n        \"action\",\n        request,\n        actionMatch,\n        matches,\n        basename,\n        true,\n        isRouteRequest,\n        requestContext\n      );\n\n      if (request.signal.aborted) {\n        let method = isRouteRequest ? \"queryRoute\" : \"query\";\n        throw new Error(`${method}() call aborted`);\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      // Uhhhh - this should never happen, we should always throw these from\n      // callLoaderOrAction, but the type narrowing here keeps TS happy and we\n      // can get back on the \"throw all redirect responses\" train here should\n      // this ever happen :/\n      throw new Response(null, {\n        status: result.status,\n        headers: {\n          Location: result.location,\n        },\n      });\n    }\n\n    if (isDeferredResult(result)) {\n      let error = getInternalRouterError(400, { type: \"defer-action\" });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error,\n      };\n    }\n\n    if (isRouteRequest) {\n      // Note: This should only be non-Response values if we get here, since\n      // isRouteRequest should throw any Response received in callLoaderOrAction\n      if (isErrorResult(result)) {\n        throw result.error;\n      }\n\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: { [actionMatch.route.id]: result.data },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      let context = await loadRouteData(\n        request,\n        matches,\n        requestContext,\n        undefined,\n        {\n          [boundaryMatch.route.id]: result.error,\n        }\n      );\n\n      // action status codes take precedence over loader status codes\n      return {\n        ...context,\n        statusCode: isRouteErrorResponse(result.error)\n          ? result.error.status\n          : 500,\n        actionData: null,\n        actionHeaders: {\n          ...(result.headers ? { [actionMatch.route.id]: result.headers } : {}),\n        },\n      };\n    }\n\n    // Create a GET request for the loaders\n    let loaderRequest = new Request(request.url, {\n      headers: request.headers,\n      redirect: request.redirect,\n      signal: request.signal,\n    });\n    let context = await loadRouteData(loaderRequest, matches, requestContext);\n\n    return {\n      ...context,\n      // action status codes take precedence over loader status codes\n      ...(result.statusCode ? { statusCode: result.statusCode } : {}),\n      actionData: {\n        [actionMatch.route.id]: result.data,\n      },\n      actionHeaders: {\n        ...(result.headers ? { [actionMatch.route.id]: result.headers } : {}),\n      },\n    };\n  }\n\n  async function loadRouteData(\n    request: Request,\n    matches: AgnosticDataRouteMatch[],\n    requestContext: unknown,\n    routeMatch?: AgnosticDataRouteMatch,\n    pendingActionError?: RouteData\n  ): Promise<\n    | Omit<\n        StaticHandlerContext,\n        \"location\" | \"basename\" | \"actionData\" | \"actionHeaders\"\n      >\n    | Response\n  > {\n    let isRouteRequest = routeMatch != null;\n\n    // Short circuit if we have no loaders to run (queryRoute())\n    if (isRouteRequest && !routeMatch?.route.loader) {\n      throw getInternalRouterError(400, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: routeMatch?.route.id,\n      });\n    }\n\n    let requestMatches = routeMatch\n      ? [routeMatch]\n      : getLoaderMatchesUntilBoundary(\n          matches,\n          Object.keys(pendingActionError || {})[0]\n        );\n    let matchesToLoad = requestMatches.filter((m) => m.route.loader);\n\n    // Short circuit if we have no loaders to run (query())\n    if (matchesToLoad.length === 0) {\n      return {\n        matches,\n        // Add a null for all matched routes for proper revalidation on the client\n        loaderData: matches.reduce(\n          (acc, m) => Object.assign(acc, { [m.route.id]: null }),\n          {}\n        ),\n        errors: pendingActionError || null,\n        statusCode: 200,\n        loaderHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    let results = await Promise.all([\n      ...matchesToLoad.map((match) =>\n        callLoaderOrAction(\n          \"loader\",\n          request,\n          match,\n          matches,\n          basename,\n          true,\n          isRouteRequest,\n          requestContext\n        )\n      ),\n    ]);\n\n    if (request.signal.aborted) {\n      let method = isRouteRequest ? \"queryRoute\" : \"query\";\n      throw new Error(`${method}() call aborted`);\n    }\n\n    // Process and commit output from loaders\n    let activeDeferreds = new Map<string, DeferredData>();\n    let context = processRouteLoaderData(\n      matches,\n      matchesToLoad,\n      results,\n      pendingActionError,\n      activeDeferreds\n    );\n\n    // Add a null for any non-loader matches for proper revalidation on the client\n    let executedLoaders = new Set<string>(\n      matchesToLoad.map((match) => match.route.id)\n    );\n    matches.forEach((match) => {\n      if (!executedLoaders.has(match.route.id)) {\n        context.loaderData[match.route.id] = null;\n      }\n    });\n\n    return {\n      ...context,\n      matches,\n      activeDeferreds:\n        activeDeferreds.size > 0\n          ? Object.fromEntries(activeDeferreds.entries())\n          : null,\n    };\n  }\n\n  return {\n    dataRoutes,\n    query,\n    queryRoute,\n  };\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Helpers\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Given an existing StaticHandlerContext and an error thrown at render time,\n * provide an updated StaticHandlerContext suitable for a second SSR render\n */\nexport function getStaticContextFromError(\n  routes: AgnosticDataRouteObject[],\n  context: StaticHandlerContext,\n  error: any\n) {\n  let newContext: StaticHandlerContext = {\n    ...context,\n    statusCode: 500,\n    errors: {\n      [context._deepestRenderedBoundaryId || routes[0].id]: error,\n    },\n  };\n  return newContext;\n}\n\nfunction isSubmissionNavigation(\n  opts: RouterNavigateOptions\n): opts is SubmissionNavigateOptions {\n  return opts != null && \"formData\" in opts;\n}\n\n// Normalize navigation options by converting formMethod=GET formData objects to\n// URLSearchParams so they behave identically to links with query params\nfunction normalizeNavigateOptions(\n  to: To,\n  opts?: RouterNavigateOptions,\n  isFetcher = false\n): {\n  path: string;\n  submission?: Submission;\n  error?: ErrorResponse;\n} {\n  let path = typeof to === \"string\" ? to : createPath(to);\n\n  // Return location verbatim on non-submission navigations\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return { path };\n  }\n\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, { method: opts.formMethod }),\n    };\n  }\n\n  // Create a Submission on non-GET navigations\n  let submission: Submission | undefined;\n  if (opts.formData) {\n    submission = {\n      formMethod: opts.formMethod || \"get\",\n      formAction: stripHashFromPath(path),\n      formEncType:\n        (opts && opts.formEncType) || \"application/x-www-form-urlencoded\",\n      formData: opts.formData,\n    };\n\n    if (isMutationMethod(submission.formMethod)) {\n      return { path, submission };\n    }\n  }\n\n  // Flatten submission onto URLSearchParams for GET submissions\n  let parsedPath = parsePath(path);\n  try {\n    let searchParams = convertFormDataToSearchParams(opts.formData);\n    // Since fetcher GET submissions only run a single loader (as opposed to\n    // navigation GET submissions which run all loaders), we need to preserve\n    // any incoming ?index params\n    if (\n      isFetcher &&\n      parsedPath.search &&\n      hasNakedIndexQuery(parsedPath.search)\n    ) {\n      searchParams.append(\"index\", \"\");\n    }\n    parsedPath.search = `?${searchParams}`;\n  } catch (e) {\n    return {\n      path,\n      error: getInternalRouterError(400),\n    };\n  }\n\n  return { path: createPath(parsedPath), submission };\n}\n\n// Filter out all routes below any caught error as they aren't going to\n// render so we don't need to load them\nfunction getLoaderMatchesUntilBoundary(\n  matches: AgnosticDataRouteMatch[],\n  boundaryId?: string\n) {\n  let boundaryMatches = matches;\n  if (boundaryId) {\n    let index = matches.findIndex((m) => m.route.id === boundaryId);\n    if (index >= 0) {\n      boundaryMatches = matches.slice(0, index);\n    }\n  }\n  return boundaryMatches;\n}\n\nfunction getMatchesToLoad(\n  history: History,\n  state: RouterState,\n  matches: AgnosticDataRouteMatch[],\n  submission: Submission | undefined,\n  location: Location,\n  isRevalidationRequired: boolean,\n  cancelledDeferredRoutes: string[],\n  cancelledFetcherLoads: string[],\n  pendingActionData?: RouteData,\n  pendingError?: RouteData,\n  fetchLoadMatches?: Map<string, FetchLoadMatch>\n): [AgnosticDataRouteMatch[], RevalidatingFetcher[]] {\n  let actionResult = pendingError\n    ? Object.values(pendingError)[0]\n    : pendingActionData\n    ? Object.values(pendingActionData)[0]\n    : undefined;\n\n  // Pick navigation matches that are net-new or qualify for revalidation\n  let boundaryId = pendingError ? Object.keys(pendingError)[0] : undefined;\n  let boundaryMatches = getLoaderMatchesUntilBoundary(matches, boundaryId);\n  let navigationMatches = boundaryMatches.filter(\n    (match, index) =>\n      match.route.loader != null &&\n      (isNewLoader(state.loaderData, state.matches[index], match) ||\n        // If this route had a pending deferred cancelled it must be revalidated\n        cancelledDeferredRoutes.some((id) => id === match.route.id) ||\n        shouldRevalidateLoader(\n          history,\n          state.location,\n          state.matches[index],\n          submission,\n          location,\n          match,\n          isRevalidationRequired,\n          actionResult\n        ))\n  );\n\n  // Pick fetcher.loads that need to be revalidated\n  let revalidatingFetchers: RevalidatingFetcher[] = [];\n  fetchLoadMatches &&\n    fetchLoadMatches.forEach(([href, match, fetchMatches], key) => {\n      // This fetcher was cancelled from a prior action submission - force reload\n      if (cancelledFetcherLoads.includes(key)) {\n        revalidatingFetchers.push([key, href, match, fetchMatches]);\n      } else if (isRevalidationRequired) {\n        let shouldRevalidate = shouldRevalidateLoader(\n          history,\n          href,\n          match,\n          submission,\n          href,\n          match,\n          isRevalidationRequired,\n          actionResult\n        );\n        if (shouldRevalidate) {\n          revalidatingFetchers.push([key, href, match, fetchMatches]);\n        }\n      }\n    });\n\n  return [navigationMatches, revalidatingFetchers];\n}\n\nfunction isNewLoader(\n  currentLoaderData: RouteData,\n  currentMatch: AgnosticDataRouteMatch,\n  match: AgnosticDataRouteMatch\n) {\n  let isNew =\n    // [a] -> [a, b]\n    !currentMatch ||\n    // [a, b] -> [a, c]\n    match.route.id !== currentMatch.route.id;\n\n  // Handle the case that we don't have data for a re-used route, potentially\n  // from a prior error or from a cancelled pending deferred\n  let isMissingData = currentLoaderData[match.route.id] === undefined;\n\n  // Always load if this is a net-new route or we don't yet have data\n  return isNew || isMissingData;\n}\n\nfunction isNewRouteInstance(\n  currentMatch: AgnosticDataRouteMatch,\n  match: AgnosticDataRouteMatch\n) {\n  let currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname ||\n    // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    (currentPath &&\n      currentPath.endsWith(\"*\") &&\n      currentMatch.params[\"*\"] !== match.params[\"*\"])\n  );\n}\n\nfunction shouldRevalidateLoader(\n  history: History,\n  currentLocation: string | Location,\n  currentMatch: AgnosticDataRouteMatch,\n  submission: Submission | undefined,\n  location: string | Location,\n  match: AgnosticDataRouteMatch,\n  isRevalidationRequired: boolean,\n  actionResult: DataResult | undefined\n) {\n  let currentUrl = history.createURL(currentLocation);\n  let currentParams = currentMatch.params;\n  let nextUrl = history.createURL(location);\n  let nextParams = match.params;\n\n  // This is the default implementation as to when we revalidate.  If the route\n  // provides it's own implementation, then we give them full control but\n  // provide this value so they can leverage it if needed after they check\n  // their own specific use cases\n  // Note that fetchers always provide the same current/next locations so the\n  // URL-based checks here don't apply to fetcher shouldRevalidate calls\n  let defaultShouldRevalidate =\n    isNewRouteInstance(currentMatch, match) ||\n    // Clicked the same link, resubmitted a GET form\n    currentUrl.toString() === nextUrl.toString() ||\n    // Search params affect all loaders\n    currentUrl.search !== nextUrl.search ||\n    // Forced revalidation due to submission, useRevalidate, or X-Remix-Revalidate\n    isRevalidationRequired;\n\n  if (match.route.shouldRevalidate) {\n    let routeChoice = match.route.shouldRevalidate({\n      currentUrl,\n      currentParams,\n      nextUrl,\n      nextParams,\n      ...submission,\n      actionResult,\n      defaultShouldRevalidate,\n    });\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n\n  return defaultShouldRevalidate;\n}\n\nasync function callLoaderOrAction(\n  type: \"loader\" | \"action\",\n  request: Request,\n  match: AgnosticDataRouteMatch,\n  matches: AgnosticDataRouteMatch[],\n  basename = \"/\",\n  isStaticRequest: boolean = false,\n  isRouteRequest: boolean = false,\n  requestContext?: unknown\n): Promise<DataResult> {\n  let resultType;\n  let result;\n\n  // Setup a promise we can race against so that abort signals short circuit\n  let reject: () => void;\n  let abortPromise = new Promise((_, r) => (reject = r));\n  let onReject = () => reject();\n  request.signal.addEventListener(\"abort\", onReject);\n\n  try {\n    let handler = match.route[type];\n    invariant<Function>(\n      handler,\n      `Could not find the ${type} to run on the \"${match.route.id}\" route`\n    );\n\n    result = await Promise.race([\n      handler({ request, params: match.params, context: requestContext }),\n      abortPromise,\n    ]);\n\n    invariant(\n      result !== undefined,\n      `You defined ${type === \"action\" ? \"an action\" : \"a loader\"} for route ` +\n        `\"${match.route.id}\" but didn't return anything from your \\`${type}\\` ` +\n        `function. Please return a value or \\`null\\`.`\n    );\n  } catch (e) {\n    resultType = ResultType.error;\n    result = e;\n  } finally {\n    request.signal.removeEventListener(\"abort\", onReject);\n  }\n\n  if (isResponse(result)) {\n    let status = result.status;\n\n    // Process redirects\n    if (redirectStatusCodes.has(status)) {\n      let location = result.headers.get(\"Location\");\n      invariant(\n        location,\n        \"Redirects returned/thrown from loaders/actions must have a Location header\"\n      );\n\n      let isAbsolute = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i.test(location);\n\n      // Support relative routing in internal redirects\n      if (!isAbsolute) {\n        let activeMatches = matches.slice(0, matches.indexOf(match) + 1);\n        let routePathnames = getPathContributingMatches(activeMatches).map(\n          (match) => match.pathnameBase\n        );\n        let resolvedLocation = resolveTo(\n          location,\n          routePathnames,\n          new URL(request.url).pathname\n        );\n        invariant(\n          createPath(resolvedLocation),\n          `Unable to resolve redirect location: ${location}`\n        );\n\n        // Prepend the basename to the redirect location if we have one\n        if (basename) {\n          let path = resolvedLocation.pathname;\n          resolvedLocation.pathname =\n            path === \"/\" ? basename : joinPaths([basename, path]);\n        }\n\n        location = createPath(resolvedLocation);\n      } else if (!isStaticRequest) {\n        // Strip off the protocol+origin for same-origin absolute redirects.\n        // If this is a static reques, we can let it go back to the browser\n        // as-is\n        let currentUrl = new URL(request.url);\n        let url = location.startsWith(\"//\")\n          ? new URL(currentUrl.protocol + location)\n          : new URL(location);\n        if (url.origin === currentUrl.origin) {\n          location = url.pathname + url.search + url.hash;\n        }\n      }\n\n      // Don't process redirects in the router during static requests requests.\n      // Instead, throw the Response and let the server handle it with an HTTP\n      // redirect.  We also update the Location header in place in this flow so\n      // basename and relative routing is taken into account\n      if (isStaticRequest) {\n        result.headers.set(\"Location\", location);\n        throw result;\n      }\n\n      return {\n        type: ResultType.redirect,\n        status,\n        location,\n        revalidate: result.headers.get(\"X-Remix-Revalidate\") !== null,\n      };\n    }\n\n    // For SSR single-route requests, we want to hand Responses back directly\n    // without unwrapping.  We do this with the QueryRouteResponse wrapper\n    // interface so we can know whether it was returned or thrown\n    if (isRouteRequest) {\n      // eslint-disable-next-line no-throw-literal\n      throw {\n        type: resultType || ResultType.data,\n        response: result,\n      };\n    }\n\n    let data: any;\n    let contentType = result.headers.get(\"Content-Type\");\n    // Check between word boundaries instead of startsWith() due to the last\n    // paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type\n    if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n      data = await result.json();\n    } else {\n      data = await result.text();\n    }\n\n    if (resultType === ResultType.error) {\n      return {\n        type: resultType,\n        error: new ErrorResponse(status, result.statusText, data),\n        headers: result.headers,\n      };\n    }\n\n    return {\n      type: ResultType.data,\n      data,\n      statusCode: result.status,\n      headers: result.headers,\n    };\n  }\n\n  if (resultType === ResultType.error) {\n    return { type: resultType, error: result };\n  }\n\n  if (result instanceof DeferredData) {\n    return { type: ResultType.deferred, deferredData: result };\n  }\n\n  return { type: ResultType.data, data: result };\n}\n\n// Utility method for creating the Request instances for loaders/actions during\n// client-side navigations and fetches.  During SSR we will always have a\n// Request instance from the static handler (query/queryRoute)\nfunction createClientSideRequest(\n  history: History,\n  location: string | Location,\n  signal: AbortSignal,\n  submission?: Submission\n): Request {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init: RequestInit = { signal };\n\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let { formMethod, formEncType, formData } = submission;\n    init.method = formMethod.toUpperCase();\n    init.body =\n      formEncType === \"application/x-www-form-urlencoded\"\n        ? convertFormDataToSearchParams(formData)\n        : formData;\n  }\n\n  // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n  return new Request(url, init);\n}\n\nfunction convertFormDataToSearchParams(formData: FormData): URLSearchParams {\n  let searchParams = new URLSearchParams();\n\n  for (let [key, value] of formData.entries()) {\n    invariant(\n      typeof value === \"string\",\n      'File inputs are not supported with encType \"application/x-www-form-urlencoded\", ' +\n        'please use \"multipart/form-data\" instead.'\n    );\n    searchParams.append(key, value);\n  }\n\n  return searchParams;\n}\n\nfunction processRouteLoaderData(\n  matches: AgnosticDataRouteMatch[],\n  matchesToLoad: AgnosticDataRouteMatch[],\n  results: DataResult[],\n  pendingError: RouteData | undefined,\n  activeDeferreds: Map<string, DeferredData>\n): {\n  loaderData: RouterState[\"loaderData\"];\n  errors: RouterState[\"errors\"] | null;\n  statusCode: number;\n  loaderHeaders: Record<string, Headers>;\n} {\n  // Fill in loaderData/errors from our loaders\n  let loaderData: RouterState[\"loaderData\"] = {};\n  let errors: RouterState[\"errors\"] | null = null;\n  let statusCode: number | undefined;\n  let foundError = false;\n  let loaderHeaders: Record<string, Headers> = {};\n\n  // Process loader results into state.loaderData/state.errors\n  results.forEach((result, index) => {\n    let id = matchesToLoad[index].route.id;\n    invariant(\n      !isRedirectResult(result),\n      \"Cannot handle redirect results in processLoaderData\"\n    );\n    if (isErrorResult(result)) {\n      // Look upwards from the matched route for the closest ancestor\n      // error boundary, defaulting to the root match\n      let boundaryMatch = findNearestBoundary(matches, id);\n      let error = result.error;\n      // If we have a pending action error, we report it at the highest-route\n      // that throws a loader error, and then clear it out to indicate that\n      // it was consumed\n      if (pendingError) {\n        error = Object.values(pendingError)[0];\n        pendingError = undefined;\n      }\n\n      errors = errors || {};\n\n      // Prefer higher error values if lower errors bubble to the same boundary\n      if (errors[boundaryMatch.route.id] == null) {\n        errors[boundaryMatch.route.id] = error;\n      }\n\n      // Clear our any prior loaderData for the throwing route\n      loaderData[id] = undefined;\n\n      // Once we find our first (highest) error, we set the status code and\n      // prevent deeper status codes from overriding\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error)\n          ? result.error.status\n          : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      if (isDeferredResult(result)) {\n        activeDeferreds.set(id, result.deferredData);\n        loaderData[id] = result.deferredData.data;\n      } else {\n        loaderData[id] = result.data;\n      }\n\n      // Error status codes always override success status codes, but if all\n      // loaders are successful we take the deepest status code.\n      if (\n        result.statusCode != null &&\n        result.statusCode !== 200 &&\n        !foundError\n      ) {\n        statusCode = result.statusCode;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    }\n  });\n\n  // If we didn't consume the pending action error (i.e., all loaders\n  // resolved), then consume it here.  Also clear out any loaderData for the\n  // throwing route\n  if (pendingError) {\n    errors = pendingError;\n    loaderData[Object.keys(pendingError)[0]] = undefined;\n  }\n\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders,\n  };\n}\n\nfunction processLoaderData(\n  state: RouterState,\n  matches: AgnosticDataRouteMatch[],\n  matchesToLoad: AgnosticDataRouteMatch[],\n  results: DataResult[],\n  pendingError: RouteData | undefined,\n  revalidatingFetchers: RevalidatingFetcher[],\n  fetcherResults: DataResult[],\n  activeDeferreds: Map<string, DeferredData>\n): {\n  loaderData: RouterState[\"loaderData\"];\n  errors?: RouterState[\"errors\"];\n} {\n  let { loaderData, errors } = processRouteLoaderData(\n    matches,\n    matchesToLoad,\n    results,\n    pendingError,\n    activeDeferreds\n  );\n\n  // Process results from our revalidating fetchers\n  for (let index = 0; index < revalidatingFetchers.length; index++) {\n    let [key, , match] = revalidatingFetchers[index];\n    invariant(\n      fetcherResults !== undefined && fetcherResults[index] !== undefined,\n      \"Did not find corresponding fetcher result\"\n    );\n    let result = fetcherResults[index];\n\n    // Process fetcher non-redirect errors\n    if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match.route.id);\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = {\n          ...errors,\n          [boundaryMatch.route.id]: result.error,\n        };\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      // Should never get here, redirects should get processed above, but we\n      // keep this to type narrow to a success result in the else\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else if (isDeferredResult(result)) {\n      // Should never get here, deferred data should be awaited for fetchers\n      // in resolveDeferredResults\n      invariant(false, \"Unhandled fetcher deferred data\");\n    } else {\n      let doneFetcher: FetcherStates[\"Idle\"] = {\n        state: \"idle\",\n        data: result.data,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined,\n        \" _hasFetcherDoneAnything \": true,\n      };\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  return { loaderData, errors };\n}\n\nfunction mergeLoaderData(\n  loaderData: RouteData,\n  newLoaderData: RouteData,\n  matches: AgnosticDataRouteMatch[],\n  errors: RouteData | null | undefined\n): RouteData {\n  let mergedLoaderData = { ...newLoaderData };\n  for (let match of matches) {\n    let id = match.route.id;\n    if (newLoaderData.hasOwnProperty(id)) {\n      if (newLoaderData[id] !== undefined) {\n        mergedLoaderData[id] = newLoaderData[id];\n      } else {\n        // No-op - this is so we ignore existing data if we have a key in the\n        // incoming object with an undefined value, which is how we unset a prior\n        // loaderData if we encounter a loader error\n      }\n    } else if (loaderData[id] !== undefined) {\n      mergedLoaderData[id] = loaderData[id];\n    }\n\n    if (errors && errors.hasOwnProperty(id)) {\n      // Don't keep any loader data below the boundary\n      break;\n    }\n  }\n  return mergedLoaderData;\n}\n\n// Find the nearest error boundary, looking upwards from the leaf route (or the\n// route specified by routeId) for the closest ancestor error boundary,\n// defaulting to the root match\nfunction findNearestBoundary(\n  matches: AgnosticDataRouteMatch[],\n  routeId?: string\n): AgnosticDataRouteMatch {\n  let eligibleMatches = routeId\n    ? matches.slice(0, matches.findIndex((m) => m.route.id === routeId) + 1)\n    : [...matches];\n  return (\n    eligibleMatches.reverse().find((m) => m.route.hasErrorBoundary === true) ||\n    matches[0]\n  );\n}\n\nfunction getShortCircuitMatches(routes: AgnosticDataRouteObject[]): {\n  matches: AgnosticDataRouteMatch[];\n  route: AgnosticDataRouteObject;\n} {\n  // Prefer a root layout route if present, otherwise shim in a route object\n  let route = routes.find((r) => r.index || !r.path || r.path === \"/\") || {\n    id: `__shim-error-route__`,\n  };\n\n  return {\n    matches: [\n      {\n        params: {},\n        pathname: \"\",\n        pathnameBase: \"\",\n        route,\n      },\n    ],\n    route,\n  };\n}\n\nfunction getInternalRouterError(\n  status: number,\n  {\n    pathname,\n    routeId,\n    method,\n    type,\n  }: {\n    pathname?: string;\n    routeId?: string;\n    method?: string;\n    type?: \"defer-action\";\n  } = {}\n) {\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n\n  if (status === 400) {\n    statusText = \"Bad Request\";\n    if (method && pathname && routeId) {\n      errorMessage =\n        `You made a ${method} request to \"${pathname}\" but ` +\n        `did not provide a \\`loader\\` for route \"${routeId}\", ` +\n        `so there is no way to handle the request.`;\n    } else if (type === \"defer-action\") {\n      errorMessage = \"defer() is not supported in actions\";\n    } else {\n      errorMessage = \"Cannot submit binary form data using GET\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = `Route \"${routeId}\" does not match URL \"${pathname}\"`;\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = `No route matches URL \"${pathname}\"`;\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n    if (method && pathname && routeId) {\n      errorMessage =\n        `You made a ${method.toUpperCase()} request to \"${pathname}\" but ` +\n        `did not provide an \\`action\\` for route \"${routeId}\", ` +\n        `so there is no way to handle the request.`;\n    } else if (method) {\n      errorMessage = `Invalid request method \"${method.toUpperCase()}\"`;\n    }\n  }\n\n  return new ErrorResponse(\n    status || 500,\n    statusText,\n    new Error(errorMessage),\n    true\n  );\n}\n\n// Find any returned redirect errors, starting from the lowest match\nfunction findRedirect(results: DataResult[]): RedirectResult | undefined {\n  for (let i = results.length - 1; i >= 0; i--) {\n    let result = results[i];\n    if (isRedirectResult(result)) {\n      return result;\n    }\n  }\n}\n\nfunction stripHashFromPath(path: To) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath({ ...parsedPath, hash: \"\" });\n}\n\nfunction isHashChangeOnly(a: Location, b: Location): boolean {\n  return (\n    a.pathname === b.pathname && a.search === b.search && a.hash !== b.hash\n  );\n}\n\nfunction isDeferredResult(result: DataResult): result is DeferredResult {\n  return result.type === ResultType.deferred;\n}\n\nfunction isErrorResult(result: DataResult): result is ErrorResult {\n  return result.type === ResultType.error;\n}\n\nfunction isRedirectResult(result?: DataResult): result is RedirectResult {\n  return (result && result.type) === ResultType.redirect;\n}\n\nfunction isResponse(value: any): value is Response {\n  return (\n    value != null &&\n    typeof value.status === \"number\" &&\n    typeof value.statusText === \"string\" &&\n    typeof value.headers === \"object\" &&\n    typeof value.body !== \"undefined\"\n  );\n}\n\nfunction isRedirectResponse(result: any): result is Response {\n  if (!isResponse(result)) {\n    return false;\n  }\n\n  let status = result.status;\n  let location = result.headers.get(\"Location\");\n  return status >= 300 && status <= 399 && location != null;\n}\n\nfunction isQueryRouteResponse(obj: any): obj is QueryRouteResponse {\n  return (\n    obj &&\n    isResponse(obj.response) &&\n    (obj.type === ResultType.data || ResultType.error)\n  );\n}\n\nfunction isValidMethod(method: string): method is FormMethod {\n  return validRequestMethods.has(method as FormMethod);\n}\n\nfunction isMutationMethod(method?: string): method is MutationFormMethod {\n  return validMutationMethods.has(method as MutationFormMethod);\n}\n\nasync function resolveDeferredResults(\n  currentMatches: AgnosticDataRouteMatch[],\n  matchesToLoad: AgnosticDataRouteMatch[],\n  results: DataResult[],\n  signal: AbortSignal,\n  isFetcher: boolean,\n  currentLoaderData?: RouteData\n) {\n  for (let index = 0; index < results.length; index++) {\n    let result = results[index];\n    let match = matchesToLoad[index];\n    let currentMatch = currentMatches.find(\n      (m) => m.route.id === match.route.id\n    );\n    let isRevalidatingLoader =\n      currentMatch != null &&\n      !isNewRouteInstance(currentMatch, match) &&\n      (currentLoaderData && currentLoaderData[match.route.id]) !== undefined;\n\n    if (isDeferredResult(result) && (isFetcher || isRevalidatingLoader)) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      await resolveDeferredData(result, signal, isFetcher).then((result) => {\n        if (result) {\n          results[index] = result || results[index];\n        }\n      });\n    }\n  }\n}\n\nasync function resolveDeferredData(\n  result: DeferredResult,\n  signal: AbortSignal,\n  unwrap = false\n): Promise<SuccessResult | ErrorResult | undefined> {\n  let aborted = await result.deferredData.resolveData(signal);\n  if (aborted) {\n    return;\n  }\n\n  if (unwrap) {\n    try {\n      return {\n        type: ResultType.data,\n        data: result.deferredData.unwrappedData,\n      };\n    } catch (e) {\n      // Handle any TrackedPromise._error values encountered while unwrapping\n      return {\n        type: ResultType.error,\n        error: e,\n      };\n    }\n  }\n\n  return {\n    type: ResultType.data,\n    data: result.deferredData.data,\n  };\n}\n\nfunction hasNakedIndexQuery(search: string): boolean {\n  return new URLSearchParams(search).getAll(\"index\").some((v) => v === \"\");\n}\n\n// Note: This should match the format exported by useMatches, so if you change\n// this please also change that :)  Eventually we'll DRY this up\nfunction createUseMatchesMatch(\n  match: AgnosticDataRouteMatch,\n  loaderData: RouteData\n): UseMatchesMatch {\n  let { route, pathname, params } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id] as unknown,\n    handle: route.handle as unknown,\n  };\n}\n\nfunction getTargetMatch(\n  matches: AgnosticDataRouteMatch[],\n  location: Location | string\n) {\n  let search =\n    typeof location === \"string\" ? parsePath(location).search : location.search;\n  if (\n    matches[matches.length - 1].route.index &&\n    hasNakedIndexQuery(search || \"\")\n  ) {\n    // Return the leaf index route when index is present\n    return matches[matches.length - 1];\n  }\n  // Otherwise grab the deepest \"path contributing\" match (ignoring index and\n  // pathless layout routes)\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n}\n//#endregion\n", "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport * as React from \"react\";\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction isPolyfill(x: any, y: any) {\n  return (\n    (x === y && (x !== 0 || 1 / x === 1 / y)) || (x !== x && y !== y) // eslint-disable-line no-self-compare\n  );\n}\n\nconst is: (x: any, y: any) => boolean =\n  typeof Object.is === \"function\" ? Object.is : isPolyfill;\n\n// Intentionally not using named imports because Rollup uses dynamic\n// dispatch for CommonJS interop named imports.\nconst { useState, useEffect, useLayoutEffect, useDebugValue } = React;\n\nlet didWarnOld18Alpha = false;\nlet didWarnUncachedGetSnapshot = false;\n\n// Disclaimer: This shim breaks many of the rules of React, and only works\n// because of a very particular set of implementation details and assumptions\n// -- change any one of them and it will break. The most important assumption\n// is that updates are always synchronous, because concurrent rendering is\n// only available in versions of React that also have a built-in\n// useSyncExternalStore API. And we only use this shim when the built-in API\n// does not exist.\n//\n// Do not assume that the clever hacks used by this hook also work in general.\n// The point of this shim is to replace the need for hacks by other libraries.\nexport function useSyncExternalStore<T>(\n  subscribe: (fn: () => void) => () => void,\n  getSnapshot: () => T,\n  // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n  // React do not expose a way to check if we're hydrating. So users of the shim\n  // will need to track that themselves and return the correct value\n  // from `getSnapshot`.\n  getServerSnapshot?: () => T\n): T {\n  if (__DEV__) {\n    if (!didWarnOld18Alpha) {\n      if (\"startTransition\" in React) {\n        didWarnOld18Alpha = true;\n        console.error(\n          \"You are using an outdated, pre-release alpha of React 18 that \" +\n            \"does not support useSyncExternalStore. The \" +\n            \"use-sync-external-store shim will not work correctly. Upgrade \" +\n            \"to a newer pre-release.\"\n        );\n      }\n    }\n  }\n\n  // Read the current snapshot from the store on every render. Again, this\n  // breaks the rules of React, and only works here because of specific\n  // implementation details, most importantly that updates are\n  // always synchronous.\n  const value = getSnapshot();\n  if (__DEV__) {\n    if (!didWarnUncachedGetSnapshot) {\n      const cachedValue = getSnapshot();\n      if (!is(value, cachedValue)) {\n        console.error(\n          \"The result of getSnapshot should be cached to avoid an infinite loop\"\n        );\n        didWarnUncachedGetSnapshot = true;\n      }\n    }\n  }\n\n  // Because updates are synchronous, we don't queue them. Instead we force a\n  // re-render whenever the subscribed state changes by updating an some\n  // arbitrary useState hook. Then, during render, we call getSnapshot to read\n  // the current value.\n  //\n  // Because we don't actually use the state returned by the useState hook, we\n  // can save a bit of memory by storing other stuff in that slot.\n  //\n  // To implement the early bailout, we need to track some things on a mutable\n  // object. Usually, we would put that in a useRef hook, but we can stash it in\n  // our useState hook instead.\n  //\n  // To force a re-render, we call forceUpdate({inst}). That works because the\n  // new object always fails an equality check.\n  const [{ inst }, forceUpdate] = useState({ inst: { value, getSnapshot } });\n\n  // Track the latest getSnapshot function with a ref. This needs to be updated\n  // in the layout phase so we can access it during the tearing check that\n  // happens on subscribe.\n  useLayoutEffect(() => {\n    inst.value = value;\n    inst.getSnapshot = getSnapshot;\n\n    // Whenever getSnapshot or subscribe changes, we need to check in the\n    // commit phase if there was an interleaved mutation. In concurrent mode\n    // this can happen all the time, but even in synchronous mode, an earlier\n    // effect may have mutated the store.\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({ inst });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [subscribe, value, getSnapshot]);\n\n  useEffect(() => {\n    // Check for changes right before subscribing. Subsequent changes will be\n    // detected in the subscription handler.\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({ inst });\n    }\n    const handleStoreChange = () => {\n      // TODO: Because there is no cross-renderer API for batching updates, it's\n      // up to the consumer of this library to wrap their subscription event\n      // with unstable_batchedUpdates. Should we try to detect when this isn't\n      // the case and print a warning in development?\n\n      // The store changed. Check if the snapshot changed since the last time we\n      // read from the store.\n      if (checkIfSnapshotChanged(inst)) {\n        // Force a re-render.\n        forceUpdate({ inst });\n      }\n    };\n    // Subscribe to the store and return a clean-up function.\n    return subscribe(handleStoreChange);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [subscribe]);\n\n  useDebugValue(value);\n  return value;\n}\n\nfunction checkIfSnapshotChanged(inst: any) {\n  const latestGetSnapshot = inst.getSnapshot;\n  const prevValue = inst.value;\n  try {\n    const nextValue = latestGetSnapshot();\n    return !is(prevValue, nextValue);\n  } catch (error) {\n    return true;\n  }\n}\n", "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport function useSyncExternalStore<T>(\n  subscribe: (fn: () => void) => () => void,\n  getSnapshot: () => T,\n  getServerSnapshot?: () => T\n): T {\n  // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n  // React do not expose a way to check if we're hydrating. So users of the shim\n  // will need to track that themselves and return the correct value\n  // from `getSnapshot`.\n  return getSnapshot();\n}\n", "/**\n * Inlined into the react-router repo since use-sync-external-store does not\n * provide a UMD-compatible package, so we need this to be able to distribute\n * UMD react-router bundles\n */\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport * as React from \"react\";\n\nimport { useSyncExternalStore as client } from \"./useSyncExternalStoreShimClient\";\nimport { useSyncExternalStore as server } from \"./useSyncExternalStoreShimServer\";\n\nconst canUseDOM: boolean = !!(\n  typeof window !== \"undefined\" &&\n  typeof window.document !== \"undefined\" &&\n  typeof window.document.createElement !== \"undefined\"\n);\nconst isServerEnvironment = !canUseDOM;\nconst shim = isServerEnvironment ? server : client;\n\nexport const useSyncExternalStore =\n  \"useSyncExternalStore\" in React\n    ? ((module) => module.useSyncExternalStore)(React)\n    : shim;\n", "import * as React from \"react\";\nimport type {\n  AgnosticRouteMatch,\n  AgnosticIndexRouteObject,\n  AgnosticNonIndexRouteObject,\n  History,\n  Location,\n  Router,\n  StaticHandlerContext,\n  To,\n  TrackedPromise,\n} from \"@remix-run/router\";\nimport type { Action as NavigationType } from \"@remix-run/router\";\n\n// Create react-specific types from the agnostic types in @remix-run/router to\n// export from react-router\nexport interface IndexRouteObject {\n  caseSensitive?: AgnosticIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticIndexRouteObject[\"path\"];\n  id?: AgnosticIndexRouteObject[\"id\"];\n  loader?: AgnosticIndexRouteObject[\"loader\"];\n  action?: AgnosticIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticIndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n}\n\nexport interface NonIndexRouteObject {\n  caseSensitive?: AgnosticNonIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticNonIndexRouteObject[\"path\"];\n  id?: AgnosticNonIndexRouteObject[\"id\"];\n  loader?: AgnosticNonIndexRouteObject[\"loader\"];\n  action?: AgnosticNonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticNonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticNonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticNonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: RouteObject[];\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n}\n\nexport type RouteObject = IndexRouteObject | NonIndexRouteObject;\n\nexport type DataRouteObject = RouteObject & {\n  children?: DataRouteObject[];\n  id: string;\n};\n\nexport interface RouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends RouteObject = RouteObject\n> extends AgnosticRouteMatch<ParamKey, RouteObjectType> {}\n\nexport interface DataRouteMatch extends RouteMatch<string, DataRouteObject> {}\n\nexport interface DataRouterContextObject extends NavigationContextObject {\n  router: Router;\n  staticContext?: StaticHandlerContext;\n}\n\nexport const DataRouterContext =\n  React.createContext<DataRouterContextObject | null>(null);\nif (__DEV__) {\n  DataRouterContext.displayName = \"DataRouter\";\n}\n\nexport const DataRouterStateContext = React.createContext<\n  Router[\"state\"] | null\n>(null);\nif (__DEV__) {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\n\nexport const AwaitContext = React.createContext<TrackedPromise | null>(null);\nif (__DEV__) {\n  AwaitContext.displayName = \"Await\";\n}\n\nexport type RelativeRoutingType = \"route\" | \"path\";\n\nexport interface NavigateOptions {\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n}\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level <Router> API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\nexport interface Navigator {\n  createHref: History[\"createHref\"];\n  // Optional for backwards-compat with Router/HistoryRouter usage (edge case)\n  encodeLocation?: History[\"encodeLocation\"];\n  go: History[\"go\"];\n  push(to: To, state?: any, opts?: NavigateOptions): void;\n  replace(to: To, state?: any, opts?: NavigateOptions): void;\n}\n\ninterface NavigationContextObject {\n  basename: string;\n  navigator: Navigator;\n  static: boolean;\n}\n\nexport const NavigationContext = React.createContext<NavigationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  NavigationContext.displayName = \"Navigation\";\n}\n\ninterface LocationContextObject {\n  location: Location;\n  navigationType: NavigationType;\n}\n\nexport const LocationContext = React.createContext<LocationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  LocationContext.displayName = \"Location\";\n}\n\nexport interface RouteContextObject {\n  outlet: React.ReactElement | null;\n  matches: RouteMatch[];\n}\n\nexport const RouteContext = React.createContext<RouteContextObject>({\n  outlet: null,\n  matches: [],\n});\n\nif (__DEV__) {\n  RouteContext.displayName = \"Route\";\n}\n\nexport const RouteErrorContext = React.createContext<any>(null);\n\nif (__DEV__) {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n", "import * as React from \"react\";\nimport type {\n  Blocker,\n  BlockerFunction,\n  Location,\n  ParamParseKey,\n  Params,\n  Path,\n  PathMatch,\n  PathPattern,\n  Router as RemixRouter,\n  To,\n} from \"@remix-run/router\";\nimport {\n  Action as NavigationType,\n  invariant,\n  isRouteErrorResponse,\n  joinPaths,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  resolveTo,\n  warning,\n  UNSAFE_getPathContributingMatches as getPathContributingMatches,\n} from \"@remix-run/router\";\n\nimport type {\n  NavigateOptions,\n  RouteContextObject,\n  RouteMatch,\n  RouteObject,\n  DataRouteMatch,\n  RelativeRoutingType,\n} from \"./context\";\nimport {\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n  RouteErrorContext,\n  AwaitContext,\n} from \"./context\";\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/hooks/use-href\n */\nexport function useHref(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useHref() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { hash, pathname, search } = useResolvedPath(to, { relative });\n\n  let joinedPathname = pathname;\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n  if (basename !== \"/\") {\n    joinedPathname =\n      pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n\n  return navigator.createHref({ pathname: joinedPathname, search, hash });\n}\n\n/**\n * Returns true if this component is a descendant of a <Router>.\n *\n * @see https://reactrouter.com/hooks/use-in-router-context\n */\nexport function useInRouterContext(): boolean {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/hooks/use-location\n */\nexport function useLocation(): Location {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useLocation() may be used only in the context of a <Router> component.`\n  );\n\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/hooks/use-navigation-type\n */\nexport function useNavigationType(): NavigationType {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * <NavLink>.\n *\n * @see https://reactrouter.com/hooks/use-match\n */\nexport function useMatch<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(pattern: PathPattern<Path> | Path): PathMatch<ParamKey> | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useMatch() may be used only in the context of a <Router> component.`\n  );\n\n  let { pathname } = useLocation();\n  return React.useMemo(\n    () => matchPath<ParamKey, Path>(pattern, pathname),\n    [pathname, pattern]\n  );\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\nexport interface NavigateFunction {\n  (to: To, options?: NavigateOptions): void;\n  (delta: number): void;\n}\n\n/**\n * Returns an imperative method for changing the location. Used by <Link>s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/hooks/use-navigate\n */\nexport function useNavigate(): NavigateFunction {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useNavigate() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    getPathContributingMatches(matches).map((match) => match.pathnameBase)\n  );\n\n  let activeRef = React.useRef(false);\n  React.useEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(\n        activeRef.current,\n        `You should call navigate() in a React.useEffect(), not when ` +\n          `your component is first rendered.`\n      );\n\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        navigator.go(to);\n        return;\n      }\n\n      let path = resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        options.relative === \"path\"\n      );\n\n      // If we're operating within a basename, prepend it to the pathname prior\n      // to handing off to history.  If this is a root navigation, then we\n      // navigate to the raw basename which allows the basename to have full\n      // control over the presence of a trailing slash on root links\n      if (basename !== \"/\") {\n        path.pathname =\n          path.pathname === \"/\"\n            ? basename\n            : joinPaths([basename, path.pathname]);\n      }\n\n      (!!options.replace ? navigator.replace : navigator.push)(\n        path,\n        options.state,\n        options\n      );\n    },\n    [basename, navigator, routePathnamesJson, locationPathname]\n  );\n\n  return navigate;\n}\n\nconst OutletContext = React.createContext<unknown>(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/hooks/use-outlet-context\n */\nexport function useOutletContext<Context = unknown>(): Context {\n  return React.useContext(OutletContext) as Context;\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by <Outlet> to render child routes.\n *\n * @see https://reactrouter.com/hooks/use-outlet\n */\nexport function useOutlet(context?: unknown): React.ReactElement | null {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return (\n      <OutletContext.Provider value={context}>{outlet}</OutletContext.Provider>\n    );\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/hooks/use-params\n */\nexport function useParams<\n  ParamsOrKey extends string | Record<string, string | undefined> = string\n>(): Readonly<\n  [ParamsOrKey] extends [string] ? Params<ParamsOrKey> : Partial<ParamsOrKey>\n> {\n  let { matches } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? (routeMatch.params as any) : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/hooks/use-resolved-path\n */\nexport function useResolvedPath(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): Path {\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    getPathContributingMatches(matches).map((match) => match.pathnameBase)\n  );\n\n  return React.useMemo(\n    () =>\n      resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        relative === \"path\"\n      ),\n    [to, routePathnamesJson, locationPathname, relative]\n  );\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an <Outlet> to render their child route's\n * element.\n *\n * @see https://reactrouter.com/hooks/use-routes\n */\nexport function useRoutes(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string\n): React.ReactElement | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useRoutes() may be used only in the context of a <Router> component.`\n  );\n\n  let { navigator } = React.useContext(NavigationContext);\n  let dataRouterStateContext = React.useContext(DataRouterStateContext);\n  let { matches: parentMatches } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n\n  if (__DEV__) {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = (parentRoute && parentRoute.path) || \"\";\n    warningOnce(\n      parentPathname,\n      !parentRoute || parentPath.endsWith(\"*\"),\n      `You rendered descendant <Routes> (or called \\`useRoutes()\\`) at ` +\n        `\"${parentPathname}\" (under <Route path=\"${parentPath}\">) but the ` +\n        `parent route path has no trailing \"*\". This means if you navigate ` +\n        `deeper, the parent won't match anymore and therefore the child ` +\n        `routes will never render.\\n\\n` +\n        `Please change the parent <Route path=\"${parentPath}\"> to <Route ` +\n        `path=\"${parentPath === \"/\" ? \"*\" : `${parentPath}/*`}\">.`\n    );\n  }\n\n  let locationFromContext = useLocation();\n\n  let location;\n  if (locationArg) {\n    let parsedLocationArg =\n      typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n    invariant(\n      parentPathnameBase === \"/\" ||\n        parsedLocationArg.pathname?.startsWith(parentPathnameBase),\n      `When overriding the location using \\`<Routes location>\\` or \\`useRoutes(routes, location)\\`, ` +\n        `the location pathname must begin with the portion of the URL pathname that was ` +\n        `matched by all parent routes. The current pathname base is \"${parentPathnameBase}\" ` +\n        `but pathname \"${parsedLocationArg.pathname}\" was given in the \\`location\\` prop.`\n    );\n\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n\n  let pathname = location.pathname || \"/\";\n  let remainingPathname =\n    parentPathnameBase === \"/\"\n      ? pathname\n      : pathname.slice(parentPathnameBase.length) || \"/\";\n\n  let matches = matchRoutes(routes, { pathname: remainingPathname });\n\n  if (__DEV__) {\n    warning(\n      parentRoute || matches != null,\n      `No routes matched location \"${location.pathname}${location.search}${location.hash}\" `\n    );\n\n    warning(\n      matches == null ||\n        matches[matches.length - 1].route.element !== undefined,\n      `Matched leaf route at location \"${location.pathname}${location.search}${location.hash}\" does not have an element. ` +\n        `This means it will render an <Outlet /> with a null value by default resulting in an \"empty\" page.`\n    );\n  }\n\n  let renderedMatches = _renderMatches(\n    matches &&\n      matches.map((match) =>\n        Object.assign({}, match, {\n          params: Object.assign({}, parentParams, match.params),\n          pathname: joinPaths([\n            parentPathnameBase,\n            // Re-encode pathnames that were decoded inside matchRoutes\n            navigator.encodeLocation\n              ? navigator.encodeLocation(match.pathname).pathname\n              : match.pathname,\n          ]),\n          pathnameBase:\n            match.pathnameBase === \"/\"\n              ? parentPathnameBase\n              : joinPaths([\n                  parentPathnameBase,\n                  // Re-encode pathnames that were decoded inside matchRoutes\n                  navigator.encodeLocation\n                    ? navigator.encodeLocation(match.pathnameBase).pathname\n                    : match.pathnameBase,\n                ]),\n        })\n      ),\n    parentMatches,\n    dataRouterStateContext || undefined\n  );\n\n  // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n  if (locationArg && renderedMatches) {\n    return (\n      <LocationContext.Provider\n        value={{\n          location: {\n            pathname: \"/\",\n            search: \"\",\n            hash: \"\",\n            state: null,\n            key: \"default\",\n            ...location,\n          },\n          navigationType: NavigationType.Pop,\n        }}\n      >\n        {renderedMatches}\n      </LocationContext.Provider>\n    );\n  }\n\n  return renderedMatches;\n}\n\nfunction DefaultErrorElement() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error)\n    ? `${error.status} ${error.statusText}`\n    : error instanceof Error\n    ? error.message\n    : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = { padding: \"0.5rem\", backgroundColor: lightgrey };\n  let codeStyles = { padding: \"2px 4px\", backgroundColor: lightgrey };\n  return (\n    <>\n      <h2>Unhandled Thrown Error!</h2>\n      <h3 style={{ fontStyle: \"italic\" }}>{message}</h3>\n      {stack ? <pre style={preStyles}>{stack}</pre> : null}\n      <p>💿 Hey developer 👋</p>\n      <p>\n        You can provide a way better UX than this when your app throws errors by\n        providing your own&nbsp;\n        <code style={codeStyles}>errorElement</code> props on&nbsp;\n        <code style={codeStyles}>&lt;Route&gt;</code>\n      </p>\n    </>\n  );\n}\n\ntype RenderErrorBoundaryProps = React.PropsWithChildren<{\n  location: Location;\n  error: any;\n  component: React.ReactNode;\n  routeContext: RouteContextObject;\n}>;\n\ntype RenderErrorBoundaryState = {\n  location: Location;\n  error: any;\n};\n\nexport class RenderErrorBoundary extends React.Component<\n  RenderErrorBoundaryProps,\n  RenderErrorBoundaryState\n> {\n  constructor(props: RenderErrorBoundaryProps) {\n    super(props);\n    this.state = {\n      location: props.location,\n      error: props.error,\n    };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error: error };\n  }\n\n  static getDerivedStateFromProps(\n    props: RenderErrorBoundaryProps,\n    state: RenderErrorBoundaryState\n  ) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (state.location !== props.location) {\n      return {\n        error: props.error,\n        location: props.location,\n      };\n    }\n\n    // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n    return {\n      error: props.error || state.error,\n      location: state.location,\n    };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"React Router caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    return this.state.error ? (\n      <RouteContext.Provider value={this.props.routeContext}>\n        <RouteErrorContext.Provider\n          value={this.state.error}\n          children={this.props.component}\n        />\n      </RouteContext.Provider>\n    ) : (\n      this.props.children\n    );\n  }\n}\n\ninterface RenderedRouteProps {\n  routeContext: RouteContextObject;\n  match: RouteMatch<string, RouteObject>;\n  children: React.ReactNode | null;\n}\n\nfunction RenderedRoute({ routeContext, match, children }: RenderedRouteProps) {\n  let dataRouterContext = React.useContext(DataRouterContext);\n\n  // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n  if (\n    dataRouterContext &&\n    dataRouterContext.static &&\n    dataRouterContext.staticContext &&\n    match.route.errorElement\n  ) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n\n  return (\n    <RouteContext.Provider value={routeContext}>\n      {children}\n    </RouteContext.Provider>\n  );\n}\n\nexport function _renderMatches(\n  matches: RouteMatch[] | null,\n  parentMatches: RouteMatch[] = [],\n  dataRouterState?: RemixRouter[\"state\"]\n): React.ReactElement | null {\n  if (matches == null) {\n    if (dataRouterState?.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches as DataRouteMatch[];\n    } else {\n      return null;\n    }\n  }\n\n  let renderedMatches = matches;\n\n  // If we have data errors, trim matches to the highest error boundary\n  let errors = dataRouterState?.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(\n      (m) => m.route.id && errors?.[m.route.id]\n    );\n    invariant(\n      errorIndex >= 0,\n      `Could not find a matching route for the current errors: ${errors}`\n    );\n    renderedMatches = renderedMatches.slice(\n      0,\n      Math.min(renderedMatches.length, errorIndex + 1)\n    );\n  }\n\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    let error = match.route.id ? errors?.[match.route.id] : null;\n    // Only data routers handle errors\n    let errorElement = dataRouterState\n      ? match.route.errorElement || <DefaultErrorElement />\n      : null;\n    let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    let getChildren = () => (\n      <RenderedRoute match={match} routeContext={{ outlet, matches }}>\n        {error\n          ? errorElement\n          : match.route.element !== undefined\n          ? match.route.element\n          : outlet}\n      </RenderedRoute>\n    );\n    // Only wrap in an error boundary within data router usages when we have an\n    // errorElement on this route.  Otherwise let it bubble up to an ancestor\n    // errorElement\n    return dataRouterState && (match.route.errorElement || index === 0) ? (\n      <RenderErrorBoundary\n        location={dataRouterState.location}\n        component={errorElement}\n        error={error}\n        children={getChildren()}\n        routeContext={{ outlet: null, matches }}\n      />\n    ) : (\n      getChildren()\n    );\n  }, null as React.ReactElement | null);\n}\n\nenum DataRouterHook {\n  UseBlocker = \"useBlocker\",\n  UseRevalidator = \"useRevalidator\",\n}\n\nenum DataRouterStateHook {\n  UseLoaderData = \"useLoaderData\",\n  UseActionData = \"useActionData\",\n  UseRouteError = \"useRouteError\",\n  UseNavigation = \"useNavigation\",\n  UseRouteLoaderData = \"useRouteLoaderData\",\n  UseMatches = \"useMatches\",\n  UseRevalidator = \"useRevalidator\",\n}\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\nfunction useRouteContext(hookName: DataRouterStateHook) {\n  let route = React.useContext(RouteContext);\n  invariant(route, getDataRouterConsoleError(hookName));\n  return route;\n}\n\nfunction useCurrentRouteId(hookName: DataRouterStateHook) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  invariant(\n    thisRoute.route.id,\n    `${hookName} can only be used on routes that contain a unique \"id\"`\n  );\n  return thisRoute.route.id;\n}\n\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\nexport function useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\nexport function useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return {\n    revalidate: dataRouterContext.router.revalidate,\n    state: state.revalidation,\n  };\n}\n\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\nexport function useMatches() {\n  let { matches, loaderData } = useDataRouterState(\n    DataRouterStateHook.UseMatches\n  );\n  return React.useMemo(\n    () =>\n      matches.map((match) => {\n        let { pathname, params } = match;\n        // Note: This structure matches that created by createUseMatchesMatch\n        // in the @remix-run/router , so if you change this please also change\n        // that :)  Eventually we'll DRY this up\n        return {\n          id: match.route.id,\n          pathname,\n          params,\n          data: loaderData[match.route.id] as unknown,\n          handle: match.route.handle as unknown,\n        };\n      }),\n    [matches, loaderData]\n  );\n}\n\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\nexport function useLoaderData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n\n  if (state.errors && state.errors[routeId] != null) {\n    console.error(\n      `You cannot \\`useLoaderData\\` in an errorElement (routeId: ${routeId})`\n    );\n    return undefined;\n  }\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the loaderData for the given routeId\n */\nexport function useRouteLoaderData(routeId: string): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the action data for the nearest ancestor Route action\n */\nexport function useActionData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n\n  let route = React.useContext(RouteContext);\n  invariant(route, `useActionData must be used inside a RouteContext`);\n\n  return Object.values(state?.actionData || {})[0];\n}\n\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * errorElement to display a proper error message.\n */\nexport function useRouteError(): unknown {\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError);\n\n  // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n  if (error) {\n    return error;\n  }\n\n  // Otherwise look for errors from our data router state\n  return state.errors?.[routeId];\n}\n\n/**\n * Returns the happy-path data from the nearest ancestor <Await /> value\n */\nexport function useAsyncValue(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._data;\n}\n\n/**\n * Returns the error from the nearest ancestor <Await /> value\n */\nexport function useAsyncError(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._error;\n}\n\n// useBlocker() is a singleton for now since we don't have any compelling use\n// cases for multi-blocker yet\nlet blockerKey = \"blocker-singleton\";\n\n/**\n * Allow the application to block navigations within the SPA and present the\n * user a confirmation dialog to confirm the navigation.  Mostly used to avoid\n * using half-filled form data.  This does not handle hard-reloads or\n * cross-origin navigations.\n */\nexport function useBlocker(shouldBlock: boolean | BlockerFunction): Blocker {\n  let { router } = useDataRouterContext(DataRouterHook.UseBlocker);\n\n  let blockerFunction = React.useCallback<BlockerFunction>(\n    (args) => {\n      return typeof shouldBlock === \"function\"\n        ? !!shouldBlock(args)\n        : !!shouldBlock;\n    },\n    [shouldBlock]\n  );\n\n  let blocker = router.getBlocker(blockerKey, blockerFunction);\n\n  // Cleanup on unmount\n  React.useEffect(() => () => router.deleteBlocker(blockerKey), [router]);\n\n  return blocker;\n}\n\nconst alreadyWarned: Record<string, boolean> = {};\n\nfunction warningOnce(key: string, cond: boolean, message: string) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    warning(false, message);\n  }\n}\n", "import * as React from \"react\";\nimport type {\n  TrackedPromise,\n  InitialEntry,\n  Location,\n  MemoryHistory,\n  Router as RemixRouter,\n  RouterState,\n  To,\n} from \"@remix-run/router\";\nimport {\n  Action as NavigationType,\n  AbortedDeferredError,\n  createMemoryHistory,\n  invariant,\n  parsePath,\n  stripBasename,\n  warning,\n} from \"@remix-run/router\";\nimport { useSyncExternalStore as useSyncExternalStoreShim } from \"./use-sync-external-store-shim\";\n\nimport type {\n  DataRouteObject,\n  IndexRouteObject,\n  RouteMatch,\n  RouteObject,\n  Navigator,\n  NonIndexRouteObject,\n  RelativeRoutingType,\n} from \"./context\";\nimport {\n  LocationContext,\n  NavigationContext,\n  DataRouterContext,\n  DataRouterStateContext,\n  AwaitContext,\n} from \"./context\";\nimport {\n  useAsyncValue,\n  useInRouterContext,\n  useNavigate,\n  useOutlet,\n  useRoutes,\n  _renderMatches,\n} from \"./hooks\";\n\nexport interface RouterProviderProps {\n  fallbackElement?: React.ReactNode;\n  router: RemixRouter;\n}\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nexport function RouterProvider({\n  fallbackElement,\n  router,\n}: RouterProviderProps): React.ReactElement {\n  // Sync router state to our component state to force re-renders\n  let state: RouterState = useSyncExternalStoreShim(\n    router.subscribe,\n    () => router.state,\n    // We have to provide this so React@18 doesn't complain during hydration,\n    // but we pass our serialized hydration data into the router so state here\n    // is already synced with what the server saw\n    () => router.state\n  );\n\n  let navigator = React.useMemo((): Navigator => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: (n) => router.navigate(n),\n      push: (to, state, opts) =>\n        router.navigate(to, {\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n      replace: (to, state, opts) =>\n        router.navigate(to, {\n          replace: true,\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n    };\n  }, [router]);\n\n  let basename = router.basename || \"/\";\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return (\n    <>\n      <DataRouterContext.Provider\n        value={{\n          router,\n          navigator,\n          static: false,\n          // Do we need this?\n          basename,\n        }}\n      >\n        <DataRouterStateContext.Provider value={state}>\n          <Router\n            basename={router.basename}\n            location={router.state.location}\n            navigationType={router.state.historyAction}\n            navigator={navigator}\n          >\n            {router.state.initialized ? <Routes /> : fallbackElement}\n          </Router>\n        </DataRouterStateContext.Provider>\n      </DataRouterContext.Provider>\n      {null}\n    </>\n  );\n}\n\nexport interface MemoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n}\n\n/**\n * A <Router> that stores all entries in memory.\n *\n * @see https://reactrouter.com/router-components/memory-router\n */\nexport function MemoryRouter({\n  basename,\n  children,\n  initialEntries,\n  initialIndex,\n}: MemoryRouterProps): React.ReactElement {\n  let historyRef = React.useRef<MemoryHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true,\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface NavigateProps {\n  to: To;\n  replace?: boolean;\n  state?: any;\n  relative?: RelativeRoutingType;\n}\n\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/components/navigate\n */\nexport function Navigate({\n  to,\n  replace,\n  state,\n  relative,\n}: NavigateProps): null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of\n    // the router loaded. We can help them understand how to avoid that.\n    `<Navigate> may be used only in the context of a <Router> component.`\n  );\n\n  warning(\n    !React.useContext(NavigationContext).static,\n    `<Navigate> must not be used on the initial render in a <StaticRouter>. ` +\n      `This is a no-op, but you should modify your code so the <Navigate> is ` +\n      `only ever rendered in response to some user interaction or state change.`\n  );\n\n  let dataRouterState = React.useContext(DataRouterStateContext);\n  let navigate = useNavigate();\n\n  React.useEffect(() => {\n    // Avoid kicking off multiple navigations if we're in the middle of a\n    // data-router navigation, since components get re-rendered when we enter\n    // a submitting/loading state\n    if (dataRouterState && dataRouterState.navigation.state !== \"idle\") {\n      return;\n    }\n    navigate(to, { replace, state, relative });\n  });\n\n  return null;\n}\n\nexport interface OutletProps {\n  context?: unknown;\n}\n\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/components/outlet\n */\nexport function Outlet(props: OutletProps): React.ReactElement | null {\n  return useOutlet(props.context);\n}\n\nexport interface PathRouteProps {\n  caseSensitive?: NonIndexRouteObject[\"caseSensitive\"];\n  path?: NonIndexRouteObject[\"path\"];\n  id?: NonIndexRouteObject[\"id\"];\n  loader?: NonIndexRouteObject[\"loader\"];\n  action?: NonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: NonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: NonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: NonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: React.ReactNode;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n}\n\nexport interface LayoutRouteProps extends PathRouteProps {}\n\nexport interface IndexRouteProps {\n  caseSensitive?: IndexRouteObject[\"caseSensitive\"];\n  path?: IndexRouteObject[\"path\"];\n  id?: IndexRouteObject[\"id\"];\n  loader?: IndexRouteObject[\"loader\"];\n  action?: IndexRouteObject[\"action\"];\n  hasErrorBoundary?: IndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: IndexRouteObject[\"shouldRevalidate\"];\n  handle?: IndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n}\n\nexport type RouteProps = PathRouteProps | LayoutRouteProps | IndexRouteProps;\n\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/components/route\n */\nexport function Route(_props: RouteProps): React.ReactElement | null {\n  invariant(\n    false,\n    `A <Route> is only ever to be used as the child of <Routes> element, ` +\n      `never rendered directly. Please wrap your <Route> in a <Routes>.`\n  );\n}\n\nexport interface RouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  location: Partial<Location> | string;\n  navigationType?: NavigationType;\n  navigator: Navigator;\n  static?: boolean;\n}\n\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a <Router> directly. Instead, you'll render a\n * router that is more specific to your environment such as a <BrowserRouter>\n * in web browsers or a <StaticRouter> for server rendering.\n *\n * @see https://reactrouter.com/router-components/router\n */\nexport function Router({\n  basename: basenameProp = \"/\",\n  children = null,\n  location: locationProp,\n  navigationType = NavigationType.Pop,\n  navigator,\n  static: staticProp = false,\n}: RouterProps): React.ReactElement | null {\n  invariant(\n    !useInRouterContext(),\n    `You cannot render a <Router> inside another <Router>.` +\n      ` You should never have more than one in your app.`\n  );\n\n  // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(\n    () => ({ basename, navigator, static: staticProp }),\n    [basename, navigator, staticProp]\n  );\n\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\",\n  } = locationProp;\n\n  let location = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n\n    if (trailingPathname == null) {\n      return null;\n    }\n\n    return {\n      pathname: trailingPathname,\n      search,\n      hash,\n      state,\n      key,\n    };\n  }, [basename, pathname, search, hash, state, key]);\n\n  warning(\n    location != null,\n    `<Router basename=\"${basename}\"> is not able to match the URL ` +\n      `\"${pathname}${search}${hash}\" because it does not start with the ` +\n      `basename, so the <Router> won't render anything.`\n  );\n\n  if (location == null) {\n    return null;\n  }\n\n  return (\n    <NavigationContext.Provider value={navigationContext}>\n      <LocationContext.Provider\n        children={children}\n        value={{ location, navigationType }}\n      />\n    </NavigationContext.Provider>\n  );\n}\n\nexport interface RoutesProps {\n  children?: React.ReactNode;\n  location?: Partial<Location> | string;\n}\n\n/**\n * A container for a nested tree of <Route> elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/components/routes\n */\nexport function Routes({\n  children,\n  location,\n}: RoutesProps): React.ReactElement | null {\n  let dataRouterContext = React.useContext(DataRouterContext);\n  // When in a DataRouterContext _without_ children, we use the router routes\n  // directly.  If we have children, then we're in a descendant tree and we\n  // need to use child routes.\n  let routes =\n    dataRouterContext && !children\n      ? (dataRouterContext.router.routes as DataRouteObject[])\n      : createRoutesFromChildren(children);\n  return useRoutes(routes, location);\n}\n\nexport interface AwaitResolveRenderFunction {\n  (data: Awaited<any>): React.ReactNode;\n}\n\nexport interface AwaitProps {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}\n\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nexport function Await({ children, errorElement, resolve }: AwaitProps) {\n  return (\n    <AwaitErrorBoundary resolve={resolve} errorElement={errorElement}>\n      <ResolveAwait>{children}</ResolveAwait>\n    </AwaitErrorBoundary>\n  );\n}\n\ntype AwaitErrorBoundaryProps = React.PropsWithChildren<{\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}>;\n\ntype AwaitErrorBoundaryState = {\n  error: any;\n};\n\nenum AwaitRenderStatus {\n  pending,\n  success,\n  error,\n}\n\nconst neverSettledPromise = new Promise(() => {});\n\nclass AwaitErrorBoundary extends React.Component<\n  AwaitErrorBoundaryProps,\n  AwaitErrorBoundaryState\n> {\n  constructor(props: AwaitErrorBoundaryProps) {\n    super(props);\n    this.state = { error: null };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"<Await> caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    let { children, errorElement, resolve } = this.props;\n\n    let promise: TrackedPromise | null = null;\n    let status: AwaitRenderStatus = AwaitRenderStatus.pending;\n\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_data\", { get: () => resolve });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_error\", { get: () => renderError });\n    } else if ((resolve as TrackedPromise)._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status =\n        promise._error !== undefined\n          ? AwaitRenderStatus.error\n          : promise._data !== undefined\n          ? AwaitRenderStatus.success\n          : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", { get: () => true });\n      promise = resolve.then(\n        (data: any) =>\n          Object.defineProperty(resolve, \"_data\", { get: () => data }),\n        (error: any) =>\n          Object.defineProperty(resolve, \"_error\", { get: () => error })\n      );\n    }\n\n    if (\n      status === AwaitRenderStatus.error &&\n      promise._error instanceof AbortedDeferredError\n    ) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return <AwaitContext.Provider value={promise} children={errorElement} />;\n    }\n\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return <AwaitContext.Provider value={promise} children={children} />;\n    }\n\n    // Throw to the suspense boundary\n    throw promise;\n  }\n}\n\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on <Await>\n */\nfunction ResolveAwait({\n  children,\n}: {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n}) {\n  let data = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data) : children;\n  return <>{toRender}</>;\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/utils/create-routes-from-children\n */\nexport function createRoutesFromChildren(\n  children: React.ReactNode,\n  parentPath: number[] = []\n): RouteObject[] {\n  let routes: RouteObject[] = [];\n\n  React.Children.forEach(children, (element, index) => {\n    if (!React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(\n        routes,\n        createRoutesFromChildren(element.props.children, parentPath)\n      );\n      return;\n    }\n\n    invariant(\n      element.type === Route,\n      `[${\n        typeof element.type === \"string\" ? element.type : element.type.name\n      }] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`\n    );\n\n    invariant(\n      !element.props.index || !element.props.children,\n      \"An index route cannot have child routes.\"\n    );\n\n    let treePath = [...parentPath, index];\n    let route: RouteObject = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      hasErrorBoundary: element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n    };\n\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(\n        element.props.children,\n        treePath\n      );\n    }\n\n    routes.push(route);\n  });\n\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nexport function renderMatches(\n  matches: RouteMatch[] | null\n): React.ReactElement | null {\n  return _renderMatches(matches);\n}\n\n/**\n * @private\n * Walk the route tree and add hasErrorBoundary if it's not provided, so that\n * users providing manual route arrays can just specify errorElement\n */\nexport function enhanceManualRouteObjects(\n  routes: RouteObject[]\n): RouteObject[] {\n  return routes.map((route) => {\n    let routeClone = { ...route };\n    if (routeClone.hasErrorBoundary == null) {\n      routeClone.hasErrorBoundary = routeClone.errorElement != null;\n    }\n    if (routeClone.children) {\n      routeClone.children = enhanceManualRouteObjects(routeClone.children);\n    }\n    return routeClone;\n  });\n}\n", "import type {\n  ActionFunction,\n  ActionFunctionArgs,\n  Blocker,\n  BlockerFunction,\n  Fetcher,\n  HydrationState,\n  JsonFunction,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  Navigation,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  PathPattern,\n  RedirectFunction,\n  Router as RemixRouter,\n  ShouldRevalidateFunction,\n  To,\n  InitialEntry,\n} from \"@remix-run/router\";\nimport {\n  AbortedDeferredError,\n  Action as NavigationType,\n  createMemoryHistory,\n  createPath,\n  createRouter,\n  defer,\n  generatePath,\n  isRouteErrorResponse,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  resolvePath,\n} from \"@remix-run/router\";\n\nimport type {\n  AwaitProps,\n  MemoryRouterProps,\n  NavigateProps,\n  OutletProps,\n  RouteProps,\n  PathRouteProps,\n  LayoutRouteProps,\n  IndexRouteProps,\n  RouterProps,\n  RoutesProps,\n  RouterProviderProps,\n} from \"./lib/components\";\nimport {\n  enhanceManualRouteObjects,\n  createRoutesFromChildren,\n  renderMatches,\n  Await,\n  MemoryRouter,\n  Navigate,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n} from \"./lib/components\";\nimport type {\n  DataRouteMatch,\n  DataRouteObject,\n  IndexRouteObject,\n  Navigator,\n  NavigateOptions,\n  NonIndexRouteObject,\n  RouteMatch,\n  RouteObject,\n  RelativeRoutingType,\n} from \"./lib/context\";\nimport {\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n} from \"./lib/context\";\nimport type { NavigateFunction } from \"./lib/hooks\";\nimport {\n  useBlocker,\n  useHref,\n  useInRouterContext,\n  useLocation,\n  useMatch,\n  useNavigationType,\n  useNavigate,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRoutes,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useLoaderData,\n  useMatches,\n  useNavigation,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n} from \"./lib/hooks\";\n\n// Exported for backwards compatibility, but not being used internally anymore\ntype Hash = string;\ntype Pathname = string;\ntype Search = string;\n\n// Expose react-router public API\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  Blocker as unstable_Blocker,\n  BlockerFunction as unstable_BlockerFunction,\n  DataRouteMatch,\n  DataRouteObject,\n  Fetcher,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  Pathname,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  To,\n};\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromChildren as createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useBlocker as unstable_useBlocker,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n};\n\nexport function createMemoryRouter(\n  routes: RouteObject[],\n  opts?: {\n    basename?: string;\n    hydrationData?: HydrationState;\n    initialEntries?: InitialEntry[];\n    initialIndex?: number;\n  }\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    history: createMemoryHistory({\n      initialEntries: opts?.initialEntries,\n      initialIndex: opts?.initialIndex,\n    }),\n    hydrationData: opts?.hydrationData,\n    routes: enhanceManualRouteObjects(routes),\n  }).initialize();\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  NavigationContext as UNSAFE_NavigationContext,\n  LocationContext as UNSAFE_LocationContext,\n  RouteContext as UNSAFE_RouteContext,\n  DataRouterContext as UNSAFE_DataRouterContext,\n  DataRouterStateContext as UNSAFE_DataRouterStateContext,\n  enhanceManualRouteObjects as UNSAFE_enhanceManualRouteObjects,\n};\n", "import type { FormEncType, FormMethod } from \"@remix-run/router\";\nimport type { RelativeRoutingType } from \"react-router\";\n\nexport const defaultMethod = \"get\";\nconst defaultEncType = \"application/x-www-form-urlencoded\";\n\nexport function isHtmlElement(object: any): object is HTMLElement {\n  return object != null && typeof object.tagName === \"string\";\n}\n\nexport function isButtonElement(object: any): object is HTMLButtonElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\n\nexport function isFormElement(object: any): object is HTMLFormElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\n\nexport function isInputElement(object: any): object is HTMLInputElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\ntype LimitedMouseEvent = Pick<\n  MouseEvent,\n  \"button\" | \"metaKey\" | \"altKey\" | \"ctrlKey\" | \"shiftKey\"\n>;\n\nfunction isModifiedEvent(event: LimitedMouseEvent) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nexport function shouldProcessLinkClick(\n  event: LimitedMouseEvent,\n  target?: string\n) {\n  return (\n    event.button === 0 && // Ignore everything but left clicks\n    (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n    !isModifiedEvent(event) // Ignore clicks with modifier keys\n  );\n}\n\nexport type ParamKeyValuePair = [string, string];\n\nexport type URLSearchParamsInit =\n  | string\n  | ParamKeyValuePair[]\n  | Record<string, string | string[]>\n  | URLSearchParams;\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nexport function createSearchParams(\n  init: URLSearchParamsInit = \"\"\n): URLSearchParams {\n  return new URLSearchParams(\n    typeof init === \"string\" ||\n    Array.isArray(init) ||\n    init instanceof URLSearchParams\n      ? init\n      : Object.keys(init).reduce((memo, key) => {\n          let value = init[key];\n          return memo.concat(\n            Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n          );\n        }, [] as ParamKeyValuePair[])\n  );\n}\n\nexport function getSearchParamsForLocation(\n  locationSearch: string,\n  defaultSearchParams: URLSearchParams\n) {\n  let searchParams = createSearchParams(locationSearch);\n\n  for (let key of defaultSearchParams.keys()) {\n    if (!searchParams.has(key)) {\n      defaultSearchParams.getAll(key).forEach((value) => {\n        searchParams.append(key, value);\n      });\n    }\n  }\n\n  return searchParams;\n}\n\nexport interface SubmitOptions {\n  /**\n   * The HTTP method used to submit the form. Overrides `<form method>`.\n   * Defaults to \"GET\".\n   */\n  method?: FormMethod;\n\n  /**\n   * The action URL path used to submit the form. Overrides `<form action>`.\n   * Defaults to the path of the current route.\n   *\n   * Note: It is assumed the path is already resolved. If you need to resolve a\n   * relative path, use `useFormAction`.\n   */\n  action?: string;\n\n  /**\n   * The action URL used to submit the form. Overrides `<form encType>`.\n   * Defaults to \"application/x-www-form-urlencoded\".\n   */\n  encType?: FormEncType;\n\n  /**\n   * Set `true` to replace the current entry in the browser's history stack\n   * instead of creating a new one (i.e. stay on \"the same page\"). Defaults\n   * to `false`.\n   */\n  replace?: boolean;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * In browser-based environments, prevent resetting scroll after this\n   * navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n}\n\nexport function getFormSubmissionInfo(\n  target:\n    | HTMLFormElement\n    | HTMLButtonElement\n    | HTMLInputElement\n    | FormData\n    | URLSearchParams\n    | { [name: string]: string }\n    | null,\n  defaultAction: string,\n  options: SubmitOptions\n): {\n  url: URL;\n  method: string;\n  encType: string;\n  formData: FormData;\n} {\n  let method: string;\n  let action: string;\n  let encType: string;\n  let formData: FormData;\n\n  if (isFormElement(target)) {\n    let submissionTrigger: HTMLButtonElement | HTMLInputElement = (\n      options as any\n    ).submissionTrigger;\n\n    method = options.method || target.getAttribute(\"method\") || defaultMethod;\n    action = options.action || target.getAttribute(\"action\") || defaultAction;\n    encType =\n      options.encType || target.getAttribute(\"enctype\") || defaultEncType;\n\n    formData = new FormData(target);\n\n    if (submissionTrigger && submissionTrigger.name) {\n      formData.append(submissionTrigger.name, submissionTrigger.value);\n    }\n  } else if (\n    isButtonElement(target) ||\n    (isInputElement(target) &&\n      (target.type === \"submit\" || target.type === \"image\"))\n  ) {\n    let form = target.form;\n\n    if (form == null) {\n      throw new Error(\n        `Cannot submit a <button> or <input type=\"submit\"> without a <form>`\n      );\n    }\n\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n\n    method =\n      options.method ||\n      target.getAttribute(\"formmethod\") ||\n      form.getAttribute(\"method\") ||\n      defaultMethod;\n    action =\n      options.action ||\n      target.getAttribute(\"formaction\") ||\n      form.getAttribute(\"action\") ||\n      defaultAction;\n    encType =\n      options.encType ||\n      target.getAttribute(\"formenctype\") ||\n      form.getAttribute(\"enctype\") ||\n      defaultEncType;\n\n    formData = new FormData(form);\n\n    // Include name + value from a <button>, appending in case the button name\n    // matches an existing input name\n    if (target.name) {\n      formData.append(target.name, target.value);\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\n      `Cannot submit element that is not <form>, <button>, or ` +\n        `<input type=\"submit|image\">`\n    );\n  } else {\n    method = options.method || defaultMethod;\n    action = options.action || defaultAction;\n    encType = options.encType || defaultEncType;\n\n    if (target instanceof FormData) {\n      formData = target;\n    } else {\n      formData = new FormData();\n\n      if (target instanceof URLSearchParams) {\n        for (let [name, value] of target) {\n          formData.append(name, value);\n        }\n      } else if (target != null) {\n        for (let name of Object.keys(target)) {\n          formData.append(name, target[name]);\n        }\n      }\n    }\n  }\n\n  let { protocol, host } = window.location;\n  let url = new URL(action, `${protocol}//${host}`);\n\n  return { url, method: method.toLowerCase(), encType, formData };\n}\n", "/**\n * NOTE: If you refactor this to split up the modules into separate files,\n * you'll need to update the rollup config for react-router-dom-v5-compat.\n */\nimport * as React from \"react\";\nimport type {\n  NavigateOptions,\n  RelativeRoutingType,\n  RouteObject,\n  To,\n} from \"react-router\";\nimport {\n  Router,\n  createPath,\n  useHref,\n  useLocation,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useResolvedPath,\n  unstable_useBlocker as useBlocker,\n  UNSAFE_DataRouterContext as DataRouterContext,\n  UNSAFE_DataRouterStateContext as DataRouterStateContext,\n  UNSAFE_NavigationContext as NavigationContext,\n  UNSAFE_RouteContext as RouteContext,\n  UNSAFE_enhanceManualRouteObjects as enhanceManualRouteObjects,\n} from \"react-router\";\nimport type {\n  BrowserHistory,\n  Fetcher,\n  FormEncType,\n  FormMethod,\n  GetScrollRestorationKeyFunction,\n  HashHistory,\n  History,\n  HydrationState,\n  Router as RemixRouter,\n} from \"@remix-run/router\";\nimport {\n  createRouter,\n  createBrowserHistory,\n  createHashHistory,\n  invariant,\n  joinPaths,\n  ErrorResponse,\n} from \"@remix-run/router\";\n\nimport type {\n  SubmitOptions,\n  ParamKeyValuePair,\n  URLSearchParamsInit,\n} from \"./dom\";\nimport {\n  createSearchParams,\n  defaultMethod,\n  getFormSubmissionInfo,\n  getSearchParamsForLocation,\n  shouldProcessLinkClick,\n} from \"./dom\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Re-exports\n////////////////////////////////////////////////////////////////////////////////\n\nexport type {\n  FormEncType,\n  FormMethod,\n  GetScrollRestorationKeyFunction,\n  ParamKeyValuePair,\n  SubmitOptions,\n  URLSearchParamsInit,\n};\nexport { createSearchParams };\n\n// Note: Keep in sync with react-router exports!\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  unstable_Blocker,\n  unstable_BlockerFunction,\n  DataRouteMatch,\n  DataRouteObject,\n  Fetcher,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  Pathname,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  To,\n} from \"react-router\";\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n  createMemoryRouter,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  unstable_useBlocker,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n} from \"react-router\";\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  UNSAFE_DataRouterContext,\n  UNSAFE_DataRouterStateContext,\n  UNSAFE_NavigationContext,\n  UNSAFE_LocationContext,\n  UNSAFE_RouteContext,\n  UNSAFE_enhanceManualRouteObjects,\n} from \"react-router\";\n//#endregion\n\ndeclare global {\n  var __staticRouterHydrationData: HydrationState | undefined;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Routers\n////////////////////////////////////////////////////////////////////////////////\n\nexport function createBrowserRouter(\n  routes: RouteObject[],\n  opts?: {\n    basename?: string;\n    hydrationData?: HydrationState;\n    window?: Window;\n  }\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    history: createBrowserHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes: enhanceManualRouteObjects(routes),\n  }).initialize();\n}\n\nexport function createHashRouter(\n  routes: RouteObject[],\n  opts?: {\n    basename?: string;\n    hydrationData?: HydrationState;\n    window?: Window;\n  }\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    history: createHashHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes: enhanceManualRouteObjects(routes),\n  }).initialize();\n}\n\nfunction parseHydrationData(): HydrationState | undefined {\n  let state = window?.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = {\n      ...state,\n      errors: deserializeErrors(state.errors),\n    };\n  }\n  return state;\n}\n\nfunction deserializeErrors(\n  errors: RemixRouter[\"state\"][\"errors\"]\n): RemixRouter[\"state\"][\"errors\"] {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized: RemixRouter[\"state\"][\"errors\"] = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponse(\n        val.status,\n        val.statusText,\n        val.data,\n        val.internal === true\n      );\n    } else if (val && val.__type === \"Error\") {\n      let error = new Error(val.message);\n      // Wipe away the client-side stack trace.  Nothing to fill it in with\n      // because we don't serialize SSR stack traces for security reasons\n      error.stack = \"\";\n      serialized[key] = error;\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n\nexport interface BrowserRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nexport function BrowserRouter({\n  basename,\n  children,\n  window,\n}: BrowserRouterProps) {\n  let historyRef = React.useRef<BrowserHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HashRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nexport function HashRouter({ basename, children, window }: HashRouterProps) {\n  let historyRef = React.useRef<HashHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HistoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  history: History;\n}\n\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter({ basename, children, history }: HistoryRouterProps) {\n  const [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nif (__DEV__) {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nexport { HistoryRouter as unstable_HistoryRouter };\n\nexport interface LinkProps\n  extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"href\"> {\n  reloadDocument?: boolean;\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  to: To;\n}\n\n/**\n * The public API for rendering a history-aware <a>.\n */\nexport const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(\n  function LinkWithRef(\n    {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      ...rest\n    },\n    ref\n  ) {\n    let href = useHref(to, { relative });\n    let internalOnClick = useLinkClickHandler(to, {\n      replace,\n      state,\n      target,\n      preventScrollReset,\n      relative,\n    });\n    function handleClick(\n      event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n    ) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented) {\n        internalOnClick(event);\n      }\n    }\n\n    return (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      <a\n        {...rest}\n        href={href}\n        onClick={reloadDocument ? onClick : handleClick}\n        ref={ref}\n        target={target}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Link.displayName = \"Link\";\n}\n\nexport interface NavLinkProps\n  extends Omit<LinkProps, \"className\" | \"style\" | \"children\"> {\n  children?:\n    | React.ReactNode\n    | ((props: { isActive: boolean; isPending: boolean }) => React.ReactNode);\n  caseSensitive?: boolean;\n  className?:\n    | string\n    | ((props: {\n        isActive: boolean;\n        isPending: boolean;\n      }) => string | undefined);\n  end?: boolean;\n  style?:\n    | React.CSSProperties\n    | ((props: {\n        isActive: boolean;\n        isPending: boolean;\n      }) => React.CSSProperties | undefined);\n}\n\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\nexport const NavLink = React.forwardRef<HTMLAnchorElement, NavLinkProps>(\n  function NavLinkWithRef(\n    {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      children,\n      ...rest\n    },\n    ref\n  ) {\n    let path = useResolvedPath(to, { relative: rest.relative });\n    let location = useLocation();\n    let routerState = React.useContext(DataRouterStateContext);\n    let { navigator } = React.useContext(NavigationContext);\n\n    let toPathname = navigator.encodeLocation\n      ? navigator.encodeLocation(path).pathname\n      : path.pathname;\n    let locationPathname = location.pathname;\n    let nextLocationPathname =\n      routerState && routerState.navigation && routerState.navigation.location\n        ? routerState.navigation.location.pathname\n        : null;\n\n    if (!caseSensitive) {\n      locationPathname = locationPathname.toLowerCase();\n      nextLocationPathname = nextLocationPathname\n        ? nextLocationPathname.toLowerCase()\n        : null;\n      toPathname = toPathname.toLowerCase();\n    }\n\n    let isActive =\n      locationPathname === toPathname ||\n      (!end &&\n        locationPathname.startsWith(toPathname) &&\n        locationPathname.charAt(toPathname.length) === \"/\");\n\n    let isPending =\n      nextLocationPathname != null &&\n      (nextLocationPathname === toPathname ||\n        (!end &&\n          nextLocationPathname.startsWith(toPathname) &&\n          nextLocationPathname.charAt(toPathname.length) === \"/\"));\n\n    let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n\n    let className: string | undefined;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp({ isActive, isPending });\n    } else {\n      // If the className prop is not a function, we use a default `active`\n      // class for <NavLink />s that are active. In v5 `active` was the default\n      // value for `activeClassName`, but we are removing that API and can still\n      // use the old default behavior for a cleaner upgrade path and keep the\n      // simple styling rules working as they currently do.\n      className = [\n        classNameProp,\n        isActive ? \"active\" : null,\n        isPending ? \"pending\" : null,\n      ]\n        .filter(Boolean)\n        .join(\" \");\n    }\n\n    let style =\n      typeof styleProp === \"function\"\n        ? styleProp({ isActive, isPending })\n        : styleProp;\n\n    return (\n      <Link\n        {...rest}\n        aria-current={ariaCurrent}\n        className={className}\n        ref={ref}\n        style={style}\n        to={to}\n      >\n        {typeof children === \"function\"\n          ? children({ isActive, isPending })\n          : children}\n      </Link>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n}\n\nexport interface FormProps extends React.FormHTMLAttributes<HTMLFormElement> {\n  /**\n   * The HTTP verb to use when the form is submit. Supports \"get\", \"post\",\n   * \"put\", \"delete\", \"patch\".\n   */\n  method?: FormMethod;\n\n  /**\n   * Normal `<form action>` but supports React Router's relative paths.\n   */\n  action?: string;\n\n  /**\n   * Forces a full document navigation instead of a fetch.\n   */\n  reloadDocument?: boolean;\n\n  /**\n   * Replaces the current entry in the browser history stack when the form\n   * navigates. Use this if you don't want the user to be able to click \"back\"\n   * to the page with the form on it.\n   */\n  replace?: boolean;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * Prevent the scroll position from resetting to the top of the viewport on\n   * completion of the navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n\n  /**\n   * A function to call when the form is submitted. If you call\n   * `event.preventDefault()` then this form will not do anything.\n   */\n  onSubmit?: React.FormEventHandler<HTMLFormElement>;\n}\n\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nexport const Form = React.forwardRef<HTMLFormElement, FormProps>(\n  (props, ref) => {\n    return <FormImpl {...props} ref={ref} />;\n  }\n);\n\nif (__DEV__) {\n  Form.displayName = \"Form\";\n}\n\ntype HTMLSubmitEvent = React.BaseSyntheticEvent<\n  SubmitEvent,\n  Event,\n  HTMLFormElement\n>;\n\ntype HTMLFormSubmitter = HTMLButtonElement | HTMLInputElement;\n\ninterface FormImplProps extends FormProps {\n  fetcherKey?: string;\n  routeId?: string;\n}\n\nconst FormImpl = React.forwardRef<HTMLFormElement, FormImplProps>(\n  (\n    {\n      reloadDocument,\n      replace,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      fetcherKey,\n      routeId,\n      relative,\n      preventScrollReset,\n      ...props\n    },\n    forwardedRef\n  ) => {\n    let submit = useSubmitImpl(fetcherKey, routeId);\n    let formMethod: FormMethod =\n      method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n    let formAction = useFormAction(action, { relative });\n    let submitHandler: React.FormEventHandler<HTMLFormElement> = (event) => {\n      onSubmit && onSubmit(event);\n      if (event.defaultPrevented) return;\n      event.preventDefault();\n\n      let submitter = (event as unknown as HTMLSubmitEvent).nativeEvent\n        .submitter as HTMLFormSubmitter | null;\n\n      let submitMethod =\n        (submitter?.getAttribute(\"formmethod\") as FormMethod | undefined) ||\n        method;\n\n      submit(submitter || event.currentTarget, {\n        method: submitMethod,\n        replace,\n        relative,\n        preventScrollReset,\n      });\n    };\n\n    return (\n      <form\n        ref={forwardedRef}\n        method={formMethod}\n        action={formAction}\n        onSubmit={reloadDocument ? onSubmit : submitHandler}\n        {...props}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  FormImpl.displayName = \"FormImpl\";\n}\n\nexport interface ScrollRestorationProps {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n}\n\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nexport function ScrollRestoration({\n  getKey,\n  storageKey,\n}: ScrollRestorationProps) {\n  useScrollRestoration({ getKey, storageKey });\n  return null;\n}\n\nif (__DEV__) {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\nenum DataRouterHook {\n  UseScrollRestoration = \"useScrollRestoration\",\n  UseSubmitImpl = \"useSubmitImpl\",\n  UseFetcher = \"useFetcher\",\n}\n\nenum DataRouterStateHook {\n  UseFetchers = \"useFetchers\",\n  UseScrollRestoration = \"useScrollRestoration\",\n}\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nexport function useLinkClickHandler<E extends Element = HTMLAnchorElement>(\n  to: To,\n  {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n  }: {\n    target?: React.HTMLAttributeAnchorTarget;\n    replace?: boolean;\n    state?: any;\n    preventScrollReset?: boolean;\n    relative?: RelativeRoutingType;\n  } = {}\n): (event: React.MouseEvent<E, MouseEvent>) => void {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, { relative });\n\n  return React.useCallback(\n    (event: React.MouseEvent<E, MouseEvent>) => {\n      if (shouldProcessLinkClick(event, target)) {\n        event.preventDefault();\n\n        // If the URL hasn't changed, a regular <a> will do a replace instead of\n        // a push, so do the same here unless the replace prop is explicitly set\n        let replace =\n          replaceProp !== undefined\n            ? replaceProp\n            : createPath(location) === createPath(path);\n\n        navigate(to, { replace, state, preventScrollReset, relative });\n      }\n    },\n    [\n      location,\n      navigate,\n      path,\n      replaceProp,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      relative,\n    ]\n  );\n}\n\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nexport function useSearchParams(\n  defaultInit?: URLSearchParamsInit\n): [URLSearchParams, SetURLSearchParams] {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not ` +\n      `support the URLSearchParams API. If you need to support Internet ` +\n      `Explorer 11, we recommend you load a polyfill such as ` +\n      `https://github.com/ungap/url-search-params\\n\\n` +\n      `If you're unsure how to load polyfills, we recommend you check out ` +\n      `https://polyfill.io/v3/ which provides some recommendations about how ` +\n      `to load polyfills only for users that need them, instead of for every ` +\n      `user.`\n  );\n\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n\n  let location = useLocation();\n  let searchParams = React.useMemo(\n    () =>\n      getSearchParamsForLocation(\n        location.search,\n        defaultSearchParamsRef.current\n      ),\n    [location.search]\n  );\n\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback<SetURLSearchParams>(\n    (nextInit, navigateOptions) => {\n      const newSearchParams = createSearchParams(\n        typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit\n      );\n      navigate(\"?\" + newSearchParams, navigateOptions);\n    },\n    [navigate, searchParams]\n  );\n\n  return [searchParams, setSearchParams];\n}\n\ntype SetURLSearchParams = (\n  nextInit?:\n    | URLSearchParamsInit\n    | ((prev: URLSearchParams) => URLSearchParamsInit),\n  navigateOpts?: NavigateOptions\n) => void;\n\ntype SubmitTarget =\n  | HTMLFormElement\n  | HTMLButtonElement\n  | HTMLInputElement\n  | FormData\n  | URLSearchParams\n  | { [name: string]: string }\n  | null;\n\n/**\n * Submits a HTML `<form>` to the server without reloading the page.\n */\nexport interface SubmitFunction {\n  (\n    /**\n     * Specifies the `<form>` to be submitted to the server, a specific\n     * `<button>` or `<input type=\"submit\">` to use to submit the form, or some\n     * arbitrary data to submit.\n     *\n     * Note: When using a `<button>` its `name` and `value` will also be\n     * included in the form data that is submitted.\n     */\n    target: SubmitTarget,\n\n    /**\n     * Options that override the `<form>`'s own attributes. Required when\n     * submitting arbitrary data without a backing `<form>`.\n     */\n    options?: SubmitOptions\n  ): void;\n}\n\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nexport function useSubmit(): SubmitFunction {\n  return useSubmitImpl();\n}\n\nfunction useSubmitImpl(fetcherKey?: string, routeId?: string): SubmitFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseSubmitImpl);\n  let defaultAction = useFormAction();\n\n  return React.useCallback(\n    (target, options = {}) => {\n      if (typeof document === \"undefined\") {\n        throw new Error(\n          \"You are calling submit during the server render. \" +\n            \"Try calling submit within a `useEffect` or callback instead.\"\n        );\n      }\n\n      let { method, encType, formData, url } = getFormSubmissionInfo(\n        target,\n        defaultAction,\n        options\n      );\n\n      let href = url.pathname + url.search;\n      let opts = {\n        replace: options.replace,\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        formMethod: method as FormMethod,\n        formEncType: encType as FormEncType,\n      };\n      if (fetcherKey) {\n        invariant(routeId != null, \"No routeId available for useFetcher()\");\n        router.fetch(fetcherKey, routeId, href, opts);\n      } else {\n        router.navigate(href, opts);\n      }\n    },\n    [defaultAction, router, fetcherKey, routeId]\n  );\n}\n\nexport function useFormAction(\n  action?: string,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  let { basename } = React.useContext(NavigationContext);\n  let routeContext = React.useContext(RouteContext);\n  invariant(routeContext, \"useFormAction must be used inside a RouteContext\");\n\n  let [match] = routeContext.matches.slice(-1);\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = { ...useResolvedPath(action ? action : \".\", { relative }) };\n\n  // Previously we set the default action to \".\". The problem with this is that\n  // `useResolvedPath(\".\")` excludes search params and the hash of the resolved\n  // URL. This is the intended behavior of when \".\" is specifically provided as\n  // the form action, but inconsistent w/ browsers when the action is omitted.\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to these directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    // or hash\n    path.search = location.search;\n    path.hash = location.hash;\n\n    // When grabbing search params from the URL, remove the automatically\n    // inserted ?index param so we match the useResolvedPath search behavior\n    // which would not include ?index\n    if (match.route.index) {\n      let params = new URLSearchParams(path.search);\n      params.delete(\"index\");\n      path.search = params.toString() ? `?${params.toString()}` : \"\";\n    }\n  }\n\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\nfunction createFetcherForm(fetcherKey: string, routeId: string) {\n  let FetcherForm = React.forwardRef<HTMLFormElement, FormProps>(\n    (props, ref) => {\n      return (\n        <FormImpl\n          {...props}\n          ref={ref}\n          fetcherKey={fetcherKey}\n          routeId={routeId}\n        />\n      );\n    }\n  );\n  if (__DEV__) {\n    FetcherForm.displayName = \"fetcher.Form\";\n  }\n  return FetcherForm;\n}\n\nlet fetcherId = 0;\n\nexport type FetcherWithComponents<TData> = Fetcher<TData> & {\n  Form: ReturnType<typeof createFetcherForm>;\n  submit: (\n    target: SubmitTarget,\n    // Fetchers cannot replace/preventScrollReset because they are not\n    // navigation events\n    options?: Omit<SubmitOptions, \"replace\" | \"preventScrollReset\">\n  ) => void;\n  load: (href: string) => void;\n};\n\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nexport function useFetcher<TData = any>(): FetcherWithComponents<TData> {\n  let { router } = useDataRouterContext(DataRouterHook.UseFetcher);\n\n  let route = React.useContext(RouteContext);\n  invariant(route, `useFetcher must be used inside a RouteContext`);\n\n  let routeId = route.matches[route.matches.length - 1]?.route.id;\n  invariant(\n    routeId != null,\n    `useFetcher can only be used on routes that contain a unique \"id\"`\n  );\n\n  let [fetcherKey] = React.useState(() => String(++fetcherId));\n  let [Form] = React.useState(() => {\n    invariant(routeId, `No routeId available for fetcher.Form()`);\n    return createFetcherForm(fetcherKey, routeId);\n  });\n  let [load] = React.useState(() => (href: string) => {\n    invariant(router, \"No router available for fetcher.load()\");\n    invariant(routeId, \"No routeId available for fetcher.load()\");\n    router.fetch(fetcherKey, routeId, href);\n  });\n  let submit = useSubmitImpl(fetcherKey, routeId);\n\n  let fetcher = router.getFetcher<TData>(fetcherKey);\n\n  let fetcherWithComponents = React.useMemo(\n    () => ({\n      Form,\n      submit,\n      load,\n      ...fetcher,\n    }),\n    [fetcher, Form, submit, load]\n  );\n\n  React.useEffect(() => {\n    // Is this busted when the React team gets real weird and calls effects\n    // twice on mount?  We really just need to garbage collect here when this\n    // fetcher is no longer around.\n    return () => {\n      if (!router) {\n        console.warn(`No fetcher available to clean up from useFetcher()`);\n        return;\n      }\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n\n  return fetcherWithComponents;\n}\n\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nexport function useFetchers(): Fetcher[] {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return [...state.fetchers.values()];\n}\n\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions: Record<string, number> = {};\n\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration({\n  getKey,\n  storageKey,\n}: {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n} = {}) {\n  let { router } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let { restoreScrollPosition, preventScrollReset } = useDataRouterState(\n    DataRouterStateHook.UseScrollRestoration\n  );\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n\n  // Save positions on unload\n  useBeforeUnload(\n    React.useCallback(() => {\n      if (navigation.state === \"idle\") {\n        let key = (getKey ? getKey(location, matches) : null) || location.key;\n        savedScrollPositions[key] = window.scrollY;\n      }\n      sessionStorage.setItem(\n        storageKey || SCROLL_RESTORATION_STORAGE_KEY,\n        JSON.stringify(savedScrollPositions)\n      );\n      window.history.scrollRestoration = \"auto\";\n    }, [storageKey, getKey, navigation.state, location, matches])\n  );\n\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY\n        );\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      let disableScrollRestoration = router?.enableScrollRestoration(\n        savedScrollPositions,\n        () => window.scrollY,\n        getKey\n      );\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, getKey]);\n\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n\n      // try to scroll to the hash\n      if (location.hash) {\n        let el = document.getElementById(location.hash.slice(1));\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n\n      // Don't reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nexport function useBeforeUnload(\n  callback: (event: BeforeUnloadEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\nfunction usePrompt({ when, message }: { when: boolean; message: string }) {\n  let blocker = useBlocker(when);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n}\n\nexport { usePrompt as unstable_usePrompt };\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Utils\n////////////////////////////////////////////////////////////////////////////////\n\nfunction warning(cond: boolean, message: string): void {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging React Router!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n//#endregion\n\nexport { useScrollRestoration as UNSAFE_useScrollRestoration };\n", "/**\n * @license React\n * use-sync-external-store-shim.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n\n          'use strict';\n\n/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n}\n          var React = require('react');\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x, y) {\n  return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare\n  ;\n}\n\nvar objectIs = typeof Object.is === 'function' ? Object.is : is;\n\n// dispatch for CommonJS interop named imports.\n\nvar useState = React.useState,\n    useEffect = React.useEffect,\n    useLayoutEffect = React.useLayoutEffect,\n    useDebugValue = React.useDebugValue;\nvar didWarnOld18Alpha = false;\nvar didWarnUncachedGetSnapshot = false; // Disclaimer: This shim breaks many of the rules of React, and only works\n// because of a very particular set of implementation details and assumptions\n// -- change any one of them and it will break. The most important assumption\n// is that updates are always synchronous, because concurrent rendering is\n// only available in versions of React that also have a built-in\n// useSyncExternalStore API. And we only use this shim when the built-in API\n// does not exist.\n//\n// Do not assume that the clever hacks used by this hook also work in general.\n// The point of this shim is to replace the need for hacks by other libraries.\n\nfunction useSyncExternalStore(subscribe, getSnapshot, // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n// React do not expose a way to check if we're hydrating. So users of the shim\n// will need to track that themselves and return the correct value\n// from `getSnapshot`.\ngetServerSnapshot) {\n  {\n    if (!didWarnOld18Alpha) {\n      if (React.startTransition !== undefined) {\n        didWarnOld18Alpha = true;\n\n        error('You are using an outdated, pre-release alpha of React 18 that ' + 'does not support useSyncExternalStore. The ' + 'use-sync-external-store shim will not work correctly. Upgrade ' + 'to a newer pre-release.');\n      }\n    }\n  } // Read the current snapshot from the store on every render. Again, this\n  // breaks the rules of React, and only works here because of specific\n  // implementation details, most importantly that updates are\n  // always synchronous.\n\n\n  var value = getSnapshot();\n\n  {\n    if (!didWarnUncachedGetSnapshot) {\n      var cachedValue = getSnapshot();\n\n      if (!objectIs(value, cachedValue)) {\n        error('The result of getSnapshot should be cached to avoid an infinite loop');\n\n        didWarnUncachedGetSnapshot = true;\n      }\n    }\n  } // Because updates are synchronous, we don't queue them. Instead we force a\n  // re-render whenever the subscribed state changes by updating an some\n  // arbitrary useState hook. Then, during render, we call getSnapshot to read\n  // the current value.\n  //\n  // Because we don't actually use the state returned by the useState hook, we\n  // can save a bit of memory by storing other stuff in that slot.\n  //\n  // To implement the early bailout, we need to track some things on a mutable\n  // object. Usually, we would put that in a useRef hook, but we can stash it in\n  // our useState hook instead.\n  //\n  // To force a re-render, we call forceUpdate({inst}). That works because the\n  // new object always fails an equality check.\n\n\n  var _useState = useState({\n    inst: {\n      value: value,\n      getSnapshot: getSnapshot\n    }\n  }),\n      inst = _useState[0].inst,\n      forceUpdate = _useState[1]; // Track the latest getSnapshot function with a ref. This needs to be updated\n  // in the layout phase so we can access it during the tearing check that\n  // happens on subscribe.\n\n\n  useLayoutEffect(function () {\n    inst.value = value;\n    inst.getSnapshot = getSnapshot; // Whenever getSnapshot or subscribe changes, we need to check in the\n    // commit phase if there was an interleaved mutation. In concurrent mode\n    // this can happen all the time, but even in synchronous mode, an earlier\n    // effect may have mutated the store.\n\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({\n        inst: inst\n      });\n    }\n  }, [subscribe, value, getSnapshot]);\n  useEffect(function () {\n    // Check for changes right before subscribing. Subsequent changes will be\n    // detected in the subscription handler.\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({\n        inst: inst\n      });\n    }\n\n    var handleStoreChange = function () {\n      // TODO: Because there is no cross-renderer API for batching updates, it's\n      // up to the consumer of this library to wrap their subscription event\n      // with unstable_batchedUpdates. Should we try to detect when this isn't\n      // the case and print a warning in development?\n      // The store changed. Check if the snapshot changed since the last time we\n      // read from the store.\n      if (checkIfSnapshotChanged(inst)) {\n        // Force a re-render.\n        forceUpdate({\n          inst: inst\n        });\n      }\n    }; // Subscribe to the store and return a clean-up function.\n\n\n    return subscribe(handleStoreChange);\n  }, [subscribe]);\n  useDebugValue(value);\n  return value;\n}\n\nfunction checkIfSnapshotChanged(inst) {\n  var latestGetSnapshot = inst.getSnapshot;\n  var prevValue = inst.value;\n\n  try {\n    var nextValue = latestGetSnapshot();\n    return !objectIs(prevValue, nextValue);\n  } catch (error) {\n    return true;\n  }\n}\n\nfunction useSyncExternalStore$1(subscribe, getSnapshot, getServerSnapshot) {\n  // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n  // React do not expose a way to check if we're hydrating. So users of the shim\n  // will need to track that themselves and return the correct value\n  // from `getSnapshot`.\n  return getSnapshot();\n}\n\nvar canUseDOM = !!(typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined');\n\nvar isServerEnvironment = !canUseDOM;\n\nvar shim = isServerEnvironment ? useSyncExternalStore$1 : useSyncExternalStore;\nvar useSyncExternalStore$2 = React.useSyncExternalStore !== undefined ? React.useSyncExternalStore : shim;\n\nexports.useSyncExternalStore = useSyncExternalStore$2;\n          /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n}\n        \n  })();\n}\n", "'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim.production.min.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim.development.js');\n}\n", "/**\n * @remix-run/react v1.11.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nexport { _extends as extends };\n", "/**\n * @remix-run/react v1.11.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport React__default, { useContext } from 'react';\nimport { useRouteError, isRouteErrorResponse } from 'react-router-dom';\n\nclass RemixErrorBoundary extends React__default.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: props.error || null,\n      location: props.location\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      error\n    };\n  }\n  static getDerivedStateFromProps(props, state) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application (even the HTML!) that will have no effect--the error page\n    // continues to display. This gives us a mechanism to recover from the error\n    // when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (state.location !== props.location) {\n      return {\n        error: props.error || null,\n        location: props.location\n      };\n    }\n\n    // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n    return {\n      error: props.error || state.error,\n      location: state.location\n    };\n  }\n  render() {\n    if (this.state.error) {\n      return /*#__PURE__*/React__default.createElement(this.props.component, {\n        error: this.state.error\n      });\n    } else {\n      return this.props.children;\n    }\n  }\n}\n\n/**\n * When app's don't provide a root level ErrorBoundary, we default to this.\n */\nfunction RemixRootDefaultErrorBoundary({\n  error\n}) {\n  console.error(error);\n  return /*#__PURE__*/React__default.createElement(\"html\", {\n    lang: \"en\"\n  }, /*#__PURE__*/React__default.createElement(\"head\", null, /*#__PURE__*/React__default.createElement(\"meta\", {\n    charSet: \"utf-8\"\n  }), /*#__PURE__*/React__default.createElement(\"meta\", {\n    name: \"viewport\",\n    content: \"width=device-width,initial-scale=1,viewport-fit=cover\"\n  }), /*#__PURE__*/React__default.createElement(\"title\", null, \"Application Error!\")), /*#__PURE__*/React__default.createElement(\"body\", null, /*#__PURE__*/React__default.createElement(\"main\", {\n    style: {\n      fontFamily: \"system-ui, sans-serif\",\n      padding: \"2rem\"\n    }\n  }, /*#__PURE__*/React__default.createElement(\"h1\", {\n    style: {\n      fontSize: \"24px\"\n    }\n  }, \"Application Error\"), /*#__PURE__*/React__default.createElement(\"pre\", {\n    style: {\n      padding: \"2rem\",\n      background: \"hsla(10, 50%, 50%, 0.1)\",\n      color: \"red\",\n      overflow: \"auto\"\n    }\n  }, error.stack)), /*#__PURE__*/React__default.createElement(\"script\", {\n    dangerouslySetInnerHTML: {\n      __html: `\n              console.log(\n                \"\uD83D\uDCBF Hey developer\uD83D\uDC4B. You can provide a way better UX than this when your app throws errors. Check out https://remix.run/guides/errors for more information.\"\n              );\n            `\n    }\n  })));\n}\nfunction V2_RemixRootDefaultErrorBoundary() {\n  let error = useRouteError();\n  if (isRouteErrorResponse(error)) {\n    return /*#__PURE__*/React__default.createElement(RemixRootDefaultCatchBoundaryImpl, {\n      caught: error\n    });\n  } else if (error instanceof Error) {\n    return /*#__PURE__*/React__default.createElement(RemixRootDefaultErrorBoundary, {\n      error: error\n    });\n  } else {\n    let errorString = error == null ? \"Unknown Error\" : typeof error === \"object\" && \"toString\" in error ? error.toString() : JSON.stringify(error);\n    return /*#__PURE__*/React__default.createElement(RemixRootDefaultErrorBoundary, {\n      error: new Error(errorString)\n    });\n  }\n}\nlet RemixCatchContext = /*#__PURE__*/React__default.createContext(undefined);\n\n/**\n * Returns the status code and thrown response data.\n *\n * @see https://remix.run/route/catch-boundary\n */\nfunction useCatch() {\n  return useContext(RemixCatchContext);\n}\nfunction RemixCatchBoundary({\n  catch: catchVal,\n  component: Component,\n  children\n}) {\n  if (catchVal) {\n    return /*#__PURE__*/React__default.createElement(RemixCatchContext.Provider, {\n      value: catchVal\n    }, /*#__PURE__*/React__default.createElement(Component, null));\n  }\n  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, children);\n}\n\n/**\n * When app's don't provide a root level CatchBoundary, we default to this.\n */\nfunction RemixRootDefaultCatchBoundary() {\n  let caught = useCatch();\n  return /*#__PURE__*/React__default.createElement(RemixRootDefaultCatchBoundaryImpl, {\n    caught: caught\n  });\n}\nfunction RemixRootDefaultCatchBoundaryImpl({\n  caught\n}) {\n  return /*#__PURE__*/React__default.createElement(\"html\", {\n    lang: \"en\"\n  }, /*#__PURE__*/React__default.createElement(\"head\", null, /*#__PURE__*/React__default.createElement(\"meta\", {\n    charSet: \"utf-8\"\n  }), /*#__PURE__*/React__default.createElement(\"meta\", {\n    name: \"viewport\",\n    content: \"width=device-width,initial-scale=1,viewport-fit=cover\"\n  }), /*#__PURE__*/React__default.createElement(\"title\", null, \"Unhandled Thrown Response!\")), /*#__PURE__*/React__default.createElement(\"body\", null, /*#__PURE__*/React__default.createElement(\"h1\", {\n    style: {\n      fontFamily: \"system-ui, sans-serif\",\n      padding: \"2rem\"\n    }\n  }, caught.status, \" \", caught.statusText), /*#__PURE__*/React__default.createElement(\"script\", {\n    dangerouslySetInnerHTML: {\n      __html: `\n              console.log(\n                \"\uD83D\uDCBF Hey developer\uD83D\uDC4B. You can provide a way better UX than this when your app throws 404s (and other responses). Check out https://remix.run/guides/not-found for more information.\"\n              );\n            `\n    }\n  })));\n}\n\nexport { RemixCatchBoundary, RemixErrorBoundary, RemixRootDefaultCatchBoundary, RemixRootDefaultErrorBoundary, V2_RemixRootDefaultErrorBoundary, useCatch };\n", "/**\n * @remix-run/react v1.11.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nfunction invariant(value, message) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\n\nexport { invariant as default };\n", "/**\n * @remix-run/react v1.11.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n/**\n * A React component that is rendered when the server throws a Response.\n *\n * @see https://remix.run/route/catch-boundary\n */\n\n/**\n * A React component that is rendered when there is an error on a route.\n *\n * @see https://remix.run/route/error-boundary\n */\n\n/**\n * V2 version of the ErrorBoundary that eliminates the distinction between\n * Error and Catch Boundaries and behaves like RR 6.4 errorElement and captures\n * errors with useRouteError()\n */\n\n/**\n * A function that defines `<link>` tags to be inserted into the `<head>` of\n * the document on route transitions.\n *\n * @see https://remix.run/route/meta\n */\n\n/**\n * A function that returns an object of name + content pairs to use for\n * `<meta>` tags for a route. These tags will be merged with (and take\n * precedence over) tags from parent routes.\n *\n * @see https://remix.run/route/meta\n */\n\n// TODO: Replace in v2\n\n/**\n * A name/content pair used to render `<meta>` tags in a meta function for a\n * route. The value can be either a string, which will render a single `<meta>`\n * tag, or an array of strings that will render multiple tags with the same\n * `name` attribute.\n */\n\n// TODO: Replace in v2\n\n/**\n * A React component that is rendered for a route.\n */\n\n/**\n * An arbitrary object that is associated with a route.\n *\n * @see https://remix.run/route/handle\n */\n\nasync function loadRouteModule(route, routeModulesCache) {\n  if (route.id in routeModulesCache) {\n    return routeModulesCache[route.id];\n  }\n  try {\n    let routeModule = await import( /* webpackIgnore: true */route.module);\n    routeModulesCache[route.id] = routeModule;\n    return routeModule;\n  } catch (error) {\n    // User got caught in the middle of a deploy and the CDN no longer has the\n    // asset we're trying to import! Reload from the server and the user\n    // (should) get the new manifest--unless the developer purged the static\n    // assets, the manifest path, but not the documents \uD83D\uDE2C\n    window.location.reload();\n    return new Promise(() => {\n      // check out of this hook cause the DJs never gonna re[s]olve this\n    });\n  }\n}\n\n/**\n * @deprecated The `unstable_shouldReload` function has been removed, so this\n * function will never run and route data will be revalidated on every request.\n * Please update the function name to `shouldRevalidate` and use the\n * `ShouldRevalidateFunction` interface.\n */\n\nexport { loadRouteModule };\n", "/**\n * @remix-run/react v1.11.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport { parsePath } from 'react-router-dom';\nimport { loadRouteModule } from './routeModules.js';\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Gets all the links for a set of matches. The modules are assumed to have been\n * loaded already.\n */\nfunction getLinksForMatches(matches, routeModules, manifest) {\n  let descriptors = matches.map(match => {\n    var _module$links;\n    let module = routeModules[match.route.id];\n    return ((_module$links = module.links) === null || _module$links === void 0 ? void 0 : _module$links.call(module)) || [];\n  }).flat(1);\n  let preloads = getCurrentPageModulePreloadHrefs(matches, manifest);\n  return dedupe(descriptors, preloads);\n}\nasync function prefetchStyleLinks(routeModule) {\n  if (!routeModule.links) return;\n  let descriptors = routeModule.links();\n  if (!descriptors) return;\n  let styleLinks = [];\n  for (let descriptor of descriptors) {\n    if (!isPageLinkDescriptor(descriptor) && descriptor.rel === \"stylesheet\") {\n      styleLinks.push({\n        ...descriptor,\n        rel: \"preload\",\n        as: \"style\"\n      });\n    }\n  }\n\n  // don't block for non-matching media queries\n  let matchingLinks = styleLinks.filter(link => !link.media || window.matchMedia(link.media).matches);\n  await Promise.all(matchingLinks.map(prefetchStyleLink));\n}\nasync function prefetchStyleLink(descriptor) {\n  return new Promise(resolve => {\n    let link = document.createElement(\"link\");\n    Object.assign(link, descriptor);\n    function removeLink() {\n      // if a navigation interrupts this prefetch React will update the <head>\n      // and remove the link we put in there manually, so we check if it's still\n      // there before trying to remove it\n      if (document.head.contains(link)) {\n        document.head.removeChild(link);\n      }\n    }\n    link.onload = () => {\n      removeLink();\n      resolve();\n    };\n    link.onerror = () => {\n      removeLink();\n      resolve();\n    };\n    document.head.appendChild(link);\n  });\n}\n\n////////////////////////////////////////////////////////////////////////////////\nfunction isPageLinkDescriptor(object) {\n  return object != null && typeof object.page === \"string\";\n}\nfunction isHtmlLinkDescriptor(object) {\n  if (object == null) return false;\n\n  // <link> may not have an href if <link rel=\"preload\"> is used with imagesrcset + imagesizes\n  // https://github.com/remix-run/remix/issues/184\n  // https://html.spec.whatwg.org/commit-snapshots/cb4f5ff75de5f4cbd7013c4abad02f21c77d4d1c/#attr-link-imagesrcset\n  if (object.href == null) {\n    return object.rel === \"preload\" && (typeof object.imageSrcSet === \"string\" || typeof object.imagesrcset === \"string\") && (typeof object.imageSizes === \"string\" || typeof object.imagesizes === \"string\");\n  }\n  return typeof object.rel === \"string\" && typeof object.href === \"string\";\n}\nasync function getStylesheetPrefetchLinks(matches, manifest, routeModules) {\n  let links = await Promise.all(matches.map(async match => {\n    let mod = await loadRouteModule(manifest.routes[match.route.id], routeModules);\n    return mod.links ? mod.links() : [];\n  }));\n  return links.flat(1).filter(isHtmlLinkDescriptor).filter(link => link.rel === \"stylesheet\" || link.rel === \"preload\").map(link => link.rel === \"preload\" ? {\n    ...link,\n    rel: \"prefetch\"\n  } : {\n    ...link,\n    rel: \"prefetch\",\n    as: \"style\"\n  });\n}\n\n// This is ridiculously identical to transition.ts `filterMatchesToLoad`\nfunction getNewMatchesForLinks(page, nextMatches, currentMatches, manifest, location, mode) {\n  let path = parsePathPatch(page);\n  let isNew = (match, index) => {\n    if (!currentMatches[index]) return true;\n    return match.route.id !== currentMatches[index].route.id;\n  };\n  let matchPathChanged = (match, index) => {\n    var _currentMatches$index;\n    return (\n      // param change, /users/123 -> /users/456\n      currentMatches[index].pathname !== match.pathname ||\n      // splat param changed, which is not present in match.path\n      // e.g. /files/images/avatar.jpg -> files/finances.xls\n      ((_currentMatches$index = currentMatches[index].route.path) === null || _currentMatches$index === void 0 ? void 0 : _currentMatches$index.endsWith(\"*\")) && currentMatches[index].params[\"*\"] !== match.params[\"*\"]\n    );\n  };\n\n  // NOTE: keep this mostly up-to-date w/ the transition data diff, but this\n  // version doesn't care about submissions\n  let newMatches = mode === \"data\" && location.search !== path.search ?\n  // this is really similar to stuff in transition.ts, maybe somebody smarter\n  // than me (or in less of a hurry) can share some of it. You're the best.\n  nextMatches.filter((match, index) => {\n    let manifestRoute = manifest.routes[match.route.id];\n    if (!manifestRoute.hasLoader) {\n      return false;\n    }\n    if (isNew(match, index) || matchPathChanged(match, index)) {\n      return true;\n    }\n    if (match.route.shouldRevalidate) {\n      var _currentMatches$;\n      let routeChoice = match.route.shouldRevalidate({\n        currentUrl: new URL(location.pathname + location.search + location.hash, window.origin),\n        currentParams: ((_currentMatches$ = currentMatches[0]) === null || _currentMatches$ === void 0 ? void 0 : _currentMatches$.params) || {},\n        nextUrl: new URL(page, window.origin),\n        nextParams: match.params,\n        defaultShouldRevalidate: true\n      });\n      if (typeof routeChoice === \"boolean\") {\n        return routeChoice;\n      }\n    }\n    return true;\n  }) : nextMatches.filter((match, index) => {\n    let manifestRoute = manifest.routes[match.route.id];\n    return (mode === \"assets\" || manifestRoute.hasLoader) && (isNew(match, index) || matchPathChanged(match, index));\n  });\n  return newMatches;\n}\nfunction getDataLinkHrefs(page, matches, manifest) {\n  let path = parsePathPatch(page);\n  return dedupeHrefs(matches.filter(match => manifest.routes[match.route.id].hasLoader).map(match => {\n    let {\n      pathname,\n      search\n    } = path;\n    let searchParams = new URLSearchParams(search);\n    searchParams.set(\"_data\", match.route.id);\n    return `${pathname}?${searchParams}`;\n  }));\n}\nfunction getModuleLinkHrefs(matches, manifestPatch) {\n  return dedupeHrefs(matches.map(match => {\n    let route = manifestPatch.routes[match.route.id];\n    let hrefs = [route.module];\n    if (route.imports) {\n      hrefs = hrefs.concat(route.imports);\n    }\n    return hrefs;\n  }).flat(1));\n}\n\n// The `<Script>` will render rel=modulepreload for the current page, we don't\n// need to include them in a page prefetch, this gives us the list to remove\n// while deduping.\nfunction getCurrentPageModulePreloadHrefs(matches, manifest) {\n  return dedupeHrefs(matches.map(match => {\n    let route = manifest.routes[match.route.id];\n    let hrefs = [route.module];\n    if (route.imports) {\n      hrefs = hrefs.concat(route.imports);\n    }\n    return hrefs;\n  }).flat(1));\n}\nfunction dedupeHrefs(hrefs) {\n  return [...new Set(hrefs)];\n}\nfunction dedupe(descriptors, preloads) {\n  let set = new Set();\n  let preloadsSet = new Set(preloads);\n  return descriptors.reduce((deduped, descriptor) => {\n    let alreadyModulePreload = !isPageLinkDescriptor(descriptor) && descriptor.as === \"script\" && descriptor.href && preloadsSet.has(descriptor.href);\n    if (alreadyModulePreload) {\n      return deduped;\n    }\n    let str = JSON.stringify(descriptor);\n    if (!set.has(str)) {\n      set.add(str);\n      deduped.push(descriptor);\n    }\n    return deduped;\n  }, []);\n}\n\n// https://github.com/remix-run/history/issues/897\nfunction parsePathPatch(href) {\n  let path = parsePath(href);\n  if (path.search === undefined) path.search = \"\";\n  return path;\n}\n\nexport { dedupe, getDataLinkHrefs, getLinksForMatches, getModuleLinkHrefs, getNewMatchesForLinks, getStylesheetPrefetchLinks, isHtmlLinkDescriptor, isPageLinkDescriptor, prefetchStyleLinks };\n", "/**\n * @remix-run/react v1.11.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n// This escapeHtml utility is based on https://github.com/zertosh/htmlescape\n// License: https://github.com/zertosh/htmlescape/blob/0527ca7156a524d256101bb310a9f970f63078ad/LICENSE\n\n// We've chosen to inline the utility here to reduce the number of npm dependencies we have,\n// slightly decrease the code size compared the original package and make it esm compatible.\n\nconst ESCAPE_LOOKUP = {\n  \"&\": \"\\\\u0026\",\n  \">\": \"\\\\u003e\",\n  \"<\": \"\\\\u003c\",\n  \"\\u2028\": \"\\\\u2028\",\n  \"\\u2029\": \"\\\\u2029\"\n};\nconst ESCAPE_REGEX = /[&><\\u2028\\u2029]/g;\nfunction escapeHtml(html) {\n  return html.replace(ESCAPE_REGEX, match => ESCAPE_LOOKUP[match]);\n}\nfunction createHtml(html) {\n  return {\n    __html: html\n  };\n}\n\nexport { createHtml, escapeHtml };\n", "/**\n * @remix-run/react v1.11.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n// TODO: keep data around on resubmission?\nconst IDLE_TRANSITION = {\n  state: \"idle\",\n  submission: undefined,\n  location: undefined,\n  type: \"idle\"\n};\nconst IDLE_FETCHER = {\n  state: \"idle\",\n  type: \"init\",\n  data: undefined,\n  submission: undefined\n};\n\nexport { IDLE_FETCHER, IDLE_TRANSITION };\n", "/**\n * @remix-run/react v1.11.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport { extends as _extends } from './_virtual/_rollupPluginBabelHelpers.js';\nimport * as React from 'react';\nimport { useHref, NavLink as NavLink$1, Link as Link$1, matchRoutes, useLocation, Await as Await$1, useNavigation, useAsyncError, useMatches as useMatches$1, useLoaderData as useLoaderData$1, useActionData as useActionData$1, useFetchers as useFetchers$1, useFetcher as useFetcher$1, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, useRouteError, isRouteErrorResponse } from 'react-router-dom';\nimport { RemixRootDefaultErrorBoundary, RemixCatchBoundary, V2_RemixRootDefaultErrorBoundary, RemixRootDefaultCatchBoundary } from './errorBoundaries.js';\nimport invariant from './invariant.js';\nimport { getLinksForMatches, isPageLinkDescriptor, getNewMatchesForLinks, getDataLinkHrefs, getModuleLinkHrefs, getStylesheetPrefetchLinks } from './links.js';\nimport { escapeHtml, createHtml } from './markup.js';\nimport { IDLE_TRANSITION, IDLE_FETCHER } from './transition.js';\n\nfunction useDataRouterContext() {\n  let context = React.useContext(UNSAFE_DataRouterContext);\n  invariant(context, \"You must render this element inside a <DataRouterContext.Provider> element\");\n  return context;\n}\nfunction useDataRouterStateContext() {\n  let context = React.useContext(UNSAFE_DataRouterStateContext);\n  invariant(context, \"You must render this element inside a <DataRouterStateContext.Provider> element\");\n  return context;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// RemixContext\n\nconst RemixContext = /*#__PURE__*/React.createContext(undefined);\nRemixContext.displayName = \"Remix\";\nfunction useRemixContext() {\n  let context = React.useContext(RemixContext);\n  invariant(context, \"You must render this element inside a <Remix> element\");\n  return context;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// RemixRoute\n\nfunction RemixRoute({\n  id\n}) {\n  let {\n    routeModules\n  } = useRemixContext();\n  invariant(routeModules, \"Cannot initialize 'routeModules'. This normally occurs when you have server code in your client modules.\\n\" + \"Check this link for more details:\\nhttps://remix.run/pages/gotchas#server-code-in-client-bundles\");\n  let {\n    default: Component\n  } = routeModules[id];\n  invariant(Component, `Route \"${id}\" has no component! Please go add a \\`default\\` export in the route module file.\\n` + \"If you were trying to navigate or submit to a resource route, use `<a>` instead of `<Link>` or `<Form reloadDocument>`.\");\n  return /*#__PURE__*/React.createElement(Component, null);\n}\nfunction RemixRouteError({\n  id\n}) {\n  let {\n    future,\n    routeModules\n  } = useRemixContext();\n\n  // This checks prevent cryptic error messages such as: 'Cannot read properties of undefined (reading 'root')'\n  invariant(routeModules, \"Cannot initialize 'routeModules'. This normally occurs when you have server code in your client modules.\\n\" + \"Check this link for more details:\\nhttps://remix.run/pages/gotchas#server-code-in-client-bundles\");\n  let error = useRouteError();\n  let {\n    CatchBoundary,\n    ErrorBoundary\n  } = routeModules[id];\n  if (future.v2_errorBoundary) {\n    // Provide defaults for the root route if they are not present\n    if (id === \"root\") {\n      ErrorBoundary || (ErrorBoundary = V2_RemixRootDefaultErrorBoundary);\n    }\n    if (ErrorBoundary) {\n      // TODO: Unsure if we can satisfy the typings here\n      // @ts-expect-error\n      return /*#__PURE__*/React.createElement(ErrorBoundary, null);\n    }\n    throw error;\n  }\n\n  // Provide defaults for the root route if they are not present\n  if (id === \"root\") {\n    CatchBoundary || (CatchBoundary = RemixRootDefaultCatchBoundary);\n    ErrorBoundary || (ErrorBoundary = RemixRootDefaultErrorBoundary);\n  }\n  if (isRouteErrorResponse(error)) {\n    let tError = error;\n    if ((tError === null || tError === void 0 ? void 0 : tError.error) instanceof Error && tError.status !== 404 && ErrorBoundary) {\n      // Internal framework-thrown ErrorResponses\n      return /*#__PURE__*/React.createElement(ErrorBoundary, {\n        error: tError.error\n      });\n    }\n    if (CatchBoundary) {\n      // User-thrown ErrorResponses\n      return /*#__PURE__*/React.createElement(RemixCatchBoundary, {\n        component: CatchBoundary,\n        catch: error\n      });\n    }\n  }\n  if (error instanceof Error && ErrorBoundary) {\n    // User- or framework-thrown Errors\n    return /*#__PURE__*/React.createElement(ErrorBoundary, {\n      error: error\n    });\n  }\n  throw error;\n}\n////////////////////////////////////////////////////////////////////////////////\n// Public API\n\n/**\n * Defines the prefetching behavior of the link:\n *\n * - \"intent\": Fetched when the user focuses or hovers the link\n * - \"render\": Fetched when the link is rendered\n * - \"none\": Never fetched\n */\n\nfunction usePrefetchBehavior(prefetch, theirElementProps) {\n  let [maybePrefetch, setMaybePrefetch] = React.useState(false);\n  let [shouldPrefetch, setShouldPrefetch] = React.useState(false);\n  let {\n    onFocus,\n    onBlur,\n    onMouseEnter,\n    onMouseLeave,\n    onTouchStart\n  } = theirElementProps;\n  React.useEffect(() => {\n    if (prefetch === \"render\") {\n      setShouldPrefetch(true);\n    }\n  }, [prefetch]);\n  let setIntent = () => {\n    if (prefetch === \"intent\") {\n      setMaybePrefetch(true);\n    }\n  };\n  let cancelIntent = () => {\n    if (prefetch === \"intent\") {\n      setMaybePrefetch(false);\n      setShouldPrefetch(false);\n    }\n  };\n  React.useEffect(() => {\n    if (maybePrefetch) {\n      let id = setTimeout(() => {\n        setShouldPrefetch(true);\n      }, 100);\n      return () => {\n        clearTimeout(id);\n      };\n    }\n  }, [maybePrefetch]);\n  return [shouldPrefetch, {\n    onFocus: composeEventHandlers(onFocus, setIntent),\n    onBlur: composeEventHandlers(onBlur, cancelIntent),\n    onMouseEnter: composeEventHandlers(onMouseEnter, setIntent),\n    onMouseLeave: composeEventHandlers(onMouseLeave, cancelIntent),\n    onTouchStart: composeEventHandlers(onTouchStart, setIntent)\n  }];\n}\n\n/**\n * A special kind of `<Link>` that knows whether or not it is \"active\".\n *\n * @see https://remix.run/components/nav-link\n */\nlet NavLink = /*#__PURE__*/React.forwardRef(({\n  to,\n  prefetch = \"none\",\n  ...props\n}, forwardedRef) => {\n  let href = useHref(to);\n  let [shouldPrefetch, prefetchHandlers] = usePrefetchBehavior(prefetch, props);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(NavLink$1, _extends({\n    ref: forwardedRef,\n    to: to\n  }, props, prefetchHandlers)), shouldPrefetch ? /*#__PURE__*/React.createElement(PrefetchPageLinks, {\n    page: href\n  }) : null);\n});\nNavLink.displayName = \"NavLink\";\n/**\n * This component renders an anchor tag and is the primary way the user will\n * navigate around your website.\n *\n * @see https://remix.run/components/link\n */\nlet Link = /*#__PURE__*/React.forwardRef(({\n  to,\n  prefetch = \"none\",\n  ...props\n}, forwardedRef) => {\n  let href = useHref(to);\n  let [shouldPrefetch, prefetchHandlers] = usePrefetchBehavior(prefetch, props);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Link$1, _extends({\n    ref: forwardedRef,\n    to: to\n  }, props, prefetchHandlers)), shouldPrefetch ? /*#__PURE__*/React.createElement(PrefetchPageLinks, {\n    page: href\n  }) : null);\n});\nLink.displayName = \"Link\";\nfunction composeEventHandlers(theirHandler, ourHandler) {\n  return event => {\n    theirHandler && theirHandler(event);\n    if (!event.defaultPrevented) {\n      ourHandler(event);\n    }\n  };\n}\n\n/**\n * Renders the `<link>` tags for the current routes.\n *\n * @see https://remix.run/components/links\n */\nfunction Links() {\n  let {\n    manifest,\n    routeModules\n  } = useRemixContext();\n  let {\n    matches\n  } = useDataRouterStateContext();\n  let links = React.useMemo(() => getLinksForMatches(matches, routeModules, manifest), [matches, routeModules, manifest]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, links.map(link => {\n    if (isPageLinkDescriptor(link)) {\n      return /*#__PURE__*/React.createElement(PrefetchPageLinks, _extends({\n        key: link.page\n      }, link));\n    }\n    let imageSrcSet = null;\n\n    // In React 17, <link imageSrcSet> and <link imageSizes> will warn\n    // because the DOM attributes aren't recognized, so users need to pass\n    // them in all lowercase to forward the attributes to the node without a\n    // warning. Normalize so that either property can be used in Remix.\n    if (\"useId\" in React) {\n      if (link.imagesrcset) {\n        link.imageSrcSet = imageSrcSet = link.imagesrcset;\n        delete link.imagesrcset;\n      }\n      if (link.imagesizes) {\n        link.imageSizes = link.imagesizes;\n        delete link.imagesizes;\n      }\n    } else {\n      if (link.imageSrcSet) {\n        link.imagesrcset = imageSrcSet = link.imageSrcSet;\n        delete link.imageSrcSet;\n      }\n      if (link.imageSizes) {\n        link.imagesizes = link.imageSizes;\n        delete link.imageSizes;\n      }\n    }\n    return /*#__PURE__*/React.createElement(\"link\", _extends({\n      key: link.rel + (link.href || \"\") + (imageSrcSet || \"\")\n    }, link));\n  }));\n}\n\n/**\n * This component renders all of the `<link rel=\"prefetch\">` and\n * `<link rel=\"modulepreload\"/>` tags for all the assets (data, modules, css) of\n * a given page.\n *\n * @param props\n * @param props.page\n * @see https://remix.run/components/prefetch-page-links\n */\nfunction PrefetchPageLinks({\n  page,\n  ...dataLinkProps\n}) {\n  let {\n    router\n  } = useDataRouterContext();\n  let matches = React.useMemo(() => matchRoutes(router.routes, page), [router.routes, page]);\n  if (!matches) {\n    console.warn(`Tried to prefetch ${page} but no routes matched.`);\n    return null;\n  }\n  return /*#__PURE__*/React.createElement(PrefetchPageLinksImpl, _extends({\n    page: page,\n    matches: matches\n  }, dataLinkProps));\n}\nfunction usePrefetchedStylesheets(matches) {\n  let {\n    manifest,\n    routeModules\n  } = useRemixContext();\n  let [styleLinks, setStyleLinks] = React.useState([]);\n  React.useEffect(() => {\n    let interrupted = false;\n    getStylesheetPrefetchLinks(matches, manifest, routeModules).then(links => {\n      if (!interrupted) setStyleLinks(links);\n    });\n    return () => {\n      interrupted = true;\n    };\n  }, [matches, manifest, routeModules]);\n  return styleLinks;\n}\nfunction PrefetchPageLinksImpl({\n  page,\n  matches: nextMatches,\n  ...linkProps\n}) {\n  let location = useLocation();\n  let {\n    manifest\n  } = useRemixContext();\n  let {\n    matches\n  } = useDataRouterStateContext();\n  let newMatchesForData = React.useMemo(() => getNewMatchesForLinks(page, nextMatches, matches, manifest, location, \"data\"), [page, nextMatches, matches, manifest, location]);\n  let newMatchesForAssets = React.useMemo(() => getNewMatchesForLinks(page, nextMatches, matches, manifest, location, \"assets\"), [page, nextMatches, matches, manifest, location]);\n  let dataHrefs = React.useMemo(() => getDataLinkHrefs(page, newMatchesForData, manifest), [newMatchesForData, page, manifest]);\n  let moduleHrefs = React.useMemo(() => getModuleLinkHrefs(newMatchesForAssets, manifest), [newMatchesForAssets, manifest]);\n\n  // needs to be a hook with async behavior because we need the modules, not\n  // just the manifest like the other links in here.\n  let styleLinks = usePrefetchedStylesheets(newMatchesForAssets);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, dataHrefs.map(href => /*#__PURE__*/React.createElement(\"link\", _extends({\n    key: href,\n    rel: \"prefetch\",\n    as: \"fetch\",\n    href: href\n  }, linkProps))), moduleHrefs.map(href => /*#__PURE__*/React.createElement(\"link\", _extends({\n    key: href,\n    rel: \"modulepreload\",\n    href: href\n  }, linkProps))), styleLinks.map(link =>\n  /*#__PURE__*/\n  // these don't spread `linkProps` because they are full link descriptors\n  // already with their own props\n  React.createElement(\"link\", _extends({\n    key: link.href\n  }, link))));\n}\n\n/**\n * Renders the `<title>` and `<meta>` tags for the current routes.\n *\n * @see https://remix.run/components/meta\n */\nfunction V1Meta() {\n  let {\n    routeModules\n  } = useRemixContext();\n  let {\n    matches,\n    loaderData\n  } = useDataRouterStateContext();\n  let location = useLocation();\n  let meta = {};\n  let parentsData = {};\n  for (let match of matches) {\n    let routeId = match.route.id;\n    let data = loaderData[routeId];\n    let params = match.params;\n    let routeModule = routeModules[routeId];\n    if (routeModule.meta) {\n      let routeMeta = typeof routeModule.meta === \"function\" ? routeModule.meta({\n        data,\n        parentsData,\n        params,\n        location,\n        matches: undefined\n      }) : routeModule.meta;\n      if (routeMeta && Array.isArray(routeMeta)) {\n        throw new Error(\"The route at \" + match.route.path + \" returns an array. This is only supported with the `v2_meta` future flag \" + \"in the Remix config. Either set the flag to `true` or update the route's \" + \"meta function to return an object.\" + \"\\n\\nTo reference the v1 meta function API, see https://remix.run/route/meta\"\n        // TODO: Add link to the docs once they are written\n        // + \"\\n\\nTo reference future flags and the v2 meta API, see https://remix.run/file-conventions/remix-config#future-v2-meta.\"\n        );\n      }\n\n      Object.assign(meta, routeMeta);\n    }\n    parentsData[routeId] = data;\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, null, Object.entries(meta).map(([name, value]) => {\n    if (!value) {\n      return null;\n    }\n    if ([\"charset\", \"charSet\"].includes(name)) {\n      return /*#__PURE__*/React.createElement(\"meta\", {\n        key: \"charset\",\n        charSet: value\n      });\n    }\n    if (name === \"title\") {\n      return /*#__PURE__*/React.createElement(\"title\", {\n        key: \"title\"\n      }, String(value));\n    }\n\n    // Open Graph tags use the `property` attribute, while other meta tags\n    // use `name`. See https://ogp.me/\n    //\n    // Namespaced attributes:\n    //  - https://ogp.me/#type_music\n    //  - https://ogp.me/#type_video\n    //  - https://ogp.me/#type_article\n    //  - https://ogp.me/#type_book\n    //  - https://ogp.me/#type_profile\n    //\n    // Facebook specific tags begin with `fb:` and also use the `property`\n    // attribute.\n    //\n    // Twitter specific tags begin with `twitter:` but they use `name`, so\n    // they are excluded.\n    let isOpenGraphTag = /^(og|music|video|article|book|profile|fb):.+$/.test(name);\n    return [value].flat().map(content => {\n      if (isOpenGraphTag) {\n        return /*#__PURE__*/React.createElement(\"meta\", {\n          property: name,\n          content: content,\n          key: name + content\n        });\n      }\n      if (typeof content === \"string\") {\n        return /*#__PURE__*/React.createElement(\"meta\", {\n          name: name,\n          content: content,\n          key: name + content\n        });\n      }\n      return /*#__PURE__*/React.createElement(\"meta\", _extends({\n        key: name + JSON.stringify(content)\n      }, content));\n    });\n  }));\n}\nfunction V2Meta() {\n  let {\n    routeModules\n  } = useRemixContext();\n  let {\n    matches,\n    loaderData\n  } = useDataRouterStateContext();\n  let location = useLocation();\n  let meta = [];\n  let leafMeta = null;\n  let parentsData = {};\n  let matchesWithMeta = matches.map(match => ({\n    ...match,\n    meta: []\n  }));\n  let index = -1;\n  for (let match of matches) {\n    index++;\n    let routeId = match.route.id;\n    let data = loaderData[routeId];\n    let params = match.params;\n    let routeModule = routeModules[routeId];\n    let routeMeta = [];\n    if (routeModule !== null && routeModule !== void 0 && routeModule.meta) {\n      routeMeta = typeof routeModule.meta === \"function\" ? routeModule.meta({\n        data,\n        parentsData,\n        params,\n        location,\n        matches: matchesWithMeta\n      }) : routeModule.meta;\n    } else if (leafMeta) {\n      // We only assign the route's meta to the nearest leaf if there is no meta\n      // export in the route. The meta function may return a falsey value which\n      // is effectively the same as an empty array.\n      routeMeta = leafMeta;\n    }\n    routeMeta = routeMeta || [];\n    if (!Array.isArray(routeMeta)) {\n      throw new Error(\"The `v2_meta` API is enabled in the Remix config, but the route at \" + match.route.path + \" returns an invalid value. In v2, all route meta functions must \" + \"return an array of meta objects.\" +\n      // TODO: Add link to the docs once they are written\n      // \"\\n\\nTo reference future flags and the v2 meta API, see https://remix.run/file-conventions/remix-config#future-v2-meta.\" +\n      \"\\n\\nTo reference the v1 meta function API, see https://remix.run/route/meta\");\n    }\n    matchesWithMeta[index].meta = routeMeta;\n    meta = routeMeta;\n    parentsData[routeId] = data;\n    leafMeta = meta;\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, null, meta.flat().map(metaProps => {\n    if (!metaProps) {\n      return null;\n    }\n    if (\"title\" in metaProps) {\n      return /*#__PURE__*/React.createElement(\"title\", {\n        key: \"title\"\n      }, String(metaProps.title));\n    }\n    if (\"charSet\" in metaProps || \"charset\" in metaProps) {\n      // TODO: We normalize this for the user in v1, but should we continue\n      // to do that? Seems like a nice convenience IMO.\n      return /*#__PURE__*/React.createElement(\"meta\", {\n        key: \"charset\",\n        charSet: metaProps.charSet || metaProps.charset\n      });\n    }\n    return /*#__PURE__*/React.createElement(\"meta\", _extends({\n      key: JSON.stringify(metaProps)\n    }, metaProps));\n  }));\n}\nfunction Meta() {\n  let {\n    future\n  } = useRemixContext();\n  return future !== null && future !== void 0 && future.v2_meta ? /*#__PURE__*/React.createElement(V2Meta, null) : /*#__PURE__*/React.createElement(V1Meta, null);\n}\nfunction Await(props) {\n  return /*#__PURE__*/React.createElement(Await$1, props);\n}\n\n/**\n * Tracks whether Remix has finished hydrating or not, so scripts can be skipped\n * during client-side updates.\n */\nlet isHydrated = false;\n/**\n * Renders the `<script>` tags needed for the initial render. Bundles for\n * additional routes are loaded later as needed.\n *\n * @param props Additional properties to add to each script tag that is rendered.\n * In addition to scripts, \\<link rel=\"modulepreload\"> tags receive the crossOrigin\n * property if provided.\n *\n * @see https://remix.run/components/scripts\n */\nfunction Scripts(props) {\n  let {\n    manifest,\n    serverHandoffString,\n    abortDelay\n  } = useRemixContext();\n  let {\n    router,\n    static: isStatic,\n    staticContext\n  } = useDataRouterContext();\n  let {\n    matches\n  } = useDataRouterStateContext();\n  let navigation = useNavigation();\n  React.useEffect(() => {\n    isHydrated = true;\n  }, []);\n  let deferredScripts = [];\n  let initialScripts = React.useMemo(() => {\n    let contextScript = staticContext ? `window.__remixContext = ${serverHandoffString};` : \" \";\n    let activeDeferreds = staticContext === null || staticContext === void 0 ? void 0 : staticContext.activeDeferreds;\n    // This sets up the __remixContext with utility functions used by the\n    // deferred scripts.\n    // - __remixContext.p is a function that takes a resolved value or error and returns a promise.\n    //   This is used for transmitting pre-resolved promises from the server to the client.\n    // - __remixContext.n is a function that takes a routeID and key to returns a promise for later\n    //   resolution by the subsequently streamed chunks.\n    // - __remixContext.r is a function that takes a routeID, key and value or error and resolves\n    //   the promise created by __remixContext.n.\n    // - __remixContext.t is a a map or routeId to keys to an object containing `e` and `r` methods\n    //   to resolve or reject the promise created by __remixContext.n.\n    // - __remixContext.a is the active number of deferred scripts that should be rendered to match\n    //   the SSR tree for hydration on the client.\n    contextScript += !activeDeferreds ? \"\" : [\"__remixContext.p = function(v,e,p,x) {\", \"  if (typeof e !== 'undefined') {\", \"    x=new Error(e.message);\", process.env.NODE_ENV === \"development\" ? `x.stack=e.stack;` : \"\", \"    p=Promise.reject(x);\", \"  } else {\", \"    p=Promise.resolve(v);\", \"  }\", \"  return p;\", \"};\", \"__remixContext.n = function(i,k) {\", \"  __remixContext.t = __remixContext.t || {};\", \"  __remixContext.t[i] = __remixContext.t[i] || {};\", \"  let p = new Promise((r, e) => {__remixContext.t[i][k] = {r:(v)=>{r(v);},e:(v)=>{e(v);}};});\", typeof abortDelay === \"number\" ? `setTimeout(() => {if(typeof p._error !== \"undefined\" || typeof p._data !== \"undefined\"){return;} __remixContext.t[i][k].e(new Error(\"Server timeout.\"))}, ${abortDelay});` : \"\", \"  return p;\", \"};\", \"__remixContext.r = function(i,k,v,e,p,x) {\", \"  p = __remixContext.t[i][k];\", \"  if (typeof e !== 'undefined') {\", \"    x=new Error(e.message);\", process.env.NODE_ENV === \"development\" ? `x.stack=e.stack;` : \"\", \"    p.e(x);\", \"  } else {\", \"    p.r(v);\", \"  }\", \"};\"].join(\"\\n\") + Object.entries(activeDeferreds).map(([routeId, deferredData]) => {\n      let pendingKeys = new Set(deferredData.pendingKeys);\n      let promiseKeyValues = deferredData.deferredKeys.map(key => {\n        if (pendingKeys.has(key)) {\n          deferredScripts.push( /*#__PURE__*/React.createElement(DeferredHydrationScript, {\n            key: `${routeId} | ${key}`,\n            deferredData: deferredData,\n            routeId: routeId,\n            dataKey: key\n          }));\n          return `${JSON.stringify(key)}:__remixContext.n(${JSON.stringify(routeId)}, ${JSON.stringify(key)})`;\n        } else {\n          let trackedPromise = deferredData.data[key];\n          if (typeof trackedPromise._error !== \"undefined\") {\n            let toSerialize = {\n              message: trackedPromise._error.message,\n              stack: undefined\n            };\n            if (process.env.NODE_ENV === \"development\") {\n              toSerialize.stack = trackedPromise._error.stack;\n            }\n            return `${JSON.stringify(key)}:__remixContext.p(!1, ${escapeHtml(JSON.stringify(toSerialize))})`;\n          } else {\n            if (typeof trackedPromise._data === \"undefined\") {\n              throw new Error(`The deferred data for ${key} was not resolved, did you forget to return data from a deferred promise?`);\n            }\n            return `${JSON.stringify(key)}:__remixContext.p(${escapeHtml(JSON.stringify(trackedPromise._data))})`;\n          }\n        }\n      }).join(\",\\n\");\n      return `Object.assign(__remixContext.state.loaderData[${JSON.stringify(routeId)}], {${promiseKeyValues}});`;\n    }).join(\"\\n\") + (deferredScripts.length > 0 ? `__remixContext.a=${deferredScripts.length};` : \"\");\n    let routeModulesScript = !isStatic ? \" \" : `${matches.map((match, index) => `import ${JSON.stringify(manifest.url)};\nimport * as route${index} from ${JSON.stringify(manifest.routes[match.route.id].module)};`).join(\"\\n\")}\nwindow.__remixRouteModules = {${matches.map((match, index) => `${JSON.stringify(match.route.id)}:route${index}`).join(\",\")}};\n\nimport(${JSON.stringify(manifest.entry.module)});`;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"script\", _extends({}, props, {\n      suppressHydrationWarning: true,\n      dangerouslySetInnerHTML: createHtml(contextScript),\n      type: undefined\n    })), /*#__PURE__*/React.createElement(\"script\", _extends({}, props, {\n      suppressHydrationWarning: true,\n      dangerouslySetInnerHTML: createHtml(routeModulesScript),\n      type: \"module\",\n      async: true\n    })));\n    // disabled deps array because we are purposefully only rendering this once\n    // for hydration, after that we want to just continue rendering the initial\n    // scripts as they were when the page first loaded\n    // eslint-disable-next-line\n  }, []);\n  if (!isStatic && typeof __remixContext === \"object\" && __remixContext.a) {\n    for (let i = 0; i < __remixContext.a; i++) {\n      deferredScripts.push( /*#__PURE__*/React.createElement(DeferredHydrationScript, {\n        key: i\n      }));\n    }\n  }\n\n  // avoid waterfall when importing the next route module\n  let nextMatches = React.useMemo(() => {\n    if (navigation.location) {\n      // FIXME: can probably use transitionManager `nextMatches`\n      let matches = matchRoutes(router.routes, navigation.location);\n      invariant(matches, `No routes match path \"${navigation.location.pathname}\"`);\n      return matches;\n    }\n    return [];\n  }, [navigation.location, router.routes]);\n  let routePreloads = matches.concat(nextMatches).map(match => {\n    let route = manifest.routes[match.route.id];\n    return (route.imports || []).concat([route.module]);\n  }).flat(1);\n  let preloads = manifest.entry.imports.concat(routePreloads);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"link\", {\n    rel: \"modulepreload\",\n    href: manifest.url,\n    crossOrigin: props.crossOrigin\n  }), /*#__PURE__*/React.createElement(\"link\", {\n    rel: \"modulepreload\",\n    href: manifest.entry.module,\n    crossOrigin: props.crossOrigin\n  }), dedupe(preloads).map(path => /*#__PURE__*/React.createElement(\"link\", {\n    key: path,\n    rel: \"modulepreload\",\n    href: path,\n    crossOrigin: props.crossOrigin\n  })), !isHydrated && initialScripts, !isHydrated && deferredScripts);\n}\nfunction DeferredHydrationScript({\n  dataKey,\n  deferredData,\n  routeId\n}) {\n  if (typeof document === \"undefined\" && deferredData && dataKey && routeId) {\n    invariant(deferredData.pendingKeys.includes(dataKey), `Deferred data for route ${routeId} with key ${dataKey} was not pending but tried to render a script for it.`);\n  }\n  return /*#__PURE__*/React.createElement(React.Suspense, {\n    fallback:\n    // This makes absolutely no sense. The server renders null as a fallback,\n    // but when hydrating, we need to render a script tag to avoid a hydration issue.\n    // To reproduce a hydration mismatch, just render null as a fallback.\n    typeof document === \"undefined\" && deferredData && dataKey && routeId ? null : /*#__PURE__*/React.createElement(\"script\", {\n      async: true,\n      suppressHydrationWarning: true,\n      dangerouslySetInnerHTML: {\n        __html: \" \"\n      }\n    })\n  }, typeof document === \"undefined\" && deferredData && dataKey && routeId ? /*#__PURE__*/React.createElement(Await, {\n    resolve: deferredData.data[dataKey],\n    errorElement: /*#__PURE__*/React.createElement(ErrorDeferredHydrationScript, {\n      dataKey: dataKey,\n      routeId: routeId\n    }),\n    children: data => /*#__PURE__*/React.createElement(\"script\", {\n      async: true,\n      suppressHydrationWarning: true,\n      dangerouslySetInnerHTML: {\n        __html: `__remixContext.r(${JSON.stringify(routeId)}, ${JSON.stringify(dataKey)}, ${escapeHtml(JSON.stringify(data))});`\n      }\n    })\n  }) : /*#__PURE__*/React.createElement(\"script\", {\n    async: true,\n    suppressHydrationWarning: true,\n    dangerouslySetInnerHTML: {\n      __html: \" \"\n    }\n  }));\n}\nfunction ErrorDeferredHydrationScript({\n  dataKey,\n  routeId\n}) {\n  let error = useAsyncError();\n  let toSerialize = {\n    message: error.message,\n    stack: undefined\n  };\n  if (process.env.NODE_ENV === \"development\") {\n    toSerialize.stack = error.stack;\n  }\n  return /*#__PURE__*/React.createElement(\"script\", {\n    suppressHydrationWarning: true,\n    dangerouslySetInnerHTML: {\n      __html: `__remixContext.r(${JSON.stringify(routeId)}, ${JSON.stringify(dataKey)}, !1, ${escapeHtml(JSON.stringify(toSerialize))});`\n    }\n  });\n}\nfunction dedupe(array) {\n  return [...new Set(array)];\n}\n\n// TODO: Can this be re-exported from RR?\n\nfunction useMatches() {\n  let {\n    routeModules\n  } = useRemixContext();\n  let matches = useMatches$1();\n  return matches.map(match => {\n    let remixMatch = {\n      id: match.id,\n      pathname: match.pathname,\n      params: match.params,\n      data: match.data,\n      // Need to grab handle here since we don't have it at client-side route\n      // creation time\n      handle: routeModules[match.id].handle\n    };\n    return remixMatch;\n  });\n}\n\n/**\n * Returns the JSON parsed data from the current route's `loader`.\n *\n * @see https://remix.run/hooks/use-loader-data\n */\nfunction useLoaderData() {\n  return useLoaderData$1();\n}\n\n/**\n * Returns the JSON parsed data from the current route's `action`.\n *\n * @see https://remix.run/hooks/use-action-data\n */\nfunction useActionData() {\n  return useActionData$1();\n}\n\n/**\n * Returns everything you need to know about a page transition to build pending\n * navigation indicators and optimistic UI on data mutations.\n *\n * @see https://remix.run/hooks/use-transition\n */\nfunction useTransition() {\n  let navigation = useNavigation();\n  return React.useMemo(() => convertNavigationToTransition(navigation), [navigation]);\n}\nfunction convertNavigationToTransition(navigation) {\n  let {\n    location,\n    state,\n    formMethod,\n    formAction,\n    formEncType,\n    formData\n  } = navigation;\n  if (!location) {\n    return IDLE_TRANSITION;\n  }\n  let isActionSubmission = formMethod != null && [\"POST\", \"PUT\", \"PATCH\", \"DELETE\"].includes(formMethod.toUpperCase());\n  if (state === \"submitting\" && formMethod && formAction && formEncType && formData) {\n    if (isActionSubmission) {\n      // Actively submitting to an action\n      let transition = {\n        location,\n        state,\n        submission: {\n          method: formMethod.toUpperCase(),\n          action: formAction,\n          encType: formEncType,\n          formData: formData,\n          key: \"\"\n        },\n        type: \"actionSubmission\"\n      };\n      return transition;\n    } else {\n      // @remix-run/router doesn't mark loader submissions as state: \"submitting\"\n      invariant(false, \"Encountered an unexpected navigation scenario in useTransition()\");\n    }\n  }\n  if (state === \"loading\") {\n    let {\n      _isRedirect,\n      _isFetchActionRedirect\n    } = location.state || {};\n    if (formMethod && formAction && formEncType && formData) {\n      if (!_isRedirect) {\n        if (isActionSubmission) {\n          // We're reloading the same location after an action submission\n          let transition = {\n            location,\n            state,\n            submission: {\n              method: formMethod.toUpperCase(),\n              action: formAction,\n              encType: formEncType,\n              formData: formData,\n              key: \"\"\n            },\n            type: \"actionReload\"\n          };\n          return transition;\n        } else {\n          // The new router fixes a bug in useTransition where the submission\n          // \"action\" represents the request URL not the state of the <form> in\n          // the DOM.  Back-port it here to maintain behavior, but useNavigation\n          // will fix this bug.\n          let url = new URL(formAction, window.location.origin);\n\n          // This typing override should be safe since this is only running for\n          // GET submissions and over in @remix-run/router we have an invariant\n          // if you have any non-string values in your FormData when we attempt\n          // to convert them to URLSearchParams\n          url.search = new URLSearchParams(formData.entries()).toString();\n\n          // Actively \"submitting\" to a loader\n          let transition = {\n            location,\n            state: \"submitting\",\n            submission: {\n              method: formMethod.toUpperCase(),\n              action: url.pathname + url.search,\n              encType: formEncType,\n              formData: formData,\n              key: \"\"\n            },\n            type: \"loaderSubmission\"\n          };\n          return transition;\n        }\n      } else {\n        // Redirecting after a submission\n        if (isActionSubmission) {\n          let transition = {\n            location,\n            state,\n            submission: {\n              method: formMethod.toUpperCase(),\n              action: formAction,\n              encType: formEncType,\n              formData: formData,\n              key: \"\"\n            },\n            type: \"actionRedirect\"\n          };\n          return transition;\n        } else {\n          let transition = {\n            location,\n            state,\n            submission: {\n              method: formMethod.toUpperCase(),\n              action: formAction,\n              encType: formEncType,\n              formData: formData,\n              key: \"\"\n            },\n            type: \"loaderSubmissionRedirect\"\n          };\n          return transition;\n        }\n      }\n    } else if (_isRedirect) {\n      if (_isFetchActionRedirect) {\n        let transition = {\n          location,\n          state,\n          submission: undefined,\n          type: \"fetchActionRedirect\"\n        };\n        return transition;\n      } else {\n        let transition = {\n          location,\n          state,\n          submission: undefined,\n          type: \"normalRedirect\"\n        };\n        return transition;\n      }\n    }\n  }\n\n  // If no scenarios above match, then it's a normal load!\n  let transition = {\n    location,\n    state: \"loading\",\n    submission: undefined,\n    type: \"normalLoad\"\n  };\n  return transition;\n}\n\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n *\n * @see https://remix.run/api/remix#usefetchers\n */\nfunction useFetchers() {\n  let fetchers = useFetchers$1();\n  return fetchers.map(f => convertRouterFetcherToRemixFetcher({\n    state: f.state,\n    data: f.data,\n    formMethod: f.formMethod,\n    formAction: f.formAction,\n    formData: f.formData,\n    formEncType: f.formEncType,\n    \" _hasFetcherDoneAnything \": f[\" _hasFetcherDoneAnything \"]\n  }));\n}\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n *\n * @see https://remix.run/hooks/use-fetcher\n */\nfunction useFetcher() {\n  let fetcherRR = useFetcher$1();\n  return React.useMemo(() => {\n    let remixFetcher = convertRouterFetcherToRemixFetcher({\n      state: fetcherRR.state,\n      data: fetcherRR.data,\n      formMethod: fetcherRR.formMethod,\n      formAction: fetcherRR.formAction,\n      formData: fetcherRR.formData,\n      formEncType: fetcherRR.formEncType,\n      \" _hasFetcherDoneAnything \": fetcherRR[\" _hasFetcherDoneAnything \"]\n    });\n    return {\n      ...remixFetcher,\n      load: fetcherRR.load,\n      submit: fetcherRR.submit,\n      Form: fetcherRR.Form\n    };\n  }, [fetcherRR]);\n}\nfunction convertRouterFetcherToRemixFetcher(fetcherRR) {\n  let {\n    state,\n    formMethod,\n    formAction,\n    formEncType,\n    formData,\n    data\n  } = fetcherRR;\n  let isActionSubmission = formMethod != null && [\"POST\", \"PUT\", \"PATCH\", \"DELETE\"].includes(formMethod.toUpperCase());\n  if (state === \"idle\") {\n    if (fetcherRR[\" _hasFetcherDoneAnything \"] === true) {\n      let fetcher = {\n        state: \"idle\",\n        type: \"done\",\n        submission: undefined,\n        data\n      };\n      return fetcher;\n    } else {\n      let fetcher = IDLE_FETCHER;\n      return fetcher;\n    }\n  }\n  if (state === \"submitting\" && formMethod && formAction && formEncType && formData) {\n    if (isActionSubmission) {\n      // Actively submitting to an action\n      let fetcher = {\n        state,\n        type: \"actionSubmission\",\n        formMethod: formMethod.toUpperCase(),\n        formAction: formAction,\n        formEncType: formEncType,\n        formData: formData,\n        submission: {\n          method: formMethod.toUpperCase(),\n          action: formAction,\n          encType: formEncType,\n          formData: formData,\n          key: \"\"\n        },\n        data\n      };\n      return fetcher;\n    } else {\n      // @remix-run/router doesn't mark loader submissions as state: \"submitting\"\n      invariant(false, \"Encountered an unexpected fetcher scenario in useFetcher()\");\n    }\n  }\n  if (state === \"loading\") {\n    if (formMethod && formAction && formEncType && formData) {\n      if (isActionSubmission) {\n        if (data) {\n          // In a loading state but we have data - must be an actionReload\n          let fetcher = {\n            state,\n            type: \"actionReload\",\n            formMethod: formMethod.toUpperCase(),\n            formAction: formAction,\n            formEncType: formEncType,\n            formData: formData,\n            submission: {\n              method: formMethod.toUpperCase(),\n              action: formAction,\n              encType: formEncType,\n              formData: formData,\n              key: \"\"\n            },\n            data\n          };\n          return fetcher;\n        } else {\n          let fetcher = {\n            state,\n            type: \"actionRedirect\",\n            formMethod: formMethod.toUpperCase(),\n            formAction: formAction,\n            formEncType: formEncType,\n            formData: formData,\n            submission: {\n              method: formMethod.toUpperCase(),\n              action: formAction,\n              encType: formEncType,\n              formData: formData,\n              key: \"\"\n            },\n            data: undefined\n          };\n          return fetcher;\n        }\n      } else {\n        // The new router fixes a bug in useTransition where the submission\n        // \"action\" represents the request URL not the state of the <form> in\n        // the DOM.  Back-port it here to maintain behavior, but useNavigation\n        // will fix this bug.\n        let url = new URL(formAction, window.location.origin);\n\n        // This typing override should be safe since this is only running for\n        // GET submissions and over in @remix-run/router we have an invariant\n        // if you have any non-string values in your FormData when we attempt\n        // to convert them to URLSearchParams\n        url.search = new URLSearchParams(formData.entries()).toString();\n\n        // Actively \"submitting\" to a loader\n        let fetcher = {\n          state: \"submitting\",\n          type: \"loaderSubmission\",\n          formMethod: formMethod.toUpperCase(),\n          formAction: formAction,\n          formEncType: formEncType,\n          formData: formData,\n          submission: {\n            method: formMethod.toUpperCase(),\n            action: url.pathname + url.search,\n            encType: formEncType,\n            formData: formData,\n            key: \"\"\n          },\n          data\n        };\n        return fetcher;\n      }\n    }\n  }\n\n  // If all else fails, it's a normal load!\n  let fetcher = {\n    state: \"loading\",\n    type: \"normalLoad\",\n    submission: undefined,\n    data\n  };\n  return fetcher;\n}\n\n// Dead Code Elimination magic for production builds.\n// This way devs don't have to worry about doing the NODE_ENV check themselves.\n// If running an un-bundled server outside of `remix dev` you will still need\n// to set the REMIX_DEV_SERVER_WS_PORT manually.\nconst LiveReload = process.env.NODE_ENV !== \"development\" ? () => null : function LiveReload({\n  port = Number(process.env.REMIX_DEV_SERVER_WS_PORT || 8002),\n  nonce = undefined\n}) {\n  let js = String.raw;\n  return /*#__PURE__*/React.createElement(\"script\", {\n    nonce: nonce,\n    suppressHydrationWarning: true,\n    dangerouslySetInnerHTML: {\n      __html: js`\n                function remixLiveReloadConnect(config) {\n                  let protocol = location.protocol === \"https:\" ? \"wss:\" : \"ws:\";\n                  let host = location.hostname;\n                  let socketPath = protocol + \"//\" + host + \":\" + ${String(port)} + \"/socket\";\n                  let ws = new WebSocket(socketPath);\n                  ws.onmessage = (message) => {\n                    let event = JSON.parse(message.data);\n                    if (event.type === \"LOG\") {\n                      console.log(event.message);\n                    }\n                    if (event.type === \"RELOAD\") {\n                      console.log(\"\uD83D\uDCBF Reloading window ...\");\n                      window.location.reload();\n                    }\n                  };\n                  ws.onopen = () => {\n                    if (config && typeof config.onOpen === \"function\") {\n                      config.onOpen();\n                    }\n                  };\n                  ws.onclose = (event) => {\n                    if (event.code === 1006) {\n                      console.log(\"Remix dev asset server web socket closed. Reconnecting...\");\n                      setTimeout(\n                        () =>\n                          remixLiveReloadConnect({\n                            onOpen: () => window.location.reload(),\n                          }),\n                        1000\n                      );\n                    }\n                  };\n                  ws.onerror = (error) => {\n                    console.log(\"Remix dev asset server web socket error:\");\n                    console.error(error);\n                  };\n                }\n                remixLiveReloadConnect();\n              `\n    }\n  });\n};\n\nexport { Await, Link, Links, LiveReload, Meta, NavLink, PrefetchPageLinks, RemixContext, RemixRoute, RemixRouteError, Scripts, composeEventHandlers, useActionData, useFetcher, useFetchers, useLoaderData, useMatches, useTransition };\n", "/**\n * @remix-run/react v1.11.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport { ErrorResponse } from '@remix-run/router';\n\nfunction deserializeErrors(errors) {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in remix-server-runtime/errors.ts :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponse(val.status, val.statusText, val.data, val.internal === true);\n    } else if (val && val.__type === \"Error\") {\n      let error = new Error(val.message);\n      error.stack = val.stack;\n      serialized[key] = error;\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\n\nexport { deserializeErrors };\n", "/**\n * @remix-run/react v1.11.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport { AbortedDeferredError, UNSAFE_DeferredData } from '@remix-run/router';\n\nfunction isCatchResponse(response) {\n  return response instanceof Response && response.headers.get(\"X-Remix-Catch\") != null;\n}\nfunction isErrorResponse(response) {\n  return response instanceof Response && response.headers.get(\"X-Remix-Error\") != null;\n}\nfunction isRedirectResponse(response) {\n  return response instanceof Response && response.headers.get(\"X-Remix-Redirect\") != null;\n}\nfunction isDeferredResponse(response) {\n  var _response$headers$get;\n  return response instanceof Response && !!((_response$headers$get = response.headers.get(\"Content-Type\")) !== null && _response$headers$get !== void 0 && _response$headers$get.match(/text\\/remix-deferred/));\n}\nasync function fetchData(request, routeId) {\n  let url = new URL(request.url);\n  url.searchParams.set(\"_data\", routeId);\n  let init = {\n    signal: request.signal\n  };\n  if (request.method !== \"GET\") {\n    init.method = request.method;\n    let contentType = request.headers.get(\"Content-Type\");\n    init.body =\n    // Check between word boundaries instead of startsWith() due to the last\n    // paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type\n    contentType && /\\bapplication\\/x-www-form-urlencoded\\b/.test(contentType) ? new URLSearchParams(await request.text()) : await request.formData();\n  }\n  let response = await fetch(url.href, init);\n  if (isErrorResponse(response)) {\n    let data = await response.json();\n    let error = new Error(data.message);\n    error.stack = data.stack;\n    return error;\n  }\n  return response;\n}\nconst DEFERRED_VALUE_PLACEHOLDER_PREFIX = \"__deferred_promise:\";\nasync function parseDeferredReadableStream(stream) {\n  if (!stream) {\n    throw new Error(\"parseDeferredReadableStream requires stream argument\");\n  }\n  let deferredData;\n  let deferredResolvers = {};\n  try {\n    let sectionReader = readStreamSections(stream);\n\n    // Read the first section to get the critical data\n    let initialSectionResult = await sectionReader.next();\n    let initialSection = initialSectionResult.value;\n    if (!initialSection) throw new Error(\"no critical data\");\n    let criticalData = JSON.parse(initialSection);\n\n    // Setup deferred data and resolvers for later based on the critical data\n    if (typeof criticalData === \"object\" && criticalData !== null) {\n      for (let [eventKey, value] of Object.entries(criticalData)) {\n        if (typeof value !== \"string\" || !value.startsWith(DEFERRED_VALUE_PLACEHOLDER_PREFIX)) {\n          continue;\n        }\n        deferredData = deferredData || {};\n        deferredData[eventKey] = new Promise((resolve, reject) => {\n          deferredResolvers[eventKey] = {\n            resolve: value => {\n              resolve(value);\n              delete deferredResolvers[eventKey];\n            },\n            reject: error => {\n              reject(error);\n              delete deferredResolvers[eventKey];\n            }\n          };\n        });\n      }\n    }\n\n    // Read the rest of the stream and resolve deferred promises\n    (async () => {\n      try {\n        for await (let section of sectionReader) {\n          // Determine event type and data\n          let [event, ...sectionDataStrings] = section.split(\":\");\n          let sectionDataString = sectionDataStrings.join(\":\");\n          let data = JSON.parse(sectionDataString);\n          if (event === \"data\") {\n            for (let [key, value] of Object.entries(data)) {\n              if (deferredResolvers[key]) {\n                deferredResolvers[key].resolve(value);\n              }\n            }\n          } else if (event === \"error\") {\n            for (let [key, value] of Object.entries(data)) {\n              let err = new Error(value.message);\n              err.stack = value.stack;\n              if (deferredResolvers[key]) {\n                deferredResolvers[key].reject(err);\n              }\n            }\n          }\n        }\n        for (let [key, resolver] of Object.entries(deferredResolvers)) {\n          resolver.reject(new AbortedDeferredError(`Deferred ${key} will never resolved`));\n        }\n      } catch (error) {\n        // Reject any existing deferred promises if something blows up\n        for (let resolver of Object.values(deferredResolvers)) {\n          resolver.reject(error);\n        }\n      }\n    })();\n    return new UNSAFE_DeferredData({\n      ...criticalData,\n      ...deferredData\n    });\n  } catch (error) {\n    for (let resolver of Object.values(deferredResolvers)) {\n      resolver.reject(error);\n    }\n    throw error;\n  }\n}\nasync function* readStreamSections(stream) {\n  let reader = stream.getReader();\n  let buffer = [];\n  let sections = [];\n  let closed = false;\n  let encoder = new TextEncoder();\n  let decoder = new TextDecoder();\n  let readStreamSection = async () => {\n    if (sections.length > 0) return sections.shift();\n\n    // Read from the stream until we have at least one complete section to process\n    while (!closed && sections.length === 0) {\n      let chunk = await reader.read();\n      if (chunk.done) {\n        closed = true;\n        break;\n      }\n      // Buffer the raw chunks\n      buffer.push(chunk.value);\n      try {\n        // Attempt to split off a section from the buffer\n        let bufferedString = decoder.decode(mergeArrays(...buffer));\n        let splitSections = bufferedString.split(\"\\n\\n\");\n        if (splitSections.length >= 2) {\n          // We have a complete section, so add it to the sections array\n          sections.push(...splitSections.slice(0, -1));\n          // Remove the section from the buffer and store the rest for future processing\n          buffer = [encoder.encode(splitSections.slice(-1).join(\"\\n\\n\"))];\n        }\n\n        // If we successfully parsed at least one section, break out of reading the stream\n        // to allow upstream processing of the processable sections\n        if (sections.length > 0) {\n          break;\n        }\n      } catch {\n        // If we failed to parse the buffer it was because we failed to decode the stream\n        // because we are missing bytes that we haven't yet received, so continue reading\n        // from the stream until we have a complete section\n        continue;\n      }\n    }\n\n    // If we have a complete section, return it\n    if (sections.length > 0) {\n      return sections.shift();\n    }\n\n    // If we have no complete section, but we have no more chunks to process,\n    // split those sections and clear out the buffer as there is no more data\n    // to process. If this errors, let it bubble up as the stream ended\n    // without valid data\n    if (buffer.length > 0) {\n      let bufferedString = decoder.decode(mergeArrays(...buffer));\n      sections = bufferedString.split(\"\\n\\n\").filter(s => s);\n      buffer = [];\n    }\n\n    // Return any remaining sections that have been processed\n    return sections.shift();\n  };\n  let section = await readStreamSection();\n  while (section) {\n    yield section;\n    section = await readStreamSection();\n  }\n}\nfunction mergeArrays(...arrays) {\n  let out = new Uint8Array(arrays.reduce((total, arr) => total + arr.length, 0));\n  let offset = 0;\n  for (let arr of arrays) {\n    out.set(arr, offset);\n    offset += arr.length;\n  }\n  return out;\n}\n\nexport { fetchData, isCatchResponse, isDeferredResponse, isErrorResponse, isRedirectResponse, parseDeferredReadableStream };\n", "/**\n * @remix-run/react v1.11.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport { redirect } from 'react-router-dom';\nimport { loadRouteModule } from './routeModules.js';\nimport { fetchData, isRedirectResponse, isCatchResponse, isDeferredResponse, parseDeferredReadableStream } from './data.js';\nimport { prefetchStyleLinks } from './links.js';\nimport invariant from './invariant.js';\nimport { RemixRoute, RemixRouteError } from './components.js';\n\nfunction createServerRoutes(manifest, routeModules, future, parentId) {\n  return Object.values(manifest).filter(route => route.parentId === parentId).map(route => {\n    let hasErrorBoundary = future.v2_errorBoundary === true ? route.id === \"root\" || route.hasErrorBoundary : route.id === \"root\" || route.hasCatchBoundary || route.hasErrorBoundary;\n    let dataRoute = {\n      caseSensitive: route.caseSensitive,\n      element: /*#__PURE__*/React.createElement(RemixRoute, {\n        id: route.id\n      }),\n      errorElement: hasErrorBoundary ? /*#__PURE__*/React.createElement(RemixRouteError, {\n        id: route.id\n      }) : undefined,\n      id: route.id,\n      index: route.index,\n      path: route.path,\n      handle: routeModules[route.id].handle\n      // Note: we don't need loader/action/shouldRevalidate on these routes\n      // since they're for a static render\n    };\n\n    let children = createServerRoutes(manifest, routeModules, future, route.id);\n    if (children.length > 0) dataRoute.children = children;\n    return dataRoute;\n  });\n}\nfunction createClientRoutes(manifest, routeModulesCache, future, parentId) {\n  return Object.values(manifest).filter(entryRoute => entryRoute.parentId === parentId).map(route => {\n    let hasErrorBoundary = future.v2_errorBoundary === true ? route.id === \"root\" || route.hasErrorBoundary : route.id === \"root\" || route.hasCatchBoundary || route.hasErrorBoundary;\n    let dataRoute = {\n      caseSensitive: route.caseSensitive,\n      element: /*#__PURE__*/React.createElement(RemixRoute, {\n        id: route.id\n      }),\n      errorElement: hasErrorBoundary ? /*#__PURE__*/React.createElement(RemixRouteError, {\n        id: route.id\n      }) : undefined,\n      id: route.id,\n      index: route.index,\n      path: route.path,\n      // handle gets added in via useMatches since we aren't guaranteed to\n      // have the route module available here\n      handle: undefined,\n      loader: createDataFunction(route, routeModulesCache, false),\n      action: createDataFunction(route, routeModulesCache, true),\n      shouldRevalidate: createShouldRevalidate(route, routeModulesCache)\n    };\n    let children = createClientRoutes(manifest, routeModulesCache, future, route.id);\n    if (children.length > 0) dataRoute.children = children;\n    return dataRoute;\n  });\n}\nfunction createShouldRevalidate(route, routeModules) {\n  return function (arg) {\n    let module = routeModules[route.id];\n    invariant(module, `Expected route module to be loaded for ${route.id}`);\n    if (module.shouldRevalidate) {\n      return module.shouldRevalidate(arg);\n    }\n    return arg.defaultShouldRevalidate;\n  };\n}\nasync function loadRouteModuleWithBlockingLinks(route, routeModules) {\n  let routeModule = await loadRouteModule(route, routeModules);\n  await prefetchStyleLinks(routeModule);\n  return routeModule;\n}\nfunction createDataFunction(route, routeModules, isAction) {\n  return async ({\n    request\n  }) => {\n    let routeModulePromise = loadRouteModuleWithBlockingLinks(route, routeModules);\n    try {\n      if (isAction && !route.hasAction) {\n        let msg = `Route \"${route.id}\" does not have an action, but you are trying ` + `to submit to it. To fix this, please add an \\`action\\` function to the route`;\n        console.error(msg);\n        throw new Error(msg);\n      } else if (!isAction && !route.hasLoader) {\n        return null;\n      }\n      let result = await fetchData(request, route.id);\n      if (result instanceof Error) {\n        throw result;\n      }\n      if (isRedirectResponse(result)) {\n        throw getRedirect(result);\n      }\n      if (isCatchResponse(result)) {\n        throw result;\n      }\n      if (isDeferredResponse(result) && result.body) {\n        return await parseDeferredReadableStream(result.body);\n      }\n      return result;\n    } finally {\n      await routeModulePromise;\n    }\n  };\n}\nfunction getRedirect(response) {\n  let status = parseInt(response.headers.get(\"X-Remix-Status\"), 10) || 302;\n  let url = response.headers.get(\"X-Remix-Redirect\");\n  let headers = {};\n  let revalidate = response.headers.get(\"X-Remix-Revalidate\");\n  if (revalidate) {\n    headers[\"X-Remix-Revalidate\"] = revalidate;\n  }\n  return redirect(url, {\n    status,\n    headers\n  });\n}\n\nexport { createClientRoutes, createServerRoutes };\n", "/**\n * @remix-run/react v1.11.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport { createBrowserRouter, RouterProvider } from 'react-router-dom';\nimport { useSyncExternalStore } from 'use-sync-external-store/shim';\nimport { RemixContext } from './components.js';\nimport { RemixErrorBoundary, RemixRootDefaultErrorBoundary } from './errorBoundaries.js';\nimport { deserializeErrors } from './errors.js';\nimport { createClientRoutes } from './routes.js';\n\n/* eslint-disable prefer-let/prefer-let */\n\nlet router;\n\n/**\n * The entry point for a Remix app when it is rendered in the browser (in\n * `app/entry.client.js`). This component is used by React to hydrate the HTML\n * that was received from the server.\n */\nfunction RemixBrowser(_props) {\n  if (!router) {\n    let routes = createClientRoutes(window.__remixManifest.routes, window.__remixRouteModules, window.__remixContext.future);\n    let hydrationData = window.__remixContext.state;\n    if (hydrationData && hydrationData.errors) {\n      hydrationData = {\n        ...hydrationData,\n        errors: deserializeErrors(hydrationData.errors)\n      };\n    }\n    router = createBrowserRouter(routes, {\n      hydrationData\n    });\n  }\n\n  // We need to include a wrapper RemixErrorBoundary here in case the root error\n  // boundary also throws and we need to bubble up outside of the router entirely.\n  // Then we need a stateful location here so the user can back-button navigate\n  // out of there\n  let location = useSyncExternalStore(router.subscribe, () => router.state.location, () => router.state.location);\n  return /*#__PURE__*/React.createElement(RemixContext.Provider, {\n    value: {\n      manifest: window.__remixManifest,\n      routeModules: window.__remixRouteModules,\n      future: window.__remixContext.future\n    }\n  }, /*#__PURE__*/React.createElement(RemixErrorBoundary, {\n    location: location,\n    component: RemixRootDefaultErrorBoundary\n  }, /*#__PURE__*/React.createElement(RouterProvider, {\n    router: router,\n    fallbackElement: null\n  })));\n}\n\nexport { RemixBrowser };\n", "/**\n * @remix-run/react v1.11.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport { extends as _extends } from './_virtual/_rollupPluginBabelHelpers.js';\nimport * as React from 'react';\nimport { useLocation, UNSAFE_useScrollRestoration } from 'react-router-dom';\nimport { useMatches } from './components.js';\n\nlet STORAGE_KEY = \"positions\";\n\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n *\n * @see https://remix.run/components/scroll-restoration\n */\nfunction ScrollRestoration({\n  getKey,\n  ...props\n}) {\n  let location = useLocation();\n  let matches = useMatches();\n  UNSAFE_useScrollRestoration({\n    getKey,\n    storageKey: STORAGE_KEY\n  });\n\n  // In order to support `getKey`, we need to compute a \"key\" here so we can\n  // hydrate that up so that SSR scroll restoration isn't waiting on React to\n  // hydrate. *However*, our key on the server is not the same as our key on\n  // the client!  So if the user's getKey implementation returns the SSR\n  // location key, then let's ignore it and let our inline <script> below pick\n  // up the client side history state key\n  let key = React.useMemo(() => {\n    if (!getKey) return null;\n    let userKey = getKey(location, matches);\n    return userKey !== location.key ? userKey : null;\n  },\n  // Nah, we only need this the first time for the SSR render\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  []);\n  let restoreScroll = ((STORAGE_KEY, restoreKey) => {\n    if (!window.history.state || !window.history.state.key) {\n      let key = Math.random().toString(32).slice(2);\n      window.history.replaceState({\n        key\n      }, \"\");\n    }\n    try {\n      let positions = JSON.parse(sessionStorage.getItem(STORAGE_KEY) || \"{}\");\n      let storedY = positions[restoreKey || window.history.state.key];\n      if (typeof storedY === \"number\") {\n        window.scrollTo(0, storedY);\n      }\n    } catch (error) {\n      console.error(error);\n      sessionStorage.removeItem(STORAGE_KEY);\n    }\n  }).toString();\n  return /*#__PURE__*/React.createElement(\"script\", _extends({}, props, {\n    suppressHydrationWarning: true,\n    dangerouslySetInnerHTML: {\n      __html: `(${restoreScroll})(${JSON.stringify(STORAGE_KEY)}, ${JSON.stringify(key)})`\n    }\n  }));\n}\n\nexport { ScrollRestoration };\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar React = require('react');\nvar router = require('@remix-run/router');\nvar reactRouterDom = require('react-router-dom');\n\nfunction _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = Object.create(null);\n    if (e) {\n        Object.keys(e).forEach(function (k) {\n            if (k !== 'default') {\n                var d = Object.getOwnPropertyDescriptor(e, k);\n                Object.defineProperty(n, k, d.get ? d : {\n                    enumerable: true,\n                    get: function () { return e[k]; }\n                });\n            }\n        });\n    }\n    n[\"default\"] = e;\n    return Object.freeze(n);\n}\n\nvar React__namespace = /*#__PURE__*/_interopNamespace(React);\n\n/**\n * A <Router> that may not navigate to any other location. This is useful\n * on the server where there is no stateful UI.\n */\n\nfunction StaticRouter({\n  basename,\n  children,\n  location: locationProp = \"/\"\n}) {\n  if (typeof locationProp === \"string\") {\n    locationProp = reactRouterDom.parsePath(locationProp);\n  }\n\n  let action = router.Action.Pop;\n  let location = {\n    pathname: locationProp.pathname || \"/\",\n    search: locationProp.search || \"\",\n    hash: locationProp.hash || \"\",\n    state: locationProp.state || null,\n    key: locationProp.key || \"default\"\n  };\n  let staticNavigator = getStatelessNavigator();\n  return /*#__PURE__*/React__namespace.createElement(reactRouterDom.Router, {\n    basename: basename,\n    children: children,\n    location: location,\n    navigationType: action,\n    navigator: staticNavigator,\n    static: true\n  });\n}\n/**\n * A Data Router that may not navigate to any other location. This is useful\n * on the server where there is no stateful UI.\n */\n\nfunction StaticRouterProvider({\n  context,\n  router: router$1,\n  hydrate = true,\n  nonce\n}) {\n  !(router$1 && context) ? process.env.NODE_ENV !== \"production\" ? router.invariant(false, \"You must provide `router` and `context` to <StaticRouterProvider>\") : router.invariant(false) : void 0;\n  let dataRouterContext = {\n    router: router$1,\n    navigator: getStatelessNavigator(),\n    static: true,\n    staticContext: context,\n    basename: context.basename || \"/\"\n  };\n  let hydrateScript = \"\";\n\n  if (hydrate !== false) {\n    let data = {\n      loaderData: context.loaderData,\n      actionData: context.actionData,\n      errors: serializeErrors(context.errors)\n    }; // Use JSON.parse here instead of embedding a raw JS object here to speed\n    // up parsing on the client.  Dual-stringify is needed to ensure all quotes\n    // are properly escaped in the resulting string.  See:\n    //   https://v8.dev/blog/cost-of-javascript-2019#json\n\n    let json = JSON.stringify(JSON.stringify(data));\n    hydrateScript = `window.__staticRouterHydrationData = JSON.parse(${json});`;\n  }\n\n  return /*#__PURE__*/React__namespace.createElement(React__namespace.Fragment, null, /*#__PURE__*/React__namespace.createElement(reactRouterDom.UNSAFE_DataRouterContext.Provider, {\n    value: dataRouterContext\n  }, /*#__PURE__*/React__namespace.createElement(reactRouterDom.UNSAFE_DataRouterStateContext.Provider, {\n    value: dataRouterContext.router.state\n  }, /*#__PURE__*/React__namespace.createElement(reactRouterDom.Router, {\n    basename: dataRouterContext.basename,\n    location: dataRouterContext.router.state.location,\n    navigationType: dataRouterContext.router.state.historyAction,\n    navigator: dataRouterContext.navigator\n  }, /*#__PURE__*/React__namespace.createElement(reactRouterDom.Routes, null)))), hydrateScript ? /*#__PURE__*/React__namespace.createElement(\"script\", {\n    suppressHydrationWarning: true,\n    nonce: nonce,\n    dangerouslySetInnerHTML: {\n      __html: hydrateScript\n    }\n  }) : null);\n}\n\nfunction serializeErrors(errors) {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized = {};\n\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // deserializeErrors in react-router-dom/index.tsx :)\n    if (router.isRouteErrorResponse(val)) {\n      serialized[key] = { ...val,\n        __type: \"RouteErrorResponse\"\n      };\n    } else if (val instanceof Error) {\n      // Do not serialize stack traces from SSR for security reasons\n      serialized[key] = {\n        message: val.message,\n        __type: \"Error\"\n      };\n    } else {\n      serialized[key] = val;\n    }\n  }\n\n  return serialized;\n}\n\nfunction getStatelessNavigator() {\n  return {\n    createHref,\n    encodeLocation,\n\n    push(to) {\n      throw new Error(`You cannot use navigator.push() on the server because it is a stateless ` + `environment. This error was probably triggered when you did a ` + `\\`navigate(${JSON.stringify(to)})\\` somewhere in your app.`);\n    },\n\n    replace(to) {\n      throw new Error(`You cannot use navigator.replace() on the server because it is a stateless ` + `environment. This error was probably triggered when you did a ` + `\\`navigate(${JSON.stringify(to)}, { replace: true })\\` somewhere ` + `in your app.`);\n    },\n\n    go(delta) {\n      throw new Error(`You cannot use navigator.go() on the server because it is a stateless ` + `environment. This error was probably triggered when you did a ` + `\\`navigate(${delta})\\` somewhere in your app.`);\n    },\n\n    back() {\n      throw new Error(`You cannot use navigator.back() on the server because it is a stateless ` + `environment.`);\n    },\n\n    forward() {\n      throw new Error(`You cannot use navigator.forward() on the server because it is a stateless ` + `environment.`);\n    }\n\n  };\n} // Temporary manifest generation - we should optimize this by combining the\n// tree-walks between convertRoutesToDataRoutes, enhanceManualRouteObjects,\n// and generateManifest.\n// Also look into getting rid of `route as AgnosticDataRouteObject` down below?\n\n\nfunction generateManifest(routes, manifest = new Map()) {\n  routes.forEach(route => {\n    manifest.set(route.id, route);\n\n    if (route.children) {\n      generateManifest(route.children, manifest);\n    }\n  });\n  return manifest;\n}\n\nfunction createStaticRouter(routes, context) {\n  let dataRoutes = router.UNSAFE_convertRoutesToDataRoutes(reactRouterDom.UNSAFE_enhanceManualRouteObjects(routes));\n  let manifest = generateManifest(dataRoutes); // Because our context matches may be from a framework-agnostic set of\n  // routes passed to createStaticHandler(), we update them here with our\n  // newly created/enhanced data routes\n\n  let matches = context.matches.map(match => {\n    let route = manifest.get(match.route.id) || match.route;\n    return { ...match,\n      route: route\n    };\n  });\n\n  let msg = method => `You cannot use router.${method}() on the server because it is a stateless environment`;\n\n  return {\n    get basename() {\n      return context.basename;\n    },\n\n    get state() {\n      return {\n        historyAction: router.Action.Pop,\n        location: context.location,\n        matches,\n        loaderData: context.loaderData,\n        actionData: context.actionData,\n        errors: context.errors,\n        initialized: true,\n        navigation: router.IDLE_NAVIGATION,\n        restoreScrollPosition: null,\n        preventScrollReset: false,\n        revalidation: \"idle\",\n        fetchers: new Map(),\n        blockers: new Map()\n      };\n    },\n\n    get routes() {\n      return dataRoutes;\n    },\n\n    initialize() {\n      throw msg(\"initialize\");\n    },\n\n    subscribe() {\n      throw msg(\"subscribe\");\n    },\n\n    enableScrollRestoration() {\n      throw msg(\"enableScrollRestoration\");\n    },\n\n    navigate() {\n      throw msg(\"navigate\");\n    },\n\n    fetch() {\n      throw msg(\"fetch\");\n    },\n\n    revalidate() {\n      throw msg(\"revalidate\");\n    },\n\n    createHref,\n    encodeLocation,\n\n    getFetcher() {\n      return router.IDLE_FETCHER;\n    },\n\n    deleteFetcher() {\n      throw msg(\"deleteFetcher\");\n    },\n\n    dispose() {\n      throw msg(\"dispose\");\n    },\n\n    getBlocker() {\n      throw msg(\"getBlocker\");\n    },\n\n    deleteBlocker() {\n      throw msg(\"deleteBlocker\");\n    },\n\n    _internalFetchControllers: new Map(),\n    _internalActiveDeferreds: new Map()\n  };\n}\n\nfunction createHref(to) {\n  return typeof to === \"string\" ? to : reactRouterDom.createPath(to);\n}\n\nfunction encodeLocation(to) {\n  // Locations should already be encoded on the server, so just return as-is\n  let path = typeof to === \"string\" ? reactRouterDom.parsePath(to) : to;\n  return {\n    pathname: path.pathname || \"\",\n    search: path.search || \"\",\n    hash: path.hash || \"\"\n  };\n}\n\nexports.StaticRouter = StaticRouter;\nexports.StaticRouterProvider = StaticRouterProvider;\nexports.createStaticRouter = createStaticRouter;\n", "/**\n * @remix-run/react v1.11.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport { createStaticRouter, StaticRouterProvider } from 'react-router-dom/server';\nimport { RemixContext } from './components.js';\nimport { RemixErrorBoundary, RemixRootDefaultErrorBoundary } from './errorBoundaries.js';\nimport { createServerRoutes } from './routes.js';\n\n/**\n * The entry point for a Remix app when it is rendered on the server (in\n * `app/entry.server.js`). This component is used to generate the HTML in the\n * response from the server.\n */\nfunction RemixServer({\n  context,\n  url,\n  abortDelay\n}) {\n  if (typeof url === \"string\") {\n    url = new URL(url);\n  }\n  let {\n    manifest,\n    routeModules,\n    serverHandoffString\n  } = context;\n  let routes = createServerRoutes(manifest.routes, routeModules, context.future);\n  let router = createStaticRouter(routes, context.staticHandlerContext);\n  return /*#__PURE__*/React.createElement(RemixContext.Provider, {\n    value: {\n      manifest,\n      routeModules,\n      serverHandoffString,\n      future: context.future,\n      abortDelay\n    }\n  }, /*#__PURE__*/React.createElement(RemixErrorBoundary, {\n    location: router.state.location,\n    component: RemixRootDefaultErrorBoundary\n  }, /*#__PURE__*/React.createElement(StaticRouterProvider, {\n    router: router,\n    context: context.staticHandlerContext,\n    hydrate: false\n  })));\n}\n\nexport { RemixServer };\n", "/**\n * @remix-run/react v1.11.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nexport { RemixBrowser } from './browser.js';\nexport { Form, Outlet, isRouteErrorResponse, useAsyncError, useAsyncValue, useBeforeUnload, useFormAction, useHref, useLocation, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useSearchParams, useSubmit } from 'react-router-dom';\nexport { Await, Link, Links, LiveReload, Meta, NavLink, PrefetchPageLinks, Scripts, RemixContext as UNSAFE_RemixContext, useActionData, useFetcher, useFetchers, useLoaderData, useMatches, useTransition } from './components.js';\nexport { useCatch } from './errorBoundaries.js';\nexport { ScrollRestoration } from './scroll-restoration.js';\nexport { RemixServer } from './server.js';\n"],
  "mappings": "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",
  "names": ["createMemoryHistory", "options", "initialEntries", "initialIndex", "v5Compat", "entries", "map", "entry", "index", "createMemoryLocation", "state", "undefined", "clampIndex", "length", "action", "Action", "Pop", "listener", "n", "Math", "min", "max", "getCurrentLocation", "to", "key", "location", "createLocation", "pathname", "warning", "charAt", "JSON", "stringify", "createHref", "createPath", "history", "createURL", "URL", "encodeLocation", "path", "parsePath", "search", "hash", "push", "Push", "nextLocation", "splice", "delta", "replace", "Replace", "go", "nextIndex", "listen", "fn", "createBrowserHistory", "createBrowserLocation", "window", "globalHistory", "usr", "createBrowserHref", "getUrlBasedHistory", "createHashHistory", "createHashLocation", "substr", "createHashHref", "base", "document", "querySelector", "href", "getAttribute", "url", "hashIndex", "indexOf", "slice", "validateHashLocation", "invariant", "value", "message", "Error", "cond", "console", "warn", "e", "createKey", "random", "toString", "getHistoryState", "idx", "current", "parsedPath", "searchIndex", "getLocation", "validateLocation", "defaultView", "getIndex", "replaceState", "handlePop", "nextAction", "historyState", "pushState", "error", "assign", "origin", "addEventListener", "PopStateEventType", "removeEventListener", "isIndexRoute", "route", "convertRoutesToDataRoutes", "routes", "parentPath", "allIds", "Set", "treePath", "id", "join", "children", "has", "add", "indexRoute", "pathOrLayoutRoute", "matchRoutes", "locationArg", "basename", "stripBasename", "branches", "flattenRoutes", "rankRouteBranches", "matches", "i", "matchRouteBranch", "safelyDecodeURI", "parentsMeta", "flattenRoute", "relativePath", "meta", "caseSensitive", "childrenIndex", "startsWith", "joinPaths", "routesMeta", "concat", "score", "computeScore", "forEach", "includes", "exploded", "explodeOptionalSegments", "segments", "split", "first", "rest", "isOptional", "endsWith", "required", "restExploded", "result", "subpath", "sort", "a", "b", "compareIndexes", "initialScore", "some", "isSplat", "splatPenalty", "indexRouteValue", "filter", "s", "reduce", "segment", "paramRe", "test", "dynamicSegmentValue", "emptySegmentValue", "staticSegmentValue", "siblings", "every", "branch", "matchedParams", "matchedPathname", "end", "remainingPathname", "match", "matchPath", "Object", "params", "pathnameBase", "normalizePathname", "generatePath", "originalPath", "_", "optional", "param", "prefix", "__", "str", "star", "pattern", "matcher", "paramNames", "compilePath", "captureGroups", "memo", "paramName", "splatValue", "safelyDecodeURIComponent", "regexpSource", "RegExp", "decodeURI", "decodeURIComponent", "toLowerCase", "startIndex", "nextChar", "resolvePath", "fromPathname", "toPathname", "resolvePathname", "normalizeSearch", "normalizeHash", "relativeSegments", "pop", "getInvalidPathError", "char", "field", "dest", "getPathContributingMatches", "resolveTo", "toArg", "routePathnames", "locationPathname", "isPathRelative", "isEmptyPath", "from", "routePathnameIndex", "toSegments", "shift", "hasExplicitTrailingSlash", "hasCurrentTrailingSlash", "getToPathname", "isTrackedPromise", "Promise", "_tracked", "unwrapTrackedPromise", "_error", "_data", "isRouteErrorResponse", "ErrorResponse", "createRouter", "init", "dataRoutes", "unlistenHistory", "subscribers", "savedScrollPositions", "getScrollRestorationKey", "getScrollPosition", "initialScrollRestored", "hydrationData", "initialMatches", "initialErrors", "getInternalRouterError", "getShortCircuitMatches", "initialized", "m", "loader", "router", "historyAction", "navigation", "IDLE_NAVIGATION", "restoreScrollPosition", "preventScrollReset", "revalidation", "loaderData", "actionData", "errors", "fetchers", "Map", "blockers", "pendingAction", "HistoryAction", "pendingPreventScrollReset", "pendingNavigationController", "isUninterruptedRevalidation", "isRevalidationRequired", "cancelledDeferredRoutes", "cancelledFetcherLoads", "fetchControllers", "incrementingLoadId", "pendingNavigationLoadId", "fetchReloadIds", "fetchRedirectIds", "fetchLoadMatches", "activeDeferreds", "activeBlocker", "blockerFunctions", "ignoreNextHistoryUpdate", "initialize", "blockerKey", "shouldBlockNavigation", "currentLocation", "updateBlocker", "proceed", "reset", "deleteBlocker", "updateState", "startNavigation", "dispose", "clear", "abort", "deleteFetcher", "subscribe", "delete", "newState", "subscriber", "completeNavigation", "isActionReload", "formMethod", "isMutationMethod", "_isRedirect", "keys", "mergeLoaderData", "getSavedScrollPosition", "navigate", "opts", "submission", "normalizeNavigateOptions", "userReplace", "formAction", "pendingError", "revalidate", "interruptActiveLoads", "startUninterruptedRevalidation", "overrideNavigation", "saveScrollPosition", "loadingNavigation", "notFoundMatches", "cancelActiveDeferreds", "isHashChangeOnly", "AbortController", "request", "createClientSideRequest", "signal", "pendingActionData", "findNearestBoundary", "actionOutput", "handleAction", "shortCircuited", "pendingActionError", "Request", "handleLoaders", "actionMatch", "getTargetMatch", "type", "ResultType", "method", "routeId", "callLoaderOrAction", "aborted", "isRedirectResult", "startRedirectNavigation", "isErrorResult", "boundaryMatch", "isDeferredResult", "data", "formEncType", "formData", "activeSubmission", "matchesToLoad", "revalidatingFetchers", "getMatchesToLoad", "fetcher", "get", "revalidatingFetcher", "set", "results", "loaderResults", "fetcherResults", "callLoadersAndMaybeResolveData", "redirect", "findRedirect", "processLoaderData", "deferredData", "done", "markFetchRedirectsDone", "didAbortFetchLoads", "abortStaleFetchLoads", "getFetcher", "IDLE_FETCHER", "fetch", "isServer", "abortFetcher", "setFetcherError", "handleFetcherAction", "handleFetcherLoader", "requestMatches", "existingFetcher", "abortController", "fetchRequest", "actionResult", "loadingFetcher", "isFetchActionRedirect", "revalidationRequest", "loadId", "loadFetcher", "staleKey", "doneFetcher", "resolveDeferredData", "redirectLocation", "_isFetchActionRedirect", "isBrowser", "newOrigin", "redirectHistoryAction", "redirectPreserveMethodStatusCodes", "status", "currentMatches", "fetchersToLoad", "all", "fetchMatches", "resolveDeferredResults", "controller", "markFetchersDone", "doneKeys", "landedId", "yeetedKeys", "getBlocker", "blocker", "IDLE_BLOCKER", "newBlocker", "blockerFunction", "predicate", "cancelledRouteIds", "dfd", "cancel", "enableScrollRestoration", "positions", "getPosition", "getKey", "y", "userMatches", "createUseMatchesMatch", "_internalFetchControllers", "_internalActiveDeferreds", "createStaticHandler", "query", "requestContext", "isValidMethod", "methodNotAllowedMatches", "statusCode", "loaderHeaders", "actionHeaders", "queryImpl", "isResponse", "queryRoute", "find", "values", "UNSAFE_DEFERRED_SYMBOL", "routeMatch", "submit", "loadRouteData", "isQueryRouteResponse", "isRedirectResponse", "response", "isRouteRequest", "Response", "headers", "Location", "context", "loaderRequest", "getLoaderMatchesUntilBoundary", "acc", "processRouteLoaderData", "executedLoaders", "size", "fromEntries", "getStaticContextFromError", "newContext", "_deepestRenderedBoundaryId", "isSubmissionNavigation", "isFetcher", "stripHashFromPath", "searchParams", "convertFormDataToSearchParams", "hasNakedIndexQuery", "append", "boundaryId", "boundaryMatches", "findIndex", "navigationMatches", "isNewLoader", "shouldRevalidateLoader", "shouldRevalidate", "currentLoaderData", "currentMatch", "isNew", "isMissingData", "isNewRouteInstance", "currentPath", "currentUrl", "currentParams", "nextUrl", "nextParams", "defaultShouldRevalidate", "routeChoice", "isStaticRequest", "resultType", "reject", "abortPromise", "r", "onReject", "handler", "race", "redirectStatusCodes", "isAbsolute", "activeMatches", "resolvedLocation", "protocol", "contentType", "json", "text", "statusText", "DeferredData", "deferred", "toUpperCase", "body", "URLSearchParams", "foundError", "newLoaderData", "mergedLoaderData", "hasOwnProperty", "eligibleMatches", "reverse", "hasErrorBoundary", "errorMessage", "obj", "validRequestMethods", "validMutationMethods", "isRevalidatingLoader", "then", "unwrap", "resolveData", "unwrappedData", "getAll", "v", "handle", "pathMatches", "AbortedDeferredError", "defer", "validMutationMethodsArr", "validRequestMethodsArr", "paths", "responseInit", "Headers", "constructor", "pendingKeysSet", "deferredKeys", "Array", "isArray", "onAbort", "unlistenAbortSignal", "trackPromise", "promise", "onSettle", "catch", "defineProperty", "emit", "settledKey", "k", "resolve", "pendingKeys", "internal", "createElement", "Symbol", "isPolyfill", "x", "y", "useSyncExternalStore", "subscribe", "getSnapshot", "getServerSnapshot", "didWarnOld18Alpha", "React", "console", "error", "value", "didWarnUncachedGetSnapshot", "cachedValue", "is", "inst", "forceUpdate", "useState", "useLayoutEffect", "checkIfSnapshotChanged", "useEffect", "handleStoreChange", "useDebugValue", "latestGetSnapshot", "prevValue", "nextValue", "useHref", "to", "relative", "useInRouterContext", "invariant", "basename", "navigator", "useContext", "NavigationContext", "hash", "pathname", "search", "useResolvedPath", "joinedPathname", "joinPaths", "createHref", "LocationContext", "useLocation", "location", "useNavigationType", "navigationType", "useMatch", "pattern", "useMemo", "matchPath", "useNavigate", "matches", "RouteContext", "locationPathname", "routePathnamesJson", "JSON", "stringify", "getPathContributingMatches", "map", "match", "pathnameBase", "activeRef", "useRef", "current", "navigate", "useCallback", "options", "warning", "go", "path", "resolveTo", "parse", "replace", "push", "state", "useOutletContext", "OutletContext", "useOutlet", "context", "outlet", "useParams", "routeMatch", "length", "params", "useRoutes", "routes", "locationArg", "dataRouterStateContext", "DataRouterStateContext", "parentMatches", "parentParams", "parentPathname", "parentPathnameBase", "parentRoute", "route", "parentPath", "warningOnce", "endsWith", "locationFromContext", "parsedLocationArg", "parsePath", "startsWith", "remainingPathname", "slice", "matchRoutes", "element", "undefined", "renderedMatches", "_renderMatches", "Object", "assign", "encodeLocation", "_extends", "key", "NavigationType", "Pop", "DefaultErrorElement", "useRouteError", "message", "isRouteErrorResponse", "status", "statusText", "Error", "stack", "lightgrey", "preStyles", "padding", "backgroundColor", "codeStyles", "fontStyle", "RenderedRoute", "routeContext", "children", "dataRouterContext", "DataRouterContext", "static", "staticContext", "errorElement", "_deepestRenderedBoundaryId", "id", "dataRouterState", "errors", "errorIndex", "findIndex", "m", "Math", "min", "reduceRight", "index", "concat", "getChildren", "getDataRouterConsoleError", "hookName", "useDataRouterContext", "ctx", "useDataRouterState", "useRouteContext", "useCurrentRouteId", "thisRoute", "useNavigation", "DataRouterStateHook", "UseNavigation", "navigation", "useRevalidator", "DataRouterHook", "UseRevalidator", "revalidate", "router", "revalidation", "useMatches", "loaderData", "UseMatches", "data", "handle", "useLoaderData", "UseLoaderData", "routeId", "useRouteLoaderData", "UseRouteLoaderData", "useActionData", "UseActionData", "values", "actionData", "RouteErrorContext", "UseRouteError", "useAsyncValue", "AwaitContext", "_data", "useAsyncError", "_error", "useBlocker", "shouldBlock", "UseBlocker", "blockerFunction", "args", "blocker", "getBlocker", "blockerKey", "deleteBlocker", "cond", "alreadyWarned", "RouterProvider", "fallbackElement", "useSyncExternalStoreShim", "n", "opts", "preventScrollReset", "historyAction", "initialized", "MemoryRouter", "initialEntries", "initialIndex", "historyRef", "createMemoryHistory", "v5Compat", "history", "setState", "action", "listen", "Navigate", "Outlet", "props", "Route", "_props", "Router", "basenameProp", "locationProp", "staticProp", "navigationContext", "trailingPathname", "stripBasename", "Routes", "createRoutesFromChildren", "Await", "resolve", "ResolveAwait", "toRender", "Children", "forEach", "isValidElement", "type", "Fragment", "apply", "name", "treePath", "join", "caseSensitive", "loader", "hasErrorBoundary", "shouldRevalidate", "renderMatches", "enhanceManualRouteObjects", "routeClone", "createMemoryRouter", "createRouter", "hydrationData", "initialize", "canUseDOM", "isServerEnvironment", "shim", "RenderErrorBoundary", "AwaitRenderStatus", "neverSettledPromise", "AwaitErrorBoundary", "window", "document", "createElement", "server", "client", "module", "createContext", "displayName", "Component", "constructor", "getDerivedStateFromError", "getDerivedStateFromProps", "componentDidCatch", "errorInfo", "render", "component", "Promise", "promise", "pending", "success", "defineProperty", "get", "renderError", "reject", "catch", "_tracked", "then", "AbortedDeferredError", "isHtmlElement", "object", "tagName", "isButtonElement", "toLowerCase", "isFormElement", "isInputElement", "isModifiedEvent", "event", "metaKey", "altKey", "ctrlKey", "shiftKey", "shouldProcessLinkClick", "target", "button", "createSearchParams", "init", "URLSearchParams", "Array", "isArray", "Object", "keys", "reduce", "memo", "key", "value", "concat", "map", "v", "getSearchParamsForLocation", "locationSearch", "defaultSearchParams", "searchParams", "has", "getAll", "forEach", "append", "getFormSubmissionInfo", "defaultAction", "options", "method", "action", "encType", "formData", "submissionTrigger", "getAttribute", "defaultMethod", "defaultEncType", "FormData", "name", "type", "form", "Error", "protocol", "host", "window", "location", "url", "URL", "createBrowserRouter", "routes", "opts", "createRouter", "basename", "history", "createBrowserHistory", "hydrationData", "parseHydrationData", "enhanceManualRouteObjects", "initialize", "createHashRouter", "createHashHistory", "state", "__staticRouterHydrationData", "errors", "_extends", "deserializeErrors", "entries", "serialized", "val", "__type", "ErrorResponse", "status", "statusText", "data", "internal", "error", "message", "stack", "BrowserRouter", "children", "historyRef", "useRef", "current", "v5Compat", "setState", "useState", "React", "useLayoutEffect", "listen", "createElement", "Router", "navigationType", "navigator", "HashRouter", "HistoryRouter", "ScrollRestoration", "getKey", "storageKey", "useScrollRestoration", "getDataRouterConsoleError", "hookName", "useDataRouterContext", "ctx", "useContext", "DataRouterContext", "invariant", "useDataRouterState", "DataRouterStateContext", "useLinkClickHandler", "to", "replace", "replaceProp", "preventScrollReset", "relative", "navigate", "useNavigate", "useLocation", "path", "useResolvedPath", "useCallback", "preventDefault", "undefined", "createPath", "useSearchParams", "defaultInit", "warning", "defaultSearchParamsRef", "useMemo", "search", "setSearchParams", "nextInit", "navigateOptions", "newSearchParams", "useSubmit", "useSubmitImpl", "fetcherKey", "routeId", "router", "DataRouterHook", "UseSubmitImpl", "useFormAction", "document", "href", "pathname", "formMethod", "formEncType", "fetch", "NavigationContext", "routeContext", "RouteContext", "match", "matches", "slice", "hash", "route", "index", "params", "delete", "toString", "joinPaths", "createFetcherForm", "FetcherForm", "forwardRef", "props", "ref", "FormImpl", "displayName", "useFetcher", "UseFetcher", "length", "id", "String", "fetcherId", "Form", "load", "submit", "fetcher", "getFetcher", "fetcherWithComponents", "useEffect", "console", "warn", "deleteFetcher", "useFetchers", "DataRouterStateHook", "UseFetchers", "fetchers", "values", "UseScrollRestoration", "restoreScrollPosition", "useMatches", "navigation", "useNavigation", "scrollRestoration", "useBeforeUnload", "savedScrollPositions", "scrollY", "sessionStorage", "setItem", "SCROLL_RESTORATION_STORAGE_KEY", "JSON", "stringify", "sessionPositions", "getItem", "parse", "e", "disableScrollRestoration", "enableScrollRestoration", "scrollTo", "el", "getElementById", "scrollIntoView", "callback", "capture", "addEventListener", "removeEventListener", "usePrompt", "when", "blocker", "useBlocker", "reset", "proceed", "confirm", "setTimeout", "cond", "Link", "NavLink", "LinkWithRef", "onClick", "reloadDocument", "rest", "useHref", "internalOnClick", "handleClick", "defaultPrevented", "NavLinkWithRef", "ariaCurrentProp", "caseSensitive", "className", "classNameProp", "end", "style", "styleProp", "routerState", "toPathname", "encodeLocation", "locationPathname", "nextLocationPathname", "isActive", "startsWith", "charAt", "isPending", "ariaCurrent", "filter", "Boolean", "join", "forwardedRef", "onSubmit", "formAction", "submitHandler", "submitter", "nativeEvent", "submitMethod", "currentTarget", "React", "is", "useState", "useEffect", "useLayoutEffect", "useDebugValue", "didWarnOld18Alpha", "didWarnUncachedGetSnapshot", "useSyncExternalStore", "checkIfSnapshotChanged", "error", "useSyncExternalStore$1", "canUseDOM", "isServerEnvironment", "shim", "useSyncExternalStore$2", "_extends", "React__default", "Component", "init_dist", "invariant", "init_dist", "IDLE_FETCHER", "useDataRouterContext", "invariant", "Component", "_extends", "React", "router", "Await", "matches", "dedupe", "useMatches", "useLoaderData", "useActionData", "transition", "useFetchers", "useFetcher", "fetcher", "IDLE_FETCHER", "NavLink", "Link", "init_dist", "LiveReload", "deserializeErrors", "isRedirectResponse", "value", "invariant", "isRedirectResponse", "React", "init_dist", "deserializeErrors", "React", "init_dist", "ScrollRestoration", "useMatches", "STORAGE_KEY", "key", "_extends", "React", "init_dist", "React", "router", "StaticRouterProvider", "json", "createStaticRouter", "router", "React", "Await", "Link", "NavLink", "ScrollRestoration", "useActionData", "useFetcher", "useFetchers", "useLoaderData", "useMatches", "init_dist"]
}
